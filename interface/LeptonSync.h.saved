#ifndef __LeptonSync__hh
#define __LeptonSync__hh

#define NEL(x) (sizeof((x))/sizeof((x)[0]))

#include "configana.h"

#include <fstream>
#include <string>
#include <vector>
#include <map>
#include <algorithm>
#include <cmath>
#include "TLorentzVector.h"
#include "TVector.h"
#include "TProfile.h"

#include "PhysicsObjects.h"
#include "AnaBase.h"

class LeptonSync : public AnaBase{
  public :
    LeptonSync();
    ~LeptonSync(){}
   
    void muonSelector();
    void electronSelector();
    void pfphotonSelector();
    //void clear();
    
    void eventLoop();  // the main analysis
    bool beginJob();
    void endJob();
    void clearLists();
    
    void selectEvent(){};
    virtual void bookHistograms();
  private :
    bool _dumpEvent;
    std::vector<vhtm::Muon> loosemuVec_,tightmuVec_;
    std::vector<vhtm::Electron> looseeleVec_,tighteleVec_;
    std::vector<vhtm::PackedPFCandidate> pfphotonVec_;
    std::vector< std::pair< vhtm::Electron, std::vector<vhtm::PackedPFCandidate> >> looseElePhoFSRpair_;
    std::vector< std::pair< vhtm::Muon, std::vector<vhtm::PackedPFCandidate> > > looseMuPhoFSRpair_;

};
#endif
