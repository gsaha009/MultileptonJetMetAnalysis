//
// File generated by rootcint at Mon Dec 29 19:52:50 2014

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME Dict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "Dict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef pair< ::string, unsigned int > pairlEstringcOunsignedsPintgR;
      #else
      class pairlEstringcOunsignedsPintgR  {
         public:
         //friend XX;
         string first; //
         unsigned int second; //
      };
      #endif

   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void vhtmcLcLCandidate_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_vhtmcLcLCandidate(void *p = 0);
   static void *newArray_vhtmcLcLCandidate(Long_t size, void *p);
   static void delete_vhtmcLcLCandidate(void *p);
   static void deleteArray_vhtmcLcLCandidate(void *p);
   static void destruct_vhtmcLcLCandidate(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::vhtm::Candidate*)
   {
      ::vhtm::Candidate *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::vhtm::Candidate >(0);
      static ::ROOT::TGenericClassInfo 
         instance("vhtm::Candidate", ::vhtm::Candidate::Class_Version(), "./interface/PhysicsObjects.h", 11,
                  typeid(::vhtm::Candidate), ::ROOT::DefineBehavior(ptr, ptr),
                  &::vhtm::Candidate::Dictionary, isa_proxy, 4,
                  sizeof(::vhtm::Candidate) );
      instance.SetNew(&new_vhtmcLcLCandidate);
      instance.SetNewArray(&newArray_vhtmcLcLCandidate);
      instance.SetDelete(&delete_vhtmcLcLCandidate);
      instance.SetDeleteArray(&deleteArray_vhtmcLcLCandidate);
      instance.SetDestructor(&destruct_vhtmcLcLCandidate);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::vhtm::Candidate*)
   {
      return GenerateInitInstanceLocal((::vhtm::Candidate*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::vhtm::Candidate*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void vhtmcLcLEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_vhtmcLcLEvent(void *p = 0);
   static void *newArray_vhtmcLcLEvent(Long_t size, void *p);
   static void delete_vhtmcLcLEvent(void *p);
   static void deleteArray_vhtmcLcLEvent(void *p);
   static void destruct_vhtmcLcLEvent(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::vhtm::Event*)
   {
      ::vhtm::Event *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::vhtm::Event >(0);
      static ::ROOT::TGenericClassInfo 
         instance("vhtm::Event", ::vhtm::Event::Class_Version(), "./interface/PhysicsObjects.h", 23,
                  typeid(::vhtm::Event), ::ROOT::DefineBehavior(ptr, ptr),
                  &::vhtm::Event::Dictionary, isa_proxy, 4,
                  sizeof(::vhtm::Event) );
      instance.SetNew(&new_vhtmcLcLEvent);
      instance.SetNewArray(&newArray_vhtmcLcLEvent);
      instance.SetDelete(&delete_vhtmcLcLEvent);
      instance.SetDeleteArray(&deleteArray_vhtmcLcLEvent);
      instance.SetDestructor(&destruct_vhtmcLcLEvent);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::vhtm::Event*)
   {
      return GenerateInitInstanceLocal((::vhtm::Event*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::vhtm::Event*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void vhtmcLcLGenEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_vhtmcLcLGenEvent(void *p = 0);
   static void *newArray_vhtmcLcLGenEvent(Long_t size, void *p);
   static void delete_vhtmcLcLGenEvent(void *p);
   static void deleteArray_vhtmcLcLGenEvent(void *p);
   static void destruct_vhtmcLcLGenEvent(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::vhtm::GenEvent*)
   {
      ::vhtm::GenEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::vhtm::GenEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("vhtm::GenEvent", ::vhtm::GenEvent::Class_Version(), "./interface/PhysicsObjects.h", 54,
                  typeid(::vhtm::GenEvent), ::ROOT::DefineBehavior(ptr, ptr),
                  &::vhtm::GenEvent::Dictionary, isa_proxy, 4,
                  sizeof(::vhtm::GenEvent) );
      instance.SetNew(&new_vhtmcLcLGenEvent);
      instance.SetNewArray(&newArray_vhtmcLcLGenEvent);
      instance.SetDelete(&delete_vhtmcLcLGenEvent);
      instance.SetDeleteArray(&deleteArray_vhtmcLcLGenEvent);
      instance.SetDestructor(&destruct_vhtmcLcLGenEvent);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::vhtm::GenEvent*)
   {
      return GenerateInitInstanceLocal((::vhtm::GenEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::vhtm::GenEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void vhtmcLcLElectron_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_vhtmcLcLElectron(void *p = 0);
   static void *newArray_vhtmcLcLElectron(Long_t size, void *p);
   static void delete_vhtmcLcLElectron(void *p);
   static void deleteArray_vhtmcLcLElectron(void *p);
   static void destruct_vhtmcLcLElectron(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::vhtm::Electron*)
   {
      ::vhtm::Electron *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::vhtm::Electron >(0);
      static ::ROOT::TGenericClassInfo 
         instance("vhtm::Electron", ::vhtm::Electron::Class_Version(), "./interface/PhysicsObjects.h", 66,
                  typeid(::vhtm::Electron), ::ROOT::DefineBehavior(ptr, ptr),
                  &::vhtm::Electron::Dictionary, isa_proxy, 4,
                  sizeof(::vhtm::Electron) );
      instance.SetNew(&new_vhtmcLcLElectron);
      instance.SetNewArray(&newArray_vhtmcLcLElectron);
      instance.SetDelete(&delete_vhtmcLcLElectron);
      instance.SetDeleteArray(&deleteArray_vhtmcLcLElectron);
      instance.SetDestructor(&destruct_vhtmcLcLElectron);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::vhtm::Electron*)
   {
      return GenerateInitInstanceLocal((::vhtm::Electron*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::vhtm::Electron*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void vhtmcLcLGenParticle_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_vhtmcLcLGenParticle(void *p = 0);
   static void *newArray_vhtmcLcLGenParticle(Long_t size, void *p);
   static void delete_vhtmcLcLGenParticle(void *p);
   static void deleteArray_vhtmcLcLGenParticle(void *p);
   static void destruct_vhtmcLcLGenParticle(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::vhtm::GenParticle*)
   {
      ::vhtm::GenParticle *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::vhtm::GenParticle >(0);
      static ::ROOT::TGenericClassInfo 
         instance("vhtm::GenParticle", ::vhtm::GenParticle::Class_Version(), "./interface/PhysicsObjects.h", 136,
                  typeid(::vhtm::GenParticle), ::ROOT::DefineBehavior(ptr, ptr),
                  &::vhtm::GenParticle::Dictionary, isa_proxy, 4,
                  sizeof(::vhtm::GenParticle) );
      instance.SetNew(&new_vhtmcLcLGenParticle);
      instance.SetNewArray(&newArray_vhtmcLcLGenParticle);
      instance.SetDelete(&delete_vhtmcLcLGenParticle);
      instance.SetDeleteArray(&deleteArray_vhtmcLcLGenParticle);
      instance.SetDestructor(&destruct_vhtmcLcLGenParticle);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::vhtm::GenParticle*)
   {
      return GenerateInitInstanceLocal((::vhtm::GenParticle*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::vhtm::GenParticle*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void vhtmcLcLGenJet_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_vhtmcLcLGenJet(void *p = 0);
   static void *newArray_vhtmcLcLGenJet(Long_t size, void *p);
   static void delete_vhtmcLcLGenJet(void *p);
   static void deleteArray_vhtmcLcLGenJet(void *p);
   static void destruct_vhtmcLcLGenJet(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::vhtm::GenJet*)
   {
      ::vhtm::GenJet *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::vhtm::GenJet >(0);
      static ::ROOT::TGenericClassInfo 
         instance("vhtm::GenJet", ::vhtm::GenJet::Class_Version(), "./interface/PhysicsObjects.h", 163,
                  typeid(::vhtm::GenJet), ::ROOT::DefineBehavior(ptr, ptr),
                  &::vhtm::GenJet::Dictionary, isa_proxy, 4,
                  sizeof(::vhtm::GenJet) );
      instance.SetNew(&new_vhtmcLcLGenJet);
      instance.SetNewArray(&newArray_vhtmcLcLGenJet);
      instance.SetDelete(&delete_vhtmcLcLGenJet);
      instance.SetDeleteArray(&deleteArray_vhtmcLcLGenJet);
      instance.SetDestructor(&destruct_vhtmcLcLGenJet);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::vhtm::GenJet*)
   {
      return GenerateInitInstanceLocal((::vhtm::GenJet*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::vhtm::GenJet*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void vhtmcLcLMET_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_vhtmcLcLMET(void *p = 0);
   static void *newArray_vhtmcLcLMET(Long_t size, void *p);
   static void delete_vhtmcLcLMET(void *p);
   static void deleteArray_vhtmcLcLMET(void *p);
   static void destruct_vhtmcLcLMET(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::vhtm::MET*)
   {
      ::vhtm::MET *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::vhtm::MET >(0);
      static ::ROOT::TGenericClassInfo 
         instance("vhtm::MET", ::vhtm::MET::Class_Version(), "./interface/PhysicsObjects.h", 178,
                  typeid(::vhtm::MET), ::ROOT::DefineBehavior(ptr, ptr),
                  &::vhtm::MET::Dictionary, isa_proxy, 4,
                  sizeof(::vhtm::MET) );
      instance.SetNew(&new_vhtmcLcLMET);
      instance.SetNewArray(&newArray_vhtmcLcLMET);
      instance.SetDelete(&delete_vhtmcLcLMET);
      instance.SetDeleteArray(&deleteArray_vhtmcLcLMET);
      instance.SetDestructor(&destruct_vhtmcLcLMET);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::vhtm::MET*)
   {
      return GenerateInitInstanceLocal((::vhtm::MET*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::vhtm::MET*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void vhtmcLcLTau_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_vhtmcLcLTau(void *p = 0);
   static void *newArray_vhtmcLcLTau(Long_t size, void *p);
   static void delete_vhtmcLcLTau(void *p);
   static void deleteArray_vhtmcLcLTau(void *p);
   static void destruct_vhtmcLcLTau(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::vhtm::Tau*)
   {
      ::vhtm::Tau *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::vhtm::Tau >(0);
      static ::ROOT::TGenericClassInfo 
         instance("vhtm::Tau", ::vhtm::Tau::Class_Version(), "./interface/PhysicsObjects.h", 192,
                  typeid(::vhtm::Tau), ::ROOT::DefineBehavior(ptr, ptr),
                  &::vhtm::Tau::Dictionary, isa_proxy, 4,
                  sizeof(::vhtm::Tau) );
      instance.SetNew(&new_vhtmcLcLTau);
      instance.SetNewArray(&newArray_vhtmcLcLTau);
      instance.SetDelete(&delete_vhtmcLcLTau);
      instance.SetDeleteArray(&deleteArray_vhtmcLcLTau);
      instance.SetDestructor(&destruct_vhtmcLcLTau);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::vhtm::Tau*)
   {
      return GenerateInitInstanceLocal((::vhtm::Tau*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::vhtm::Tau*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void vhtmcLcLMuon_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_vhtmcLcLMuon(void *p = 0);
   static void *newArray_vhtmcLcLMuon(Long_t size, void *p);
   static void delete_vhtmcLcLMuon(void *p);
   static void deleteArray_vhtmcLcLMuon(void *p);
   static void destruct_vhtmcLcLMuon(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::vhtm::Muon*)
   {
      ::vhtm::Muon *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::vhtm::Muon >(0);
      static ::ROOT::TGenericClassInfo 
         instance("vhtm::Muon", ::vhtm::Muon::Class_Version(), "./interface/PhysicsObjects.h", 271,
                  typeid(::vhtm::Muon), ::ROOT::DefineBehavior(ptr, ptr),
                  &::vhtm::Muon::Dictionary, isa_proxy, 4,
                  sizeof(::vhtm::Muon) );
      instance.SetNew(&new_vhtmcLcLMuon);
      instance.SetNewArray(&newArray_vhtmcLcLMuon);
      instance.SetDelete(&delete_vhtmcLcLMuon);
      instance.SetDeleteArray(&deleteArray_vhtmcLcLMuon);
      instance.SetDestructor(&destruct_vhtmcLcLMuon);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::vhtm::Muon*)
   {
      return GenerateInitInstanceLocal((::vhtm::Muon*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::vhtm::Muon*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void vhtmcLcLJet_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_vhtmcLcLJet(void *p = 0);
   static void *newArray_vhtmcLcLJet(Long_t size, void *p);
   static void delete_vhtmcLcLJet(void *p);
   static void deleteArray_vhtmcLcLJet(void *p);
   static void destruct_vhtmcLcLJet(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::vhtm::Jet*)
   {
      ::vhtm::Jet *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::vhtm::Jet >(0);
      static ::ROOT::TGenericClassInfo 
         instance("vhtm::Jet", ::vhtm::Jet::Class_Version(), "./interface/PhysicsObjects.h", 336,
                  typeid(::vhtm::Jet), ::ROOT::DefineBehavior(ptr, ptr),
                  &::vhtm::Jet::Dictionary, isa_proxy, 4,
                  sizeof(::vhtm::Jet) );
      instance.SetNew(&new_vhtmcLcLJet);
      instance.SetNewArray(&newArray_vhtmcLcLJet);
      instance.SetDelete(&delete_vhtmcLcLJet);
      instance.SetDeleteArray(&deleteArray_vhtmcLcLJet);
      instance.SetDestructor(&destruct_vhtmcLcLJet);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::vhtm::Jet*)
   {
      return GenerateInitInstanceLocal((::vhtm::Jet*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::vhtm::Jet*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void vhtmcLcLVertex_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_vhtmcLcLVertex(void *p = 0);
   static void *newArray_vhtmcLcLVertex(Long_t size, void *p);
   static void delete_vhtmcLcLVertex(void *p);
   static void deleteArray_vhtmcLcLVertex(void *p);
   static void destruct_vhtmcLcLVertex(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::vhtm::Vertex*)
   {
      ::vhtm::Vertex *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::vhtm::Vertex >(0);
      static ::ROOT::TGenericClassInfo 
         instance("vhtm::Vertex", ::vhtm::Vertex::Class_Version(), "./interface/PhysicsObjects.h", 383,
                  typeid(::vhtm::Vertex), ::ROOT::DefineBehavior(ptr, ptr),
                  &::vhtm::Vertex::Dictionary, isa_proxy, 4,
                  sizeof(::vhtm::Vertex) );
      instance.SetNew(&new_vhtmcLcLVertex);
      instance.SetNewArray(&newArray_vhtmcLcLVertex);
      instance.SetDelete(&delete_vhtmcLcLVertex);
      instance.SetDeleteArray(&deleteArray_vhtmcLcLVertex);
      instance.SetDestructor(&destruct_vhtmcLcLVertex);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::vhtm::Vertex*)
   {
      return GenerateInitInstanceLocal((::vhtm::Vertex*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::vhtm::Vertex*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void vhtmcLcLGenMET_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_vhtmcLcLGenMET(void *p = 0);
   static void *newArray_vhtmcLcLGenMET(Long_t size, void *p);
   static void delete_vhtmcLcLGenMET(void *p);
   static void deleteArray_vhtmcLcLGenMET(void *p);
   static void destruct_vhtmcLcLGenMET(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::vhtm::GenMET*)
   {
      ::vhtm::GenMET *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::vhtm::GenMET >(0);
      static ::ROOT::TGenericClassInfo 
         instance("vhtm::GenMET", ::vhtm::GenMET::Class_Version(), "./interface/PhysicsObjects.h", 407,
                  typeid(::vhtm::GenMET), ::ROOT::DefineBehavior(ptr, ptr),
                  &::vhtm::GenMET::Dictionary, isa_proxy, 4,
                  sizeof(::vhtm::GenMET) );
      instance.SetNew(&new_vhtmcLcLGenMET);
      instance.SetNewArray(&newArray_vhtmcLcLGenMET);
      instance.SetDelete(&delete_vhtmcLcLGenMET);
      instance.SetDeleteArray(&deleteArray_vhtmcLcLGenMET);
      instance.SetDestructor(&destruct_vhtmcLcLGenMET);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::vhtm::GenMET*)
   {
      return GenerateInitInstanceLocal((::vhtm::GenMET*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::vhtm::GenMET*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void vhtmcLcLTriggerObject_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_vhtmcLcLTriggerObject(void *p = 0);
   static void *newArray_vhtmcLcLTriggerObject(Long_t size, void *p);
   static void delete_vhtmcLcLTriggerObject(void *p);
   static void deleteArray_vhtmcLcLTriggerObject(void *p);
   static void destruct_vhtmcLcLTriggerObject(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::vhtm::TriggerObject*)
   {
      ::vhtm::TriggerObject *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::vhtm::TriggerObject >(0);
      static ::ROOT::TGenericClassInfo 
         instance("vhtm::TriggerObject", ::vhtm::TriggerObject::Class_Version(), "./interface/PhysicsObjects.h", 418,
                  typeid(::vhtm::TriggerObject), ::ROOT::DefineBehavior(ptr, ptr),
                  &::vhtm::TriggerObject::Dictionary, isa_proxy, 4,
                  sizeof(::vhtm::TriggerObject) );
      instance.SetNew(&new_vhtmcLcLTriggerObject);
      instance.SetNewArray(&newArray_vhtmcLcLTriggerObject);
      instance.SetDelete(&delete_vhtmcLcLTriggerObject);
      instance.SetDeleteArray(&deleteArray_vhtmcLcLTriggerObject);
      instance.SetDestructor(&destruct_vhtmcLcLTriggerObject);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::vhtm::TriggerObject*)
   {
      return GenerateInitInstanceLocal((::vhtm::TriggerObject*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::vhtm::TriggerObject*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void pairlEstringcOunsignedsPintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void pairlEstringcOunsignedsPintgR_Dictionary();
   static void *new_pairlEstringcOunsignedsPintgR(void *p = 0);
   static void *newArray_pairlEstringcOunsignedsPintgR(Long_t size, void *p);
   static void delete_pairlEstringcOunsignedsPintgR(void *p);
   static void deleteArray_pairlEstringcOunsignedsPintgR(void *p);
   static void destruct_pairlEstringcOunsignedsPintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const pair<string,unsigned int>*)
   {
      // Make sure the shadow class has the right sizeof
      pair<string,unsigned int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(pair<string,unsigned int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("pair<string,unsigned int>", "prec_stl/utility", 17,
                  typeid(pair<string,unsigned int>), ::ROOT::DefineBehavior(ptr, ptr),
                  &pairlEstringcOunsignedsPintgR_ShowMembers, &pairlEstringcOunsignedsPintgR_Dictionary, isa_proxy, 4,
                  sizeof(pair<string,unsigned int>) );
      instance.SetNew(&new_pairlEstringcOunsignedsPintgR);
      instance.SetNewArray(&newArray_pairlEstringcOunsignedsPintgR);
      instance.SetDelete(&delete_pairlEstringcOunsignedsPintgR);
      instance.SetDeleteArray(&deleteArray_pairlEstringcOunsignedsPintgR);
      instance.SetDestructor(&destruct_pairlEstringcOunsignedsPintgR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const pair<string,unsigned int>*)
   {
      return GenerateInitInstanceLocal((pair<string,unsigned int>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const pair<string,unsigned int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void pairlEstringcOunsignedsPintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const pair<string,unsigned int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void vhtmcLcLPhoton_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_vhtmcLcLPhoton(void *p = 0);
   static void *newArray_vhtmcLcLPhoton(Long_t size, void *p);
   static void delete_vhtmcLcLPhoton(void *p);
   static void deleteArray_vhtmcLcLPhoton(void *p);
   static void destruct_vhtmcLcLPhoton(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::vhtm::Photon*)
   {
      ::vhtm::Photon *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::vhtm::Photon >(0);
      static ::ROOT::TGenericClassInfo 
         instance("vhtm::Photon", ::vhtm::Photon::Class_Version(), "./interface/PhysicsObjects.h", 432,
                  typeid(::vhtm::Photon), ::ROOT::DefineBehavior(ptr, ptr),
                  &::vhtm::Photon::Dictionary, isa_proxy, 4,
                  sizeof(::vhtm::Photon) );
      instance.SetNew(&new_vhtmcLcLPhoton);
      instance.SetNewArray(&newArray_vhtmcLcLPhoton);
      instance.SetDelete(&delete_vhtmcLcLPhoton);
      instance.SetDeleteArray(&deleteArray_vhtmcLcLPhoton);
      instance.SetDestructor(&destruct_vhtmcLcLPhoton);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::vhtm::Photon*)
   {
      return GenerateInitInstanceLocal((::vhtm::Photon*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::vhtm::Photon*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

      namespace vhtm {
//______________________________________________________________________________
atomic_TClass_ptr Candidate::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Candidate::Class_Name()
{
   return "vhtm::Candidate";
}

//______________________________________________________________________________
const char *Candidate::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::vhtm::Candidate*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Candidate::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::vhtm::Candidate*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Candidate::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::vhtm::Candidate*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Candidate::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::vhtm::Candidate*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace vhtm
      namespace vhtm {
//______________________________________________________________________________
atomic_TClass_ptr Event::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Event::Class_Name()
{
   return "vhtm::Event";
}

//______________________________________________________________________________
const char *Event::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::vhtm::Event*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Event::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::vhtm::Event*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Event::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::vhtm::Event*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Event::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::vhtm::Event*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace vhtm
      namespace vhtm {
//______________________________________________________________________________
atomic_TClass_ptr GenEvent::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *GenEvent::Class_Name()
{
   return "vhtm::GenEvent";
}

//______________________________________________________________________________
const char *GenEvent::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::vhtm::GenEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int GenEvent::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::vhtm::GenEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void GenEvent::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::vhtm::GenEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *GenEvent::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::vhtm::GenEvent*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace vhtm
      namespace vhtm {
//______________________________________________________________________________
atomic_TClass_ptr Electron::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Electron::Class_Name()
{
   return "vhtm::Electron";
}

//______________________________________________________________________________
const char *Electron::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::vhtm::Electron*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Electron::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::vhtm::Electron*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Electron::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::vhtm::Electron*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Electron::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::vhtm::Electron*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace vhtm
      namespace vhtm {
//______________________________________________________________________________
atomic_TClass_ptr GenParticle::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *GenParticle::Class_Name()
{
   return "vhtm::GenParticle";
}

//______________________________________________________________________________
const char *GenParticle::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::vhtm::GenParticle*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int GenParticle::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::vhtm::GenParticle*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void GenParticle::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::vhtm::GenParticle*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *GenParticle::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::vhtm::GenParticle*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace vhtm
      namespace vhtm {
//______________________________________________________________________________
atomic_TClass_ptr GenJet::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *GenJet::Class_Name()
{
   return "vhtm::GenJet";
}

//______________________________________________________________________________
const char *GenJet::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::vhtm::GenJet*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int GenJet::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::vhtm::GenJet*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void GenJet::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::vhtm::GenJet*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *GenJet::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::vhtm::GenJet*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace vhtm
      namespace vhtm {
//______________________________________________________________________________
atomic_TClass_ptr MET::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MET::Class_Name()
{
   return "vhtm::MET";
}

//______________________________________________________________________________
const char *MET::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::vhtm::MET*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MET::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::vhtm::MET*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MET::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::vhtm::MET*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MET::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::vhtm::MET*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace vhtm
      namespace vhtm {
//______________________________________________________________________________
atomic_TClass_ptr Tau::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Tau::Class_Name()
{
   return "vhtm::Tau";
}

//______________________________________________________________________________
const char *Tau::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::vhtm::Tau*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Tau::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::vhtm::Tau*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Tau::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::vhtm::Tau*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Tau::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::vhtm::Tau*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace vhtm
      namespace vhtm {
//______________________________________________________________________________
atomic_TClass_ptr Muon::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Muon::Class_Name()
{
   return "vhtm::Muon";
}

//______________________________________________________________________________
const char *Muon::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::vhtm::Muon*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Muon::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::vhtm::Muon*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Muon::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::vhtm::Muon*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Muon::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::vhtm::Muon*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace vhtm
      namespace vhtm {
//______________________________________________________________________________
atomic_TClass_ptr Jet::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Jet::Class_Name()
{
   return "vhtm::Jet";
}

//______________________________________________________________________________
const char *Jet::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::vhtm::Jet*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Jet::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::vhtm::Jet*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Jet::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::vhtm::Jet*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Jet::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::vhtm::Jet*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace vhtm
      namespace vhtm {
//______________________________________________________________________________
atomic_TClass_ptr Vertex::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Vertex::Class_Name()
{
   return "vhtm::Vertex";
}

//______________________________________________________________________________
const char *Vertex::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::vhtm::Vertex*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Vertex::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::vhtm::Vertex*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Vertex::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::vhtm::Vertex*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Vertex::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::vhtm::Vertex*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace vhtm
      namespace vhtm {
//______________________________________________________________________________
atomic_TClass_ptr GenMET::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *GenMET::Class_Name()
{
   return "vhtm::GenMET";
}

//______________________________________________________________________________
const char *GenMET::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::vhtm::GenMET*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int GenMET::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::vhtm::GenMET*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void GenMET::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::vhtm::GenMET*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *GenMET::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::vhtm::GenMET*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace vhtm
      namespace vhtm {
//______________________________________________________________________________
atomic_TClass_ptr TriggerObject::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TriggerObject::Class_Name()
{
   return "vhtm::TriggerObject";
}

//______________________________________________________________________________
const char *TriggerObject::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::vhtm::TriggerObject*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TriggerObject::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::vhtm::TriggerObject*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TriggerObject::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::vhtm::TriggerObject*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TriggerObject::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::vhtm::TriggerObject*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace vhtm
      namespace vhtm {
//______________________________________________________________________________
atomic_TClass_ptr Photon::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Photon::Class_Name()
{
   return "vhtm::Photon";
}

//______________________________________________________________________________
const char *Photon::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::vhtm::Photon*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Photon::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::vhtm::Photon*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Photon::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::vhtm::Photon*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Photon::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::vhtm::Photon*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace vhtm
      namespace vhtm {
//______________________________________________________________________________
void Candidate::Streamer(TBuffer &R__b)
{
   // Stream an object of class vhtm::Candidate.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(vhtm::Candidate::Class(),this);
   } else {
      R__b.WriteClassBuffer(vhtm::Candidate::Class(),this);
   }
}

} // namespace vhtm
//______________________________________________________________________________
      namespace vhtm {
void Candidate::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class vhtm::Candidate.
      TClass *R__cl = ::vhtm::Candidate::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pt", &pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eta", &eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi", &phi);
      TObject::ShowMembers(R__insp);
}

} // namespace vhtm
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vhtmcLcLCandidate(void *p) {
      return  p ? new(p) ::vhtm::Candidate : new ::vhtm::Candidate;
   }
   static void *newArray_vhtmcLcLCandidate(Long_t nElements, void *p) {
      return p ? new(p) ::vhtm::Candidate[nElements] : new ::vhtm::Candidate[nElements];
   }
   // Wrapper around operator delete
   static void delete_vhtmcLcLCandidate(void *p) {
      delete ((::vhtm::Candidate*)p);
   }
   static void deleteArray_vhtmcLcLCandidate(void *p) {
      delete [] ((::vhtm::Candidate*)p);
   }
   static void destruct_vhtmcLcLCandidate(void *p) {
      typedef ::vhtm::Candidate current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::vhtm::Candidate

      namespace vhtm {
//______________________________________________________________________________
void Event::Streamer(TBuffer &R__b)
{
   // Stream an object of class vhtm::Event.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(vhtm::Event::Class(),this);
   } else {
      R__b.WriteClassBuffer(vhtm::Event::Class(),this);
   }
}

} // namespace vhtm
//______________________________________________________________________________
      namespace vhtm {
void Event::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class vhtm::Event.
      TClass *R__cl = ::vhtm::Event::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run", &run);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "event", &event);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lumis", &lumis);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bunch", &bunch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "orbit", &orbit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "time", &time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isdata", &isdata);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isPhysDeclared", &isPhysDeclared);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isBPTX0", &isBPTX0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isBSCMinBias", &isBSCMinBias);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isBSCBeamHalo", &isBSCBeamHalo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isPrimaryVertex", &isPrimaryVertex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "passHBHENoiseFilter", &passHBHENoiseFilter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rho", &rho);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rhoNeutral", &rhoNeutral);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nvtx", &nvtx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nPU", (void*)&nPU);
      R__insp.InspectMember("vector<int>", (void*)&nPU, "nPU.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bunchCrossing", (void*)&bunchCrossing);
      R__insp.InspectMember("vector<int>", (void*)&bunchCrossing, "bunchCrossing.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trueNInt", (void*)&trueNInt);
      R__insp.InspectMember("vector<int>", (void*)&trueNInt, "trueNInt.", false);
      TObject::ShowMembers(R__insp);
}

} // namespace vhtm
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vhtmcLcLEvent(void *p) {
      return  p ? new(p) ::vhtm::Event : new ::vhtm::Event;
   }
   static void *newArray_vhtmcLcLEvent(Long_t nElements, void *p) {
      return p ? new(p) ::vhtm::Event[nElements] : new ::vhtm::Event[nElements];
   }
   // Wrapper around operator delete
   static void delete_vhtmcLcLEvent(void *p) {
      delete ((::vhtm::Event*)p);
   }
   static void deleteArray_vhtmcLcLEvent(void *p) {
      delete [] ((::vhtm::Event*)p);
   }
   static void destruct_vhtmcLcLEvent(void *p) {
      typedef ::vhtm::Event current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::vhtm::Event

      namespace vhtm {
//______________________________________________________________________________
void GenEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class vhtm::GenEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(vhtm::GenEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(vhtm::GenEvent::Class(),this);
   }
}

} // namespace vhtm
//______________________________________________________________________________
      namespace vhtm {
void GenEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class vhtm::GenEvent.
      TClass *R__cl = ::vhtm::GenEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "processID", &processID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptHat", &ptHat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pdfWeights", (void*)&pdfWeights);
      R__insp.InspectMember("vector<double>", (void*)&pdfWeights, "pdfWeights.", false);
      TObject::ShowMembers(R__insp);
}

} // namespace vhtm
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vhtmcLcLGenEvent(void *p) {
      return  p ? new(p) ::vhtm::GenEvent : new ::vhtm::GenEvent;
   }
   static void *newArray_vhtmcLcLGenEvent(Long_t nElements, void *p) {
      return p ? new(p) ::vhtm::GenEvent[nElements] : new ::vhtm::GenEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_vhtmcLcLGenEvent(void *p) {
      delete ((::vhtm::GenEvent*)p);
   }
   static void deleteArray_vhtmcLcLGenEvent(void *p) {
      delete [] ((::vhtm::GenEvent*)p);
   }
   static void destruct_vhtmcLcLGenEvent(void *p) {
      typedef ::vhtm::GenEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::vhtm::GenEvent

      namespace vhtm {
//______________________________________________________________________________
void Electron::Streamer(TBuffer &R__b)
{
   // Stream an object of class vhtm::Electron.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(vhtm::Electron::Class(),this);
   } else {
      R__b.WriteClassBuffer(vhtm::Electron::Class(),this);
   }
}

} // namespace vhtm
//______________________________________________________________________________
      namespace vhtm {
void Electron::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class vhtm::Electron.
      TClass *R__cl = ::vhtm::Electron::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eta", &eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi", &phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pt", &pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ecalDriven", &ecalDriven);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hasGsfTrack", &hasGsfTrack);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trackPt", &trackPt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "energy", &energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "caloEnergy", &caloEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "charge", &charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pixHits", &pixHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trkHits", &trkHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nValidHits", &nValidHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trkD0", &trkD0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trkDz", &trkDz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hoe", &hoe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eop", &eop);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigmaEtaEta", &sigmaEtaEta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigmaIEtaIEta", &sigmaIEtaIEta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "deltaPhiTrkSC", &deltaPhiTrkSC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "deltaEtaTrkSC", &deltaEtaTrkSC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "classif", &classif);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vx", &vx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vy", &vy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vz", &vz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scEn", &scEn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scEta", &scEta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scPhi", &scPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scET", &scET);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scRawEnergy", &scRawEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dxyPV", &dxyPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dzPV", &dzPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vtxDist3D", &vtxDist3D);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vtxIndex", &vtxIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vtxDistZ", &vtxDistZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "relIso", &relIso);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pfRelIso", &pfRelIso);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chargedHadronIso", &chargedHadronIso);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "neutralHadronIso", &neutralHadronIso);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "photonIso", &photonIso);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sumChargedHadronPt", &sumChargedHadronPt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sumPUPt", &sumPUPt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "missingHits", &missingHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dB", &dB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nBrems", &nBrems);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fbrem", &fbrem);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hasMatchedConv", &hasMatchedConv);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mvaPreselection", &mvaPreselection);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isTriggerElectron", &isTriggerElectron);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fidFlag", &fidFlag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "idmap", (void*)&idmap);
      R__insp.InspectMember("map<std::string,float>", (void*)&idmap, "idmap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "selbit", &selbit);
      TObject::ShowMembers(R__insp);
}

} // namespace vhtm
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vhtmcLcLElectron(void *p) {
      return  p ? new(p) ::vhtm::Electron : new ::vhtm::Electron;
   }
   static void *newArray_vhtmcLcLElectron(Long_t nElements, void *p) {
      return p ? new(p) ::vhtm::Electron[nElements] : new ::vhtm::Electron[nElements];
   }
   // Wrapper around operator delete
   static void delete_vhtmcLcLElectron(void *p) {
      delete ((::vhtm::Electron*)p);
   }
   static void deleteArray_vhtmcLcLElectron(void *p) {
      delete [] ((::vhtm::Electron*)p);
   }
   static void destruct_vhtmcLcLElectron(void *p) {
      typedef ::vhtm::Electron current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::vhtm::Electron

      namespace vhtm {
//______________________________________________________________________________
void GenParticle::Streamer(TBuffer &R__b)
{
   // Stream an object of class vhtm::GenParticle.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(vhtm::GenParticle::Class(),this);
   } else {
      R__b.WriteClassBuffer(vhtm::GenParticle::Class(),this);
   }
}

} // namespace vhtm
//______________________________________________________________________________
      namespace vhtm {
void GenParticle::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class vhtm::GenParticle.
      TClass *R__cl = ::vhtm::GenParticle::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eta", &eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi", &phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "p", &p);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "px", &px);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "py", &py);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pz", &pz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pt", &pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "energy", &energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pdgId", &pdgId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vx", &vx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vy", &vy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vz", &vz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "status", &status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "charge", &charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numDaught", &numDaught);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numMother", &numMother);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "motherIndex", &motherIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "motherIndices", (void*)&motherIndices);
      R__insp.InspectMember("vector<int>", (void*)&motherIndices, "motherIndices.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "daughtIndices", (void*)&daughtIndices);
      R__insp.InspectMember("vector<int>", (void*)&daughtIndices, "daughtIndices.", false);
      TObject::ShowMembers(R__insp);
}

} // namespace vhtm
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vhtmcLcLGenParticle(void *p) {
      return  p ? new(p) ::vhtm::GenParticle : new ::vhtm::GenParticle;
   }
   static void *newArray_vhtmcLcLGenParticle(Long_t nElements, void *p) {
      return p ? new(p) ::vhtm::GenParticle[nElements] : new ::vhtm::GenParticle[nElements];
   }
   // Wrapper around operator delete
   static void delete_vhtmcLcLGenParticle(void *p) {
      delete ((::vhtm::GenParticle*)p);
   }
   static void deleteArray_vhtmcLcLGenParticle(void *p) {
      delete [] ((::vhtm::GenParticle*)p);
   }
   static void destruct_vhtmcLcLGenParticle(void *p) {
      typedef ::vhtm::GenParticle current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::vhtm::GenParticle

      namespace vhtm {
//______________________________________________________________________________
void GenJet::Streamer(TBuffer &R__b)
{
   // Stream an object of class vhtm::GenJet.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(vhtm::GenJet::Class(),this);
   } else {
      R__b.WriteClassBuffer(vhtm::GenJet::Class(),this);
   }
}

} // namespace vhtm
//______________________________________________________________________________
      namespace vhtm {
void GenJet::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class vhtm::GenJet.
      TClass *R__cl = ::vhtm::GenJet::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eta", &eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi", &phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "p", &p);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pt", &pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "energy", &energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "emf", &emf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hadf", &hadf);
      TObject::ShowMembers(R__insp);
}

} // namespace vhtm
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vhtmcLcLGenJet(void *p) {
      return  p ? new(p) ::vhtm::GenJet : new ::vhtm::GenJet;
   }
   static void *newArray_vhtmcLcLGenJet(Long_t nElements, void *p) {
      return p ? new(p) ::vhtm::GenJet[nElements] : new ::vhtm::GenJet[nElements];
   }
   // Wrapper around operator delete
   static void delete_vhtmcLcLGenJet(void *p) {
      delete ((::vhtm::GenJet*)p);
   }
   static void deleteArray_vhtmcLcLGenJet(void *p) {
      delete [] ((::vhtm::GenJet*)p);
   }
   static void destruct_vhtmcLcLGenJet(void *p) {
      typedef ::vhtm::GenJet current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::vhtm::GenJet

      namespace vhtm {
//______________________________________________________________________________
void GenMET::Streamer(TBuffer &R__b)
{
   // Stream an object of class vhtm::GenMET.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(vhtm::GenMET::Class(),this);
   } else {
      R__b.WriteClassBuffer(vhtm::GenMET::Class(),this);
   }
}

} // namespace vhtm
//______________________________________________________________________________
      namespace vhtm {
void GenMET::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class vhtm::GenMET.
      TClass *R__cl = ::vhtm::GenMET::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "met", &met);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "metphi", &metphi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sumet", &sumet);
      TObject::ShowMembers(R__insp);
}

} // namespace vhtm
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vhtmcLcLGenMET(void *p) {
      return  p ? new(p) ::vhtm::GenMET : new ::vhtm::GenMET;
   }
   static void *newArray_vhtmcLcLGenMET(Long_t nElements, void *p) {
      return p ? new(p) ::vhtm::GenMET[nElements] : new ::vhtm::GenMET[nElements];
   }
   // Wrapper around operator delete
   static void delete_vhtmcLcLGenMET(void *p) {
      delete ((::vhtm::GenMET*)p);
   }
   static void deleteArray_vhtmcLcLGenMET(void *p) {
      delete [] ((::vhtm::GenMET*)p);
   }
   static void destruct_vhtmcLcLGenMET(void *p) {
      typedef ::vhtm::GenMET current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::vhtm::GenMET

      namespace vhtm {
//______________________________________________________________________________
void MET::Streamer(TBuffer &R__b)
{
   // Stream an object of class vhtm::MET.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(vhtm::MET::Class(),this);
   } else {
      R__b.WriteClassBuffer(vhtm::MET::Class(),this);
   }
}

} // namespace vhtm
//______________________________________________________________________________
      namespace vhtm {
void MET::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class vhtm::MET.
      TClass *R__cl = ::vhtm::MET::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "met", &met);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "metphi", &metphi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sumet", &sumet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "metuncorr", &metuncorr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "metphiuncorr", &metphiuncorr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sumetuncorr", &sumetuncorr);
      TObject::ShowMembers(R__insp);
}

} // namespace vhtm
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vhtmcLcLMET(void *p) {
      return  p ? new(p) ::vhtm::MET : new ::vhtm::MET;
   }
   static void *newArray_vhtmcLcLMET(Long_t nElements, void *p) {
      return p ? new(p) ::vhtm::MET[nElements] : new ::vhtm::MET[nElements];
   }
   // Wrapper around operator delete
   static void delete_vhtmcLcLMET(void *p) {
      delete ((::vhtm::MET*)p);
   }
   static void deleteArray_vhtmcLcLMET(void *p) {
      delete [] ((::vhtm::MET*)p);
   }
   static void destruct_vhtmcLcLMET(void *p) {
      typedef ::vhtm::MET current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::vhtm::MET

      namespace vhtm {
//______________________________________________________________________________
void Tau::Streamer(TBuffer &R__b)
{
   // Stream an object of class vhtm::Tau.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(vhtm::Tau::Class(),this);
   } else {
      R__b.WriteClassBuffer(vhtm::Tau::Class(),this);
   }
}

} // namespace vhtm
//______________________________________________________________________________
      namespace vhtm {
void Tau::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class vhtm::Tau.
      TClass *R__cl = ::vhtm::Tau::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eta", &eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi", &phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pt", &pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "energy", &energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "charge", &charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mass", &mass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dxyPV", &dxyPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dzPV", &dzPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vtxIndex", &vtxIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vtxDxy", &vtxDxy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vtxDz", &vtxDz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "leadChargedParticlePt", &leadChargedParticlePt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "leadNeutralParticlePt", &leadNeutralParticlePt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "leadParticlePt", &leadParticlePt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigChHadList", (void*)&sigChHadList);
      R__insp.InspectMember("vector<vhtm::Candidate>", (void*)&sigChHadList, "sigChHadList.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigNeHadList", (void*)&sigNeHadList);
      R__insp.InspectMember("vector<vhtm::Candidate>", (void*)&sigNeHadList, "sigNeHadList.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigGammaList", (void*)&sigGammaList);
      R__insp.InspectMember("vector<vhtm::Candidate>", (void*)&sigGammaList, "sigGammaList.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isoChHadList", (void*)&isoChHadList);
      R__insp.InspectMember("vector<vhtm::Candidate>", (void*)&isoChHadList, "isoChHadList.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isoNeHadList", (void*)&isoNeHadList);
      R__insp.InspectMember("vector<vhtm::Candidate>", (void*)&isoNeHadList, "isoNeHadList.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isoGammaList", (void*)&isoGammaList);
      R__insp.InspectMember("vector<vhtm::Candidate>", (void*)&isoGammaList, "isoGammaList.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptSumChargedHadronsIsoCone", &ptSumChargedHadronsIsoCone);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptSumNeutralHadronsIsoCone", &ptSumNeutralHadronsIsoCone);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptSumPhotonsIsoCone", &ptSumPhotonsIsoCone);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "decayModeFinding", &decayModeFinding);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "decayModeFindingNewDMs", &decayModeFindingNewDMs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "decayModeFindingOldDMs", &decayModeFindingOldDMs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "againstMuonLoose", &againstMuonLoose);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "againstMuonMedium", &againstMuonMedium);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "againstMuonTight", &againstMuonTight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "againstMuonLoose3", &againstMuonLoose3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "againstMuonTight3", &againstMuonTight3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "againstElectronLoose", &againstElectronLoose);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "againstElectronMedium", &againstElectronMedium);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "againstElectronTight", &againstElectronTight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "againstElectronLooseMVA5", &againstElectronLooseMVA5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "againstElectronMediumMVA5", &againstElectronMediumMVA5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "againstElectronTightMVA5", &againstElectronTightMVA5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "byLooseCombinedIsolationDeltaBetaCorr3Hits", &byLooseCombinedIsolationDeltaBetaCorr3Hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "byMediumCombinedIsolationDeltaBetaCorr3Hits", &byMediumCombinedIsolationDeltaBetaCorr3Hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "byTightCombinedIsolationDeltaBetaCorr3Hits", &byTightCombinedIsolationDeltaBetaCorr3Hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "byCombinedIsolationDeltaBetaCorrRaw3Hits", &byCombinedIsolationDeltaBetaCorrRaw3Hits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chargedIsoPtSum", &chargedIsoPtSum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "neutralIsoPtSum", &neutralIsoPtSum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "puCorrPtSum", &puCorrPtSum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "jetPt", &jetPt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "jetEta", &jetEta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "jetPhi", &jetPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "emFraction", &emFraction);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vx", &vx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vy", &vy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vz", &vz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zvertex", &zvertex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dxySig", &dxySig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "selbit", &selbit);
      TObject::ShowMembers(R__insp);
}

} // namespace vhtm
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vhtmcLcLTau(void *p) {
      return  p ? new(p) ::vhtm::Tau : new ::vhtm::Tau;
   }
   static void *newArray_vhtmcLcLTau(Long_t nElements, void *p) {
      return p ? new(p) ::vhtm::Tau[nElements] : new ::vhtm::Tau[nElements];
   }
   // Wrapper around operator delete
   static void delete_vhtmcLcLTau(void *p) {
      delete ((::vhtm::Tau*)p);
   }
   static void deleteArray_vhtmcLcLTau(void *p) {
      delete [] ((::vhtm::Tau*)p);
   }
   static void destruct_vhtmcLcLTau(void *p) {
      typedef ::vhtm::Tau current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::vhtm::Tau

      namespace vhtm {
//______________________________________________________________________________
void Muon::Streamer(TBuffer &R__b)
{
   // Stream an object of class vhtm::Muon.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(vhtm::Muon::Class(),this);
   } else {
      R__b.WriteClassBuffer(vhtm::Muon::Class(),this);
   }
}

} // namespace vhtm
//______________________________________________________________________________
      namespace vhtm {
void Muon::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class vhtm::Muon.
      TClass *R__cl = ::vhtm::Muon::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isTrackerMuon", &isTrackerMuon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isPFMuon", &isPFMuon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eta", &eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi", &phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pt", &pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "p", &p);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "energy", &energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "charge", &charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trkD0", &trkD0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trkDz", &trkDz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "globalChi2", &globalChi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trkIso", &trkIso);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ecalIso", &ecalIso);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hcalIso", &hcalIso);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hoIso", &hoIso);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pfChargedIsoR03", &pfChargedIsoR03);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sumPUPt03", &sumPUPt03);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pfRelIso03", &pfRelIso03);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pfChargedIsoR04", &pfChargedIsoR04);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sumPUPt04", &sumPUPt04);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pfRelIso04", &pfRelIso04);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "passID", &passID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dxyPV", &dxyPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dzPV", &dzPV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vtxDist3D", &vtxDist3D);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vtxIndex", &vtxIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vtxDistZ", &vtxDistZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pixHits", &pixHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trkHits", &trkHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "muoHits", &muoHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "matches", &matches);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trackerLayersWithMeasurement", &trackerLayersWithMeasurement);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vx", &vx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vy", &vy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vz", &vz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dB", &dB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isGlobalMuonPromptTight", &isGlobalMuonPromptTight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isAllArbitrated", &isAllArbitrated);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nChambers", &nChambers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nMatches", &nMatches);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nMatchedStations", &nMatchedStations);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "stationMask", &stationMask);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "stationGapMaskDistance", &stationGapMaskDistance);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "stationGapMaskPull", &stationGapMaskPull);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "muonID", &muonID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "selbit", &selbit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isolationMap", (void*)&isolationMap);
      R__insp.InspectMember("map<double,std::vector<double> >", (void*)&isolationMap, "isolationMap.", false);
      TObject::ShowMembers(R__insp);
}

} // namespace vhtm
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vhtmcLcLMuon(void *p) {
      return  p ? new(p) ::vhtm::Muon : new ::vhtm::Muon;
   }
   static void *newArray_vhtmcLcLMuon(Long_t nElements, void *p) {
      return p ? new(p) ::vhtm::Muon[nElements] : new ::vhtm::Muon[nElements];
   }
   // Wrapper around operator delete
   static void delete_vhtmcLcLMuon(void *p) {
      delete ((::vhtm::Muon*)p);
   }
   static void deleteArray_vhtmcLcLMuon(void *p) {
      delete [] ((::vhtm::Muon*)p);
   }
   static void destruct_vhtmcLcLMuon(void *p) {
      typedef ::vhtm::Muon current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::vhtm::Muon

      namespace vhtm {
//______________________________________________________________________________
void Jet::Streamer(TBuffer &R__b)
{
   // Stream an object of class vhtm::Jet.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(vhtm::Jet::Class(),this);
   } else {
      R__b.WriteClassBuffer(vhtm::Jet::Class(),this);
   }
}

} // namespace vhtm
//______________________________________________________________________________
      namespace vhtm {
void Jet::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class vhtm::Jet.
      TClass *R__cl = ::vhtm::Jet::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eta", &eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi", &phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pt", &pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pt_raw", &pt_raw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "energy", &energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "energy_raw", &energy_raw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "jecUnc", &jecUnc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "resJEC", &resJEC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "partonFlavour", &partonFlavour);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chargedEmEnergyFraction", &chargedEmEnergyFraction);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chargedHadronEnergyFraction", &chargedHadronEnergyFraction);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chargedMuEnergyFraction", &chargedMuEnergyFraction);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "electronEnergyFraction", &electronEnergyFraction);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "muonEnergyFraction", &muonEnergyFraction);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "neutralEmEnergyFraction", &neutralEmEnergyFraction);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "neutralHadronEnergyFraction", &neutralHadronEnergyFraction);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "photonEnergyFraction", &photonEnergyFraction);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chargedHadronMultiplicity", &chargedHadronMultiplicity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chargedMultiplicity", &chargedMultiplicity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "electronMultiplicity", &electronMultiplicity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "muonMultiplicity", &muonMultiplicity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "neutralHadronMultiplicity", &neutralHadronMultiplicity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "neutralMultiplicity", &neutralMultiplicity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "photonMultiplicity", &photonMultiplicity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nConstituents", &nConstituents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "combinedSecondaryVertexBTag", &combinedSecondaryVertexBTag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "combinedInclusiveSecondaryVertexBTag", &combinedInclusiveSecondaryVertexBTag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "discrimap", (void*)&discrimap);
      R__insp.InspectMember("map<std::string,float>", (void*)&discrimap, "discrimap.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "passLooseID", &passLooseID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "passTightID", &passTightID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "selbit", &selbit);
      TObject::ShowMembers(R__insp);
}

} // namespace vhtm
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vhtmcLcLJet(void *p) {
      return  p ? new(p) ::vhtm::Jet : new ::vhtm::Jet;
   }
   static void *newArray_vhtmcLcLJet(Long_t nElements, void *p) {
      return p ? new(p) ::vhtm::Jet[nElements] : new ::vhtm::Jet[nElements];
   }
   // Wrapper around operator delete
   static void delete_vhtmcLcLJet(void *p) {
      delete ((::vhtm::Jet*)p);
   }
   static void deleteArray_vhtmcLcLJet(void *p) {
      delete [] ((::vhtm::Jet*)p);
   }
   static void destruct_vhtmcLcLJet(void *p) {
      typedef ::vhtm::Jet current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::vhtm::Jet

      namespace vhtm {
//______________________________________________________________________________
void Vertex::Streamer(TBuffer &R__b)
{
   // Stream an object of class vhtm::Vertex.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(vhtm::Vertex::Class(),this);
   } else {
      R__b.WriteClassBuffer(vhtm::Vertex::Class(),this);
   }
}

} // namespace vhtm
//______________________________________________________________________________
      namespace vhtm {
void Vertex::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class vhtm::Vertex.
      TClass *R__cl = ::vhtm::Vertex::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x", &x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "y", &y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z", &z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xErr", &xErr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "yErr", &yErr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zErr", &zErr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rho", &rho);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chi2", &chi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ndf", &ndf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ntracksw05", &ntracksw05);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isfake", &isfake);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isvalid", &isvalid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sumPt", &sumPt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "selbit", &selbit);
      TObject::ShowMembers(R__insp);
}

} // namespace vhtm
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vhtmcLcLVertex(void *p) {
      return  p ? new(p) ::vhtm::Vertex : new ::vhtm::Vertex;
   }
   static void *newArray_vhtmcLcLVertex(Long_t nElements, void *p) {
      return p ? new(p) ::vhtm::Vertex[nElements] : new ::vhtm::Vertex[nElements];
   }
   // Wrapper around operator delete
   static void delete_vhtmcLcLVertex(void *p) {
      delete ((::vhtm::Vertex*)p);
   }
   static void deleteArray_vhtmcLcLVertex(void *p) {
      delete [] ((::vhtm::Vertex*)p);
   }
   static void destruct_vhtmcLcLVertex(void *p) {
      typedef ::vhtm::Vertex current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::vhtm::Vertex

      namespace vhtm {
//______________________________________________________________________________
void Photon::Streamer(TBuffer &R__b)
{
   // Stream an object of class vhtm::Photon.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(vhtm::Photon::Class(),this);
   } else {
      R__b.WriteClassBuffer(vhtm::Photon::Class(),this);
   }
}

} // namespace vhtm
//______________________________________________________________________________
      namespace vhtm {
void Photon::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class vhtm::Photon.
      TClass *R__cl = ::vhtm::Photon::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "et", &et);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eta", &eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "clusterEta", &clusterEta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi", &phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "clusterPhi", &clusterPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "energy", &energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "theta", &theta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vx", &vx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vy", &vy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vz", &vz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scEnergy", &scEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scEta", &scEta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scPhi", &scPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scSize", &scSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scEtaWidth", &scEtaWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scPhiWidth", &scPhiWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scEt", &scEt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scRawEnergy", &scRawEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scx", &scx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scy", &scy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scz", &scz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isoEcalRecHit03", &isoEcalRecHit03);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isoHcalRecHit03", &isoHcalRecHit03);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isoSolidTrkCone03", &isoSolidTrkCone03);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isoHollowTrkCone03", &isoHollowTrkCone03);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nTrkSolidCone03", &nTrkSolidCone03);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nTrkHollowCone03", &nTrkHollowCone03);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isoEcalRecHit04", &isoEcalRecHit04);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isoHcalRecHit04", &isoHcalRecHit04);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isoSolidTrkCone04", &isoSolidTrkCone04);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isoHollowTrkCone04", &isoHollowTrkCone04);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nTrkSolidCone04", &nTrkSolidCone04);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nTrkHollowCone04", &nTrkHollowCone04);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isEB", &isEB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isEE", &isEE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isEBGap", &isEBGap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isEEGap", &isEEGap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isEBEEGap", &isEBEEGap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fidFlag", &fidFlag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hasPixelSeed", &hasPixelSeed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ecalIso", &ecalIso);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hcalIso", &hcalIso);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trackIso", &trackIso);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chargedHadIso", &chargedHadIso);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "neutralHadIso", &neutralHadIso);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "photonIso", &photonIso);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "r9", &r9);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hoe", &hoe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigmaEtaEta", &sigmaEtaEta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigmaIEtaIEta", &sigmaIEtaIEta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "e1x5", &e1x5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "e2x5", &e2x5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "e3x3", &e3x3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "e5x5", &e5x5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "r1x5", &r1x5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "r2x5", &r2x5);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxEnergyXtal", &maxEnergyXtal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hasConversionTracks", &hasConversionTracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nTracks", &nTracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isConverted", &isConverted);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pairInvMass", &pairInvMass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pairCotThetaSeparation", &pairCotThetaSeparation);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pairPx", &pairPx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pairPy", &pairPy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pairPz", &pairPz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "conv_vx", &conv_vx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "conv_vy", &conv_vy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "conv_vz", &conv_vz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eovp", &eovp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zpv", &zpv);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "distOfMinApproach", &distOfMinApproach);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dPhiTracksAtVtx", &dPhiTracksAtVtx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dPhiTracksAtEcal", &dPhiTracksAtEcal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dEtaTracksAtEcal", &dEtaTracksAtEcal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "selbit", &selbit);
      TObject::ShowMembers(R__insp);
}

} // namespace vhtm
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vhtmcLcLPhoton(void *p) {
      return  p ? new(p) ::vhtm::Photon : new ::vhtm::Photon;
   }
   static void *newArray_vhtmcLcLPhoton(Long_t nElements, void *p) {
      return p ? new(p) ::vhtm::Photon[nElements] : new ::vhtm::Photon[nElements];
   }
   // Wrapper around operator delete
   static void delete_vhtmcLcLPhoton(void *p) {
      delete ((::vhtm::Photon*)p);
   }
   static void deleteArray_vhtmcLcLPhoton(void *p) {
      delete [] ((::vhtm::Photon*)p);
   }
   static void destruct_vhtmcLcLPhoton(void *p) {
      typedef ::vhtm::Photon current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::vhtm::Photon

      namespace vhtm {
//______________________________________________________________________________
void TriggerObject::Streamer(TBuffer &R__b)
{
   // Stream an object of class vhtm::TriggerObject.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(vhtm::TriggerObject::Class(),this);
   } else {
      R__b.WriteClassBuffer(vhtm::TriggerObject::Class(),this);
   }
}

} // namespace vhtm
//______________________________________________________________________________
      namespace vhtm {
void TriggerObject::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class vhtm::TriggerObject.
      TClass *R__cl = ::vhtm::TriggerObject::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "energy", &energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pt", &pt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eta", &eta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi", &phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pathList", (void*)&pathList);
      R__insp.InspectMember("map<std::string,unsigned int>", (void*)&pathList, "pathList.", false);
      TObject::ShowMembers(R__insp);
}

} // namespace vhtm
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vhtmcLcLTriggerObject(void *p) {
      return  p ? new(p) ::vhtm::TriggerObject : new ::vhtm::TriggerObject;
   }
   static void *newArray_vhtmcLcLTriggerObject(Long_t nElements, void *p) {
      return p ? new(p) ::vhtm::TriggerObject[nElements] : new ::vhtm::TriggerObject[nElements];
   }
   // Wrapper around operator delete
   static void delete_vhtmcLcLTriggerObject(void *p) {
      delete ((::vhtm::TriggerObject*)p);
   }
   static void deleteArray_vhtmcLcLTriggerObject(void *p) {
      delete [] ((::vhtm::TriggerObject*)p);
   }
   static void destruct_vhtmcLcLTriggerObject(void *p) {
      typedef ::vhtm::TriggerObject current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::vhtm::TriggerObject

//______________________________________________________________________________
namespace ROOTDict {
   void pairlEstringcOunsignedsPintgR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class pair<string,unsigned int>.
      typedef ::ROOTShadow::Shadow::pairlEstringcOunsignedsPintgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const pair<string,unsigned int>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "first", (void*)&sobj->first);
      R__insp.InspectMember("string", (void*)&sobj->first, "first.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "second", &sobj->second);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_pairlEstringcOunsignedsPintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<string,unsigned int> : new pair<string,unsigned int>;
   }
   static void *newArray_pairlEstringcOunsignedsPintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) pair<string,unsigned int>[nElements] : new pair<string,unsigned int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_pairlEstringcOunsignedsPintgR(void *p) {
      delete ((pair<string,unsigned int>*)p);
   }
   static void deleteArray_pairlEstringcOunsignedsPintgR(void *p) {
      delete [] ((pair<string,unsigned int>*)p);
   }
   static void destruct_pairlEstringcOunsignedsPintgR(void *p) {
      typedef pair<string,unsigned int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class pair<string,unsigned int>

namespace ROOTDict {
   void maplEdoublecOvectorlEdoublegRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEdoublecOvectorlEdoublegRsPgR_Dictionary();
   static void *new_maplEdoublecOvectorlEdoublegRsPgR(void *p = 0);
   static void *newArray_maplEdoublecOvectorlEdoublegRsPgR(Long_t size, void *p);
   static void delete_maplEdoublecOvectorlEdoublegRsPgR(void *p);
   static void deleteArray_maplEdoublecOvectorlEdoublegRsPgR(void *p);
   static void destruct_maplEdoublecOvectorlEdoublegRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<double,vector<double> >*)
   {
      map<double,vector<double> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<double,vector<double> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<double,vector<double> >", -2, "prec_stl/map", 63,
                  typeid(map<double,vector<double> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEdoublecOvectorlEdoublegRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(map<double,vector<double> >) );
      instance.SetNew(&new_maplEdoublecOvectorlEdoublegRsPgR);
      instance.SetNewArray(&newArray_maplEdoublecOvectorlEdoublegRsPgR);
      instance.SetDelete(&delete_maplEdoublecOvectorlEdoublegRsPgR);
      instance.SetDeleteArray(&deleteArray_maplEdoublecOvectorlEdoublegRsPgR);
      instance.SetDestructor(&destruct_maplEdoublecOvectorlEdoublegRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<double,vector<double> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<double,vector<double> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEdoublecOvectorlEdoublegRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<double,vector<double> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEdoublecOvectorlEdoublegRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<double,vector<double> > : new map<double,vector<double> >;
   }
   static void *newArray_maplEdoublecOvectorlEdoublegRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<double,vector<double> >[nElements] : new map<double,vector<double> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEdoublecOvectorlEdoublegRsPgR(void *p) {
      delete ((map<double,vector<double> >*)p);
   }
   static void deleteArray_maplEdoublecOvectorlEdoublegRsPgR(void *p) {
      delete [] ((map<double,vector<double> >*)p);
   }
   static void destruct_maplEdoublecOvectorlEdoublegRsPgR(void *p) {
      typedef map<double,vector<double> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<double,vector<double> >

namespace ROOTDict {
   void maplEstringcOunsignedsPintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOunsignedsPintgR_Dictionary();
   static void *new_maplEstringcOunsignedsPintgR(void *p = 0);
   static void *newArray_maplEstringcOunsignedsPintgR(Long_t size, void *p);
   static void delete_maplEstringcOunsignedsPintgR(void *p);
   static void deleteArray_maplEstringcOunsignedsPintgR(void *p);
   static void destruct_maplEstringcOunsignedsPintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<string,unsigned int>*)
   {
      map<string,unsigned int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,unsigned int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,unsigned int>", -2, "prec_stl/map", 63,
                  typeid(map<string,unsigned int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEstringcOunsignedsPintgR_Dictionary, isa_proxy, 4,
                  sizeof(map<string,unsigned int>) );
      instance.SetNew(&new_maplEstringcOunsignedsPintgR);
      instance.SetNewArray(&newArray_maplEstringcOunsignedsPintgR);
      instance.SetDelete(&delete_maplEstringcOunsignedsPintgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOunsignedsPintgR);
      instance.SetDestructor(&destruct_maplEstringcOunsignedsPintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<string,unsigned int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,unsigned int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOunsignedsPintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<string,unsigned int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEstringcOunsignedsPintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,unsigned int> : new map<string,unsigned int>;
   }
   static void *newArray_maplEstringcOunsignedsPintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,unsigned int>[nElements] : new map<string,unsigned int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOunsignedsPintgR(void *p) {
      delete ((map<string,unsigned int>*)p);
   }
   static void deleteArray_maplEstringcOunsignedsPintgR(void *p) {
      delete [] ((map<string,unsigned int>*)p);
   }
   static void destruct_maplEstringcOunsignedsPintgR(void *p) {
      typedef map<string,unsigned int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<string,unsigned int>

namespace ROOTDict {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 4,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<double>

namespace ROOTDict {
   void vectorlEstringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEstringgR_Dictionary();
   static void *new_vectorlEstringgR(void *p = 0);
   static void *newArray_vectorlEstringgR(Long_t size, void *p);
   static void delete_vectorlEstringgR(void *p);
   static void deleteArray_vectorlEstringgR(void *p);
   static void destruct_vectorlEstringgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<string>*)
   {
      vector<string> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<string>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<string>", -2, "prec_stl/vector", 49,
                  typeid(vector<string>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEstringgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<string>) );
      instance.SetNew(&new_vectorlEstringgR);
      instance.SetNewArray(&newArray_vectorlEstringgR);
      instance.SetDelete(&delete_vectorlEstringgR);
      instance.SetDeleteArray(&deleteArray_vectorlEstringgR);
      instance.SetDestructor(&destruct_vectorlEstringgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<string> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<string>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEstringgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<string>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEstringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string> : new vector<string>;
   }
   static void *newArray_vectorlEstringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string>[nElements] : new vector<string>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEstringgR(void *p) {
      delete ((vector<string>*)p);
   }
   static void deleteArray_vectorlEstringgR(void *p) {
      delete [] ((vector<string>*)p);
   }
   static void destruct_vectorlEstringgR(void *p) {
      typedef vector<string> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<string>

namespace ROOTDict {
   void vectorlEvhtmcLcLCandidategR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvhtmcLcLCandidategR_Dictionary();
   static void *new_vectorlEvhtmcLcLCandidategR(void *p = 0);
   static void *newArray_vectorlEvhtmcLcLCandidategR(Long_t size, void *p);
   static void delete_vectorlEvhtmcLcLCandidategR(void *p);
   static void deleteArray_vectorlEvhtmcLcLCandidategR(void *p);
   static void destruct_vectorlEvhtmcLcLCandidategR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vhtm::Candidate>*)
   {
      vector<vhtm::Candidate> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vhtm::Candidate>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vhtm::Candidate>", -2, "prec_stl/vector", 49,
                  typeid(vector<vhtm::Candidate>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvhtmcLcLCandidategR_Dictionary, isa_proxy, 4,
                  sizeof(vector<vhtm::Candidate>) );
      instance.SetNew(&new_vectorlEvhtmcLcLCandidategR);
      instance.SetNewArray(&newArray_vectorlEvhtmcLcLCandidategR);
      instance.SetDelete(&delete_vectorlEvhtmcLcLCandidategR);
      instance.SetDeleteArray(&deleteArray_vectorlEvhtmcLcLCandidategR);
      instance.SetDestructor(&destruct_vectorlEvhtmcLcLCandidategR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vhtm::Candidate> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vhtm::Candidate>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvhtmcLcLCandidategR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vhtm::Candidate>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvhtmcLcLCandidategR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vhtm::Candidate> : new vector<vhtm::Candidate>;
   }
   static void *newArray_vectorlEvhtmcLcLCandidategR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vhtm::Candidate>[nElements] : new vector<vhtm::Candidate>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvhtmcLcLCandidategR(void *p) {
      delete ((vector<vhtm::Candidate>*)p);
   }
   static void deleteArray_vectorlEvhtmcLcLCandidategR(void *p) {
      delete [] ((vector<vhtm::Candidate>*)p);
   }
   static void destruct_vectorlEvhtmcLcLCandidategR(void *p) {
      typedef vector<vhtm::Candidate> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vhtm::Candidate>

namespace ROOTDict {
   void vectorlEvhtmcLcLElectrongR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvhtmcLcLElectrongR_Dictionary();
   static void *new_vectorlEvhtmcLcLElectrongR(void *p = 0);
   static void *newArray_vectorlEvhtmcLcLElectrongR(Long_t size, void *p);
   static void delete_vectorlEvhtmcLcLElectrongR(void *p);
   static void deleteArray_vectorlEvhtmcLcLElectrongR(void *p);
   static void destruct_vectorlEvhtmcLcLElectrongR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vhtm::Electron>*)
   {
      vector<vhtm::Electron> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vhtm::Electron>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vhtm::Electron>", -2, "prec_stl/vector", 49,
                  typeid(vector<vhtm::Electron>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvhtmcLcLElectrongR_Dictionary, isa_proxy, 4,
                  sizeof(vector<vhtm::Electron>) );
      instance.SetNew(&new_vectorlEvhtmcLcLElectrongR);
      instance.SetNewArray(&newArray_vectorlEvhtmcLcLElectrongR);
      instance.SetDelete(&delete_vectorlEvhtmcLcLElectrongR);
      instance.SetDeleteArray(&deleteArray_vectorlEvhtmcLcLElectrongR);
      instance.SetDestructor(&destruct_vectorlEvhtmcLcLElectrongR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vhtm::Electron> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vhtm::Electron>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvhtmcLcLElectrongR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vhtm::Electron>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvhtmcLcLElectrongR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vhtm::Electron> : new vector<vhtm::Electron>;
   }
   static void *newArray_vectorlEvhtmcLcLElectrongR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vhtm::Electron>[nElements] : new vector<vhtm::Electron>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvhtmcLcLElectrongR(void *p) {
      delete ((vector<vhtm::Electron>*)p);
   }
   static void deleteArray_vectorlEvhtmcLcLElectrongR(void *p) {
      delete [] ((vector<vhtm::Electron>*)p);
   }
   static void destruct_vectorlEvhtmcLcLElectrongR(void *p) {
      typedef vector<vhtm::Electron> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vhtm::Electron>

namespace ROOTDict {
   void vectorlEvhtmcLcLEventgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvhtmcLcLEventgR_Dictionary();
   static void *new_vectorlEvhtmcLcLEventgR(void *p = 0);
   static void *newArray_vectorlEvhtmcLcLEventgR(Long_t size, void *p);
   static void delete_vectorlEvhtmcLcLEventgR(void *p);
   static void deleteArray_vectorlEvhtmcLcLEventgR(void *p);
   static void destruct_vectorlEvhtmcLcLEventgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vhtm::Event>*)
   {
      vector<vhtm::Event> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vhtm::Event>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vhtm::Event>", -2, "prec_stl/vector", 49,
                  typeid(vector<vhtm::Event>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvhtmcLcLEventgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<vhtm::Event>) );
      instance.SetNew(&new_vectorlEvhtmcLcLEventgR);
      instance.SetNewArray(&newArray_vectorlEvhtmcLcLEventgR);
      instance.SetDelete(&delete_vectorlEvhtmcLcLEventgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvhtmcLcLEventgR);
      instance.SetDestructor(&destruct_vectorlEvhtmcLcLEventgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vhtm::Event> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vhtm::Event>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvhtmcLcLEventgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vhtm::Event>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvhtmcLcLEventgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vhtm::Event> : new vector<vhtm::Event>;
   }
   static void *newArray_vectorlEvhtmcLcLEventgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vhtm::Event>[nElements] : new vector<vhtm::Event>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvhtmcLcLEventgR(void *p) {
      delete ((vector<vhtm::Event>*)p);
   }
   static void deleteArray_vectorlEvhtmcLcLEventgR(void *p) {
      delete [] ((vector<vhtm::Event>*)p);
   }
   static void destruct_vectorlEvhtmcLcLEventgR(void *p) {
      typedef vector<vhtm::Event> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vhtm::Event>

namespace ROOTDict {
   void vectorlEvhtmcLcLGenEventgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvhtmcLcLGenEventgR_Dictionary();
   static void *new_vectorlEvhtmcLcLGenEventgR(void *p = 0);
   static void *newArray_vectorlEvhtmcLcLGenEventgR(Long_t size, void *p);
   static void delete_vectorlEvhtmcLcLGenEventgR(void *p);
   static void deleteArray_vectorlEvhtmcLcLGenEventgR(void *p);
   static void destruct_vectorlEvhtmcLcLGenEventgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vhtm::GenEvent>*)
   {
      vector<vhtm::GenEvent> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vhtm::GenEvent>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vhtm::GenEvent>", -2, "prec_stl/vector", 49,
                  typeid(vector<vhtm::GenEvent>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvhtmcLcLGenEventgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<vhtm::GenEvent>) );
      instance.SetNew(&new_vectorlEvhtmcLcLGenEventgR);
      instance.SetNewArray(&newArray_vectorlEvhtmcLcLGenEventgR);
      instance.SetDelete(&delete_vectorlEvhtmcLcLGenEventgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvhtmcLcLGenEventgR);
      instance.SetDestructor(&destruct_vectorlEvhtmcLcLGenEventgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vhtm::GenEvent> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vhtm::GenEvent>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvhtmcLcLGenEventgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vhtm::GenEvent>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvhtmcLcLGenEventgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vhtm::GenEvent> : new vector<vhtm::GenEvent>;
   }
   static void *newArray_vectorlEvhtmcLcLGenEventgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vhtm::GenEvent>[nElements] : new vector<vhtm::GenEvent>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvhtmcLcLGenEventgR(void *p) {
      delete ((vector<vhtm::GenEvent>*)p);
   }
   static void deleteArray_vectorlEvhtmcLcLGenEventgR(void *p) {
      delete [] ((vector<vhtm::GenEvent>*)p);
   }
   static void destruct_vectorlEvhtmcLcLGenEventgR(void *p) {
      typedef vector<vhtm::GenEvent> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vhtm::GenEvent>

namespace ROOTDict {
   void vectorlEvhtmcLcLGenJetgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvhtmcLcLGenJetgR_Dictionary();
   static void *new_vectorlEvhtmcLcLGenJetgR(void *p = 0);
   static void *newArray_vectorlEvhtmcLcLGenJetgR(Long_t size, void *p);
   static void delete_vectorlEvhtmcLcLGenJetgR(void *p);
   static void deleteArray_vectorlEvhtmcLcLGenJetgR(void *p);
   static void destruct_vectorlEvhtmcLcLGenJetgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vhtm::GenJet>*)
   {
      vector<vhtm::GenJet> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vhtm::GenJet>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vhtm::GenJet>", -2, "prec_stl/vector", 49,
                  typeid(vector<vhtm::GenJet>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvhtmcLcLGenJetgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<vhtm::GenJet>) );
      instance.SetNew(&new_vectorlEvhtmcLcLGenJetgR);
      instance.SetNewArray(&newArray_vectorlEvhtmcLcLGenJetgR);
      instance.SetDelete(&delete_vectorlEvhtmcLcLGenJetgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvhtmcLcLGenJetgR);
      instance.SetDestructor(&destruct_vectorlEvhtmcLcLGenJetgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vhtm::GenJet> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vhtm::GenJet>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvhtmcLcLGenJetgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vhtm::GenJet>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvhtmcLcLGenJetgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vhtm::GenJet> : new vector<vhtm::GenJet>;
   }
   static void *newArray_vectorlEvhtmcLcLGenJetgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vhtm::GenJet>[nElements] : new vector<vhtm::GenJet>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvhtmcLcLGenJetgR(void *p) {
      delete ((vector<vhtm::GenJet>*)p);
   }
   static void deleteArray_vectorlEvhtmcLcLGenJetgR(void *p) {
      delete [] ((vector<vhtm::GenJet>*)p);
   }
   static void destruct_vectorlEvhtmcLcLGenJetgR(void *p) {
      typedef vector<vhtm::GenJet> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vhtm::GenJet>

namespace ROOTDict {
   void vectorlEvhtmcLcLGenMETgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvhtmcLcLGenMETgR_Dictionary();
   static void *new_vectorlEvhtmcLcLGenMETgR(void *p = 0);
   static void *newArray_vectorlEvhtmcLcLGenMETgR(Long_t size, void *p);
   static void delete_vectorlEvhtmcLcLGenMETgR(void *p);
   static void deleteArray_vectorlEvhtmcLcLGenMETgR(void *p);
   static void destruct_vectorlEvhtmcLcLGenMETgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vhtm::GenMET>*)
   {
      vector<vhtm::GenMET> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vhtm::GenMET>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vhtm::GenMET>", -2, "prec_stl/vector", 49,
                  typeid(vector<vhtm::GenMET>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvhtmcLcLGenMETgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<vhtm::GenMET>) );
      instance.SetNew(&new_vectorlEvhtmcLcLGenMETgR);
      instance.SetNewArray(&newArray_vectorlEvhtmcLcLGenMETgR);
      instance.SetDelete(&delete_vectorlEvhtmcLcLGenMETgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvhtmcLcLGenMETgR);
      instance.SetDestructor(&destruct_vectorlEvhtmcLcLGenMETgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vhtm::GenMET> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vhtm::GenMET>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvhtmcLcLGenMETgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vhtm::GenMET>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvhtmcLcLGenMETgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vhtm::GenMET> : new vector<vhtm::GenMET>;
   }
   static void *newArray_vectorlEvhtmcLcLGenMETgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vhtm::GenMET>[nElements] : new vector<vhtm::GenMET>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvhtmcLcLGenMETgR(void *p) {
      delete ((vector<vhtm::GenMET>*)p);
   }
   static void deleteArray_vectorlEvhtmcLcLGenMETgR(void *p) {
      delete [] ((vector<vhtm::GenMET>*)p);
   }
   static void destruct_vectorlEvhtmcLcLGenMETgR(void *p) {
      typedef vector<vhtm::GenMET> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vhtm::GenMET>

namespace ROOTDict {
   void vectorlEvhtmcLcLGenParticlegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvhtmcLcLGenParticlegR_Dictionary();
   static void *new_vectorlEvhtmcLcLGenParticlegR(void *p = 0);
   static void *newArray_vectorlEvhtmcLcLGenParticlegR(Long_t size, void *p);
   static void delete_vectorlEvhtmcLcLGenParticlegR(void *p);
   static void deleteArray_vectorlEvhtmcLcLGenParticlegR(void *p);
   static void destruct_vectorlEvhtmcLcLGenParticlegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vhtm::GenParticle>*)
   {
      vector<vhtm::GenParticle> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vhtm::GenParticle>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vhtm::GenParticle>", -2, "prec_stl/vector", 49,
                  typeid(vector<vhtm::GenParticle>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvhtmcLcLGenParticlegR_Dictionary, isa_proxy, 4,
                  sizeof(vector<vhtm::GenParticle>) );
      instance.SetNew(&new_vectorlEvhtmcLcLGenParticlegR);
      instance.SetNewArray(&newArray_vectorlEvhtmcLcLGenParticlegR);
      instance.SetDelete(&delete_vectorlEvhtmcLcLGenParticlegR);
      instance.SetDeleteArray(&deleteArray_vectorlEvhtmcLcLGenParticlegR);
      instance.SetDestructor(&destruct_vectorlEvhtmcLcLGenParticlegR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vhtm::GenParticle> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vhtm::GenParticle>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvhtmcLcLGenParticlegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vhtm::GenParticle>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvhtmcLcLGenParticlegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vhtm::GenParticle> : new vector<vhtm::GenParticle>;
   }
   static void *newArray_vectorlEvhtmcLcLGenParticlegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vhtm::GenParticle>[nElements] : new vector<vhtm::GenParticle>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvhtmcLcLGenParticlegR(void *p) {
      delete ((vector<vhtm::GenParticle>*)p);
   }
   static void deleteArray_vectorlEvhtmcLcLGenParticlegR(void *p) {
      delete [] ((vector<vhtm::GenParticle>*)p);
   }
   static void destruct_vectorlEvhtmcLcLGenParticlegR(void *p) {
      typedef vector<vhtm::GenParticle> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vhtm::GenParticle>

namespace ROOTDict {
   void vectorlEvhtmcLcLJetgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvhtmcLcLJetgR_Dictionary();
   static void *new_vectorlEvhtmcLcLJetgR(void *p = 0);
   static void *newArray_vectorlEvhtmcLcLJetgR(Long_t size, void *p);
   static void delete_vectorlEvhtmcLcLJetgR(void *p);
   static void deleteArray_vectorlEvhtmcLcLJetgR(void *p);
   static void destruct_vectorlEvhtmcLcLJetgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vhtm::Jet>*)
   {
      vector<vhtm::Jet> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vhtm::Jet>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vhtm::Jet>", -2, "prec_stl/vector", 49,
                  typeid(vector<vhtm::Jet>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvhtmcLcLJetgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<vhtm::Jet>) );
      instance.SetNew(&new_vectorlEvhtmcLcLJetgR);
      instance.SetNewArray(&newArray_vectorlEvhtmcLcLJetgR);
      instance.SetDelete(&delete_vectorlEvhtmcLcLJetgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvhtmcLcLJetgR);
      instance.SetDestructor(&destruct_vectorlEvhtmcLcLJetgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vhtm::Jet> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vhtm::Jet>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvhtmcLcLJetgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vhtm::Jet>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvhtmcLcLJetgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vhtm::Jet> : new vector<vhtm::Jet>;
   }
   static void *newArray_vectorlEvhtmcLcLJetgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vhtm::Jet>[nElements] : new vector<vhtm::Jet>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvhtmcLcLJetgR(void *p) {
      delete ((vector<vhtm::Jet>*)p);
   }
   static void deleteArray_vectorlEvhtmcLcLJetgR(void *p) {
      delete [] ((vector<vhtm::Jet>*)p);
   }
   static void destruct_vectorlEvhtmcLcLJetgR(void *p) {
      typedef vector<vhtm::Jet> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vhtm::Jet>

namespace ROOTDict {
   void vectorlEvhtmcLcLMETgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvhtmcLcLMETgR_Dictionary();
   static void *new_vectorlEvhtmcLcLMETgR(void *p = 0);
   static void *newArray_vectorlEvhtmcLcLMETgR(Long_t size, void *p);
   static void delete_vectorlEvhtmcLcLMETgR(void *p);
   static void deleteArray_vectorlEvhtmcLcLMETgR(void *p);
   static void destruct_vectorlEvhtmcLcLMETgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vhtm::MET>*)
   {
      vector<vhtm::MET> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vhtm::MET>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vhtm::MET>", -2, "prec_stl/vector", 49,
                  typeid(vector<vhtm::MET>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvhtmcLcLMETgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<vhtm::MET>) );
      instance.SetNew(&new_vectorlEvhtmcLcLMETgR);
      instance.SetNewArray(&newArray_vectorlEvhtmcLcLMETgR);
      instance.SetDelete(&delete_vectorlEvhtmcLcLMETgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvhtmcLcLMETgR);
      instance.SetDestructor(&destruct_vectorlEvhtmcLcLMETgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vhtm::MET> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vhtm::MET>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvhtmcLcLMETgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vhtm::MET>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvhtmcLcLMETgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vhtm::MET> : new vector<vhtm::MET>;
   }
   static void *newArray_vectorlEvhtmcLcLMETgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vhtm::MET>[nElements] : new vector<vhtm::MET>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvhtmcLcLMETgR(void *p) {
      delete ((vector<vhtm::MET>*)p);
   }
   static void deleteArray_vectorlEvhtmcLcLMETgR(void *p) {
      delete [] ((vector<vhtm::MET>*)p);
   }
   static void destruct_vectorlEvhtmcLcLMETgR(void *p) {
      typedef vector<vhtm::MET> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vhtm::MET>

namespace ROOTDict {
   void vectorlEvhtmcLcLMuongR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvhtmcLcLMuongR_Dictionary();
   static void *new_vectorlEvhtmcLcLMuongR(void *p = 0);
   static void *newArray_vectorlEvhtmcLcLMuongR(Long_t size, void *p);
   static void delete_vectorlEvhtmcLcLMuongR(void *p);
   static void deleteArray_vectorlEvhtmcLcLMuongR(void *p);
   static void destruct_vectorlEvhtmcLcLMuongR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vhtm::Muon>*)
   {
      vector<vhtm::Muon> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vhtm::Muon>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vhtm::Muon>", -2, "prec_stl/vector", 49,
                  typeid(vector<vhtm::Muon>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvhtmcLcLMuongR_Dictionary, isa_proxy, 4,
                  sizeof(vector<vhtm::Muon>) );
      instance.SetNew(&new_vectorlEvhtmcLcLMuongR);
      instance.SetNewArray(&newArray_vectorlEvhtmcLcLMuongR);
      instance.SetDelete(&delete_vectorlEvhtmcLcLMuongR);
      instance.SetDeleteArray(&deleteArray_vectorlEvhtmcLcLMuongR);
      instance.SetDestructor(&destruct_vectorlEvhtmcLcLMuongR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vhtm::Muon> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vhtm::Muon>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvhtmcLcLMuongR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vhtm::Muon>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvhtmcLcLMuongR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vhtm::Muon> : new vector<vhtm::Muon>;
   }
   static void *newArray_vectorlEvhtmcLcLMuongR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vhtm::Muon>[nElements] : new vector<vhtm::Muon>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvhtmcLcLMuongR(void *p) {
      delete ((vector<vhtm::Muon>*)p);
   }
   static void deleteArray_vectorlEvhtmcLcLMuongR(void *p) {
      delete [] ((vector<vhtm::Muon>*)p);
   }
   static void destruct_vectorlEvhtmcLcLMuongR(void *p) {
      typedef vector<vhtm::Muon> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vhtm::Muon>

namespace ROOTDict {
   void vectorlEvhtmcLcLPhotongR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvhtmcLcLPhotongR_Dictionary();
   static void *new_vectorlEvhtmcLcLPhotongR(void *p = 0);
   static void *newArray_vectorlEvhtmcLcLPhotongR(Long_t size, void *p);
   static void delete_vectorlEvhtmcLcLPhotongR(void *p);
   static void deleteArray_vectorlEvhtmcLcLPhotongR(void *p);
   static void destruct_vectorlEvhtmcLcLPhotongR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vhtm::Photon>*)
   {
      vector<vhtm::Photon> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vhtm::Photon>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vhtm::Photon>", -2, "prec_stl/vector", 49,
                  typeid(vector<vhtm::Photon>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvhtmcLcLPhotongR_Dictionary, isa_proxy, 4,
                  sizeof(vector<vhtm::Photon>) );
      instance.SetNew(&new_vectorlEvhtmcLcLPhotongR);
      instance.SetNewArray(&newArray_vectorlEvhtmcLcLPhotongR);
      instance.SetDelete(&delete_vectorlEvhtmcLcLPhotongR);
      instance.SetDeleteArray(&deleteArray_vectorlEvhtmcLcLPhotongR);
      instance.SetDestructor(&destruct_vectorlEvhtmcLcLPhotongR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vhtm::Photon> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vhtm::Photon>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvhtmcLcLPhotongR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vhtm::Photon>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvhtmcLcLPhotongR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vhtm::Photon> : new vector<vhtm::Photon>;
   }
   static void *newArray_vectorlEvhtmcLcLPhotongR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vhtm::Photon>[nElements] : new vector<vhtm::Photon>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvhtmcLcLPhotongR(void *p) {
      delete ((vector<vhtm::Photon>*)p);
   }
   static void deleteArray_vectorlEvhtmcLcLPhotongR(void *p) {
      delete [] ((vector<vhtm::Photon>*)p);
   }
   static void destruct_vectorlEvhtmcLcLPhotongR(void *p) {
      typedef vector<vhtm::Photon> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vhtm::Photon>

namespace ROOTDict {
   void vectorlEvhtmcLcLTaugR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvhtmcLcLTaugR_Dictionary();
   static void *new_vectorlEvhtmcLcLTaugR(void *p = 0);
   static void *newArray_vectorlEvhtmcLcLTaugR(Long_t size, void *p);
   static void delete_vectorlEvhtmcLcLTaugR(void *p);
   static void deleteArray_vectorlEvhtmcLcLTaugR(void *p);
   static void destruct_vectorlEvhtmcLcLTaugR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vhtm::Tau>*)
   {
      vector<vhtm::Tau> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vhtm::Tau>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vhtm::Tau>", -2, "prec_stl/vector", 49,
                  typeid(vector<vhtm::Tau>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvhtmcLcLTaugR_Dictionary, isa_proxy, 4,
                  sizeof(vector<vhtm::Tau>) );
      instance.SetNew(&new_vectorlEvhtmcLcLTaugR);
      instance.SetNewArray(&newArray_vectorlEvhtmcLcLTaugR);
      instance.SetDelete(&delete_vectorlEvhtmcLcLTaugR);
      instance.SetDeleteArray(&deleteArray_vectorlEvhtmcLcLTaugR);
      instance.SetDestructor(&destruct_vectorlEvhtmcLcLTaugR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vhtm::Tau> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vhtm::Tau>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvhtmcLcLTaugR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vhtm::Tau>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvhtmcLcLTaugR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vhtm::Tau> : new vector<vhtm::Tau>;
   }
   static void *newArray_vectorlEvhtmcLcLTaugR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vhtm::Tau>[nElements] : new vector<vhtm::Tau>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvhtmcLcLTaugR(void *p) {
      delete ((vector<vhtm::Tau>*)p);
   }
   static void deleteArray_vectorlEvhtmcLcLTaugR(void *p) {
      delete [] ((vector<vhtm::Tau>*)p);
   }
   static void destruct_vectorlEvhtmcLcLTaugR(void *p) {
      typedef vector<vhtm::Tau> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vhtm::Tau>

namespace ROOTDict {
   void vectorlEvhtmcLcLTriggerObjectgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvhtmcLcLTriggerObjectgR_Dictionary();
   static void *new_vectorlEvhtmcLcLTriggerObjectgR(void *p = 0);
   static void *newArray_vectorlEvhtmcLcLTriggerObjectgR(Long_t size, void *p);
   static void delete_vectorlEvhtmcLcLTriggerObjectgR(void *p);
   static void deleteArray_vectorlEvhtmcLcLTriggerObjectgR(void *p);
   static void destruct_vectorlEvhtmcLcLTriggerObjectgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vhtm::TriggerObject>*)
   {
      vector<vhtm::TriggerObject> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vhtm::TriggerObject>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vhtm::TriggerObject>", -2, "prec_stl/vector", 49,
                  typeid(vector<vhtm::TriggerObject>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvhtmcLcLTriggerObjectgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<vhtm::TriggerObject>) );
      instance.SetNew(&new_vectorlEvhtmcLcLTriggerObjectgR);
      instance.SetNewArray(&newArray_vectorlEvhtmcLcLTriggerObjectgR);
      instance.SetDelete(&delete_vectorlEvhtmcLcLTriggerObjectgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvhtmcLcLTriggerObjectgR);
      instance.SetDestructor(&destruct_vectorlEvhtmcLcLTriggerObjectgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vhtm::TriggerObject> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vhtm::TriggerObject>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvhtmcLcLTriggerObjectgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vhtm::TriggerObject>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvhtmcLcLTriggerObjectgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vhtm::TriggerObject> : new vector<vhtm::TriggerObject>;
   }
   static void *newArray_vectorlEvhtmcLcLTriggerObjectgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vhtm::TriggerObject>[nElements] : new vector<vhtm::TriggerObject>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvhtmcLcLTriggerObjectgR(void *p) {
      delete ((vector<vhtm::TriggerObject>*)p);
   }
   static void deleteArray_vectorlEvhtmcLcLTriggerObjectgR(void *p) {
      delete [] ((vector<vhtm::TriggerObject>*)p);
   }
   static void destruct_vectorlEvhtmcLcLTriggerObjectgR(void *p) {
      typedef vector<vhtm::TriggerObject> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vhtm::TriggerObject>

namespace ROOTDict {
   void vectorlEvhtmcLcLVertexgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvhtmcLcLVertexgR_Dictionary();
   static void *new_vectorlEvhtmcLcLVertexgR(void *p = 0);
   static void *newArray_vectorlEvhtmcLcLVertexgR(Long_t size, void *p);
   static void delete_vectorlEvhtmcLcLVertexgR(void *p);
   static void deleteArray_vectorlEvhtmcLcLVertexgR(void *p);
   static void destruct_vectorlEvhtmcLcLVertexgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vhtm::Vertex>*)
   {
      vector<vhtm::Vertex> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vhtm::Vertex>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vhtm::Vertex>", -2, "prec_stl/vector", 49,
                  typeid(vector<vhtm::Vertex>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvhtmcLcLVertexgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<vhtm::Vertex>) );
      instance.SetNew(&new_vectorlEvhtmcLcLVertexgR);
      instance.SetNewArray(&newArray_vectorlEvhtmcLcLVertexgR);
      instance.SetDelete(&delete_vectorlEvhtmcLcLVertexgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvhtmcLcLVertexgR);
      instance.SetDestructor(&destruct_vectorlEvhtmcLcLVertexgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vhtm::Vertex> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vhtm::Vertex>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvhtmcLcLVertexgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vhtm::Vertex>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvhtmcLcLVertexgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vhtm::Vertex> : new vector<vhtm::Vertex>;
   }
   static void *newArray_vectorlEvhtmcLcLVertexgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vhtm::Vertex>[nElements] : new vector<vhtm::Vertex>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvhtmcLcLVertexgR(void *p) {
      delete ((vector<vhtm::Vertex>*)p);
   }
   static void deleteArray_vectorlEvhtmcLcLVertexgR(void *p) {
      delete [] ((vector<vhtm::Vertex>*)p);
   }
   static void destruct_vectorlEvhtmcLcLVertexgR(void *p) {
      typedef vector<vhtm::Vertex> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vhtm::Vertex>

/********************************************************
* Dict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableDict();

extern "C" void G__set_cpp_environmentDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("interface/PhysicsObjects.h");
  G__cpp_reset_tagtableDict();
}
#include <new>
extern "C" int G__cpp_dllrevDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* vhtm::Candidate */
static int G__Dict_404_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vhtm::Candidate* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vhtm::Candidate[n];
     } else {
       p = new((void*) gvp) vhtm::Candidate[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vhtm::Candidate;
     } else {
       p = new((void*) gvp) vhtm::Candidate;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vhtmcLcLCandidate));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_404_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vhtm::Candidate* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vhtm::Candidate(
(float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
   } else {
     p = new((void*) gvp) vhtm::Candidate(
(float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vhtmcLcLCandidate));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_404_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) vhtm::Candidate::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_404_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) vhtm::Candidate::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_404_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) vhtm::Candidate::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_404_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      vhtm::Candidate::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_404_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vhtm::Candidate*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_404_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) vhtm::Candidate::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_404_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) vhtm::Candidate::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_404_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) vhtm::Candidate::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_404_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) vhtm::Candidate::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Dict_404_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   vhtm::Candidate* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new vhtm::Candidate(*(vhtm::Candidate*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vhtmcLcLCandidate));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vhtm::Candidate G__TvhtmcLcLCandidate;
static int G__Dict_404_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vhtm::Candidate*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vhtm::Candidate*) (soff+(sizeof(vhtm::Candidate)*i)))->~G__TvhtmcLcLCandidate();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vhtm::Candidate*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vhtm::Candidate*) (soff))->~G__TvhtmcLcLCandidate();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_404_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vhtm::Candidate* dest = (vhtm::Candidate*) G__getstructoffset();
   *dest = *(vhtm::Candidate*) libp->para[0].ref;
   const vhtm::Candidate& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vhtm::Event */
static int G__Dict_405_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vhtm::Event* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vhtm::Event[n];
     } else {
       p = new((void*) gvp) vhtm::Event[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vhtm::Event;
     } else {
       p = new((void*) gvp) vhtm::Event;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vhtmcLcLEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_405_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) vhtm::Event::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_405_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) vhtm::Event::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_405_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) vhtm::Event::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_405_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      vhtm::Event::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_405_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vhtm::Event*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_405_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) vhtm::Event::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_405_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) vhtm::Event::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_405_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) vhtm::Event::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_405_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) vhtm::Event::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Dict_405_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   vhtm::Event* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new vhtm::Event(*(vhtm::Event*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vhtmcLcLEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vhtm::Event G__TvhtmcLcLEvent;
static int G__Dict_405_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vhtm::Event*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vhtm::Event*) (soff+(sizeof(vhtm::Event)*i)))->~G__TvhtmcLcLEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vhtm::Event*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vhtm::Event*) (soff))->~G__TvhtmcLcLEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_405_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vhtm::Event* dest = (vhtm::Event*) G__getstructoffset();
   *dest = *(vhtm::Event*) libp->para[0].ref;
   const vhtm::Event& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vhtm::GenEvent */
static int G__Dict_410_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vhtm::GenEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vhtm::GenEvent[n];
     } else {
       p = new((void*) gvp) vhtm::GenEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vhtm::GenEvent;
     } else {
       p = new((void*) gvp) vhtm::GenEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_410_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) vhtm::GenEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_410_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) vhtm::GenEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_410_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) vhtm::GenEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_410_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      vhtm::GenEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_410_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vhtm::GenEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_410_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) vhtm::GenEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_410_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) vhtm::GenEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_410_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) vhtm::GenEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_410_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) vhtm::GenEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Dict_410_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   vhtm::GenEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new vhtm::GenEvent(*(vhtm::GenEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vhtm::GenEvent G__TvhtmcLcLGenEvent;
static int G__Dict_410_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vhtm::GenEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vhtm::GenEvent*) (soff+(sizeof(vhtm::GenEvent)*i)))->~G__TvhtmcLcLGenEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vhtm::GenEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vhtm::GenEvent*) (soff))->~G__TvhtmcLcLGenEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_410_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vhtm::GenEvent* dest = (vhtm::GenEvent*) G__getstructoffset();
   *dest = *(vhtm::GenEvent*) libp->para[0].ref;
   const vhtm::GenEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vhtm::Electron */
static int G__Dict_411_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vhtm::Electron* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vhtm::Electron[n];
     } else {
       p = new((void*) gvp) vhtm::Electron[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vhtm::Electron;
     } else {
       p = new((void*) gvp) vhtm::Electron;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vhtmcLcLElectron));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_411_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) vhtm::Electron::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_411_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) vhtm::Electron::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_411_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) vhtm::Electron::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_411_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      vhtm::Electron::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_411_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vhtm::Electron*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_411_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) vhtm::Electron::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_411_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) vhtm::Electron::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_411_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) vhtm::Electron::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_411_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) vhtm::Electron::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Dict_411_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   vhtm::Electron* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new vhtm::Electron(*(vhtm::Electron*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vhtmcLcLElectron));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vhtm::Electron G__TvhtmcLcLElectron;
static int G__Dict_411_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vhtm::Electron*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vhtm::Electron*) (soff+(sizeof(vhtm::Electron)*i)))->~G__TvhtmcLcLElectron();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vhtm::Electron*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vhtm::Electron*) (soff))->~G__TvhtmcLcLElectron();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_411_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vhtm::Electron* dest = (vhtm::Electron*) G__getstructoffset();
   *dest = *(vhtm::Electron*) libp->para[0].ref;
   const vhtm::Electron& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vhtm::GenParticle */
static int G__Dict_412_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vhtm::GenParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vhtm::GenParticle[n];
     } else {
       p = new((void*) gvp) vhtm::GenParticle[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vhtm::GenParticle;
     } else {
       p = new((void*) gvp) vhtm::GenParticle;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_412_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) vhtm::GenParticle::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_412_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) vhtm::GenParticle::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_412_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) vhtm::GenParticle::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_412_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      vhtm::GenParticle::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_412_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vhtm::GenParticle*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_412_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) vhtm::GenParticle::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_412_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) vhtm::GenParticle::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_412_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) vhtm::GenParticle::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_412_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) vhtm::GenParticle::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Dict_412_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   vhtm::GenParticle* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new vhtm::GenParticle(*(vhtm::GenParticle*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vhtm::GenParticle G__TvhtmcLcLGenParticle;
static int G__Dict_412_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vhtm::GenParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vhtm::GenParticle*) (soff+(sizeof(vhtm::GenParticle)*i)))->~G__TvhtmcLcLGenParticle();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vhtm::GenParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vhtm::GenParticle*) (soff))->~G__TvhtmcLcLGenParticle();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_412_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vhtm::GenParticle* dest = (vhtm::GenParticle*) G__getstructoffset();
   *dest = *(vhtm::GenParticle*) libp->para[0].ref;
   const vhtm::GenParticle& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vhtm::GenJet */
static int G__Dict_413_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vhtm::GenJet* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vhtm::GenJet[n];
     } else {
       p = new((void*) gvp) vhtm::GenJet[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vhtm::GenJet;
     } else {
       p = new((void*) gvp) vhtm::GenJet;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenJet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_413_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) vhtm::GenJet::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_413_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) vhtm::GenJet::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_413_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) vhtm::GenJet::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_413_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      vhtm::GenJet::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_413_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vhtm::GenJet*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_413_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) vhtm::GenJet::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_413_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) vhtm::GenJet::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_413_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) vhtm::GenJet::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_413_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) vhtm::GenJet::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Dict_413_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   vhtm::GenJet* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new vhtm::GenJet(*(vhtm::GenJet*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenJet));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vhtm::GenJet G__TvhtmcLcLGenJet;
static int G__Dict_413_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vhtm::GenJet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vhtm::GenJet*) (soff+(sizeof(vhtm::GenJet)*i)))->~G__TvhtmcLcLGenJet();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vhtm::GenJet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vhtm::GenJet*) (soff))->~G__TvhtmcLcLGenJet();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_413_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vhtm::GenJet* dest = (vhtm::GenJet*) G__getstructoffset();
   *dest = *(vhtm::GenJet*) libp->para[0].ref;
   const vhtm::GenJet& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vhtm::MET */
static int G__Dict_414_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vhtm::MET* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vhtm::MET[n];
     } else {
       p = new((void*) gvp) vhtm::MET[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vhtm::MET;
     } else {
       p = new((void*) gvp) vhtm::MET;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vhtmcLcLMET));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_414_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) vhtm::MET::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_414_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) vhtm::MET::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_414_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) vhtm::MET::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_414_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      vhtm::MET::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_414_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vhtm::MET*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_414_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) vhtm::MET::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_414_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) vhtm::MET::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_414_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) vhtm::MET::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_414_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) vhtm::MET::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Dict_414_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   vhtm::MET* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new vhtm::MET(*(vhtm::MET*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vhtmcLcLMET));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vhtm::MET G__TvhtmcLcLMET;
static int G__Dict_414_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vhtm::MET*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vhtm::MET*) (soff+(sizeof(vhtm::MET)*i)))->~G__TvhtmcLcLMET();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vhtm::MET*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vhtm::MET*) (soff))->~G__TvhtmcLcLMET();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_414_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vhtm::MET* dest = (vhtm::MET*) G__getstructoffset();
   *dest = *(vhtm::MET*) libp->para[0].ref;
   const vhtm::MET& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vhtm::Tau */
static int G__Dict_415_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vhtm::Tau* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vhtm::Tau[n];
     } else {
       p = new((void*) gvp) vhtm::Tau[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vhtm::Tau;
     } else {
       p = new((void*) gvp) vhtm::Tau;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vhtmcLcLTau));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_415_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) vhtm::Tau::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_415_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) vhtm::Tau::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_415_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) vhtm::Tau::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_415_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      vhtm::Tau::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_415_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vhtm::Tau*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_415_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) vhtm::Tau::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_415_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) vhtm::Tau::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_415_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) vhtm::Tau::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_415_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) vhtm::Tau::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Dict_415_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   vhtm::Tau* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new vhtm::Tau(*(vhtm::Tau*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vhtmcLcLTau));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vhtm::Tau G__TvhtmcLcLTau;
static int G__Dict_415_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vhtm::Tau*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vhtm::Tau*) (soff+(sizeof(vhtm::Tau)*i)))->~G__TvhtmcLcLTau();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vhtm::Tau*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vhtm::Tau*) (soff))->~G__TvhtmcLcLTau();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_415_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vhtm::Tau* dest = (vhtm::Tau*) G__getstructoffset();
   *dest = *(vhtm::Tau*) libp->para[0].ref;
   const vhtm::Tau& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<vhtm::Candidate,allocator<vhtm::Candidate> > */
static int G__Dict_417_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vhtm::Candidate,allocator<vhtm::Candidate> >::reference obj = ((vector<vhtm::Candidate,allocator<vhtm::Candidate> >*) G__getstructoffset())->at((vector<vhtm::Candidate,allocator<vhtm::Candidate> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_417_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::Candidate,allocator<vhtm::Candidate> >::const_reference obj = ((const vector<vhtm::Candidate,allocator<vhtm::Candidate> >*) G__getstructoffset())->at((vector<vhtm::Candidate,allocator<vhtm::Candidate> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_417_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::Candidate,allocator<vhtm::Candidate> >::iterator* pobj;
         vector<vhtm::Candidate,allocator<vhtm::Candidate> >::iterator xobj = ((vector<vhtm::Candidate,allocator<vhtm::Candidate> >*) G__getstructoffset())->begin();
         pobj = new vector<vhtm::Candidate,allocator<vhtm::Candidate> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_417_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::Candidate,allocator<vhtm::Candidate> >::iterator* pobj;
         vector<vhtm::Candidate,allocator<vhtm::Candidate> >::iterator xobj = ((vector<vhtm::Candidate,allocator<vhtm::Candidate> >*) G__getstructoffset())->end();
         pobj = new vector<vhtm::Candidate,allocator<vhtm::Candidate> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_417_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::Candidate,allocator<vhtm::Candidate> >::reverse_iterator* pobj;
         vector<vhtm::Candidate,allocator<vhtm::Candidate> >::reverse_iterator xobj = ((vector<vhtm::Candidate,allocator<vhtm::Candidate> >*) G__getstructoffset())->rbegin();
         pobj = new vector<vhtm::Candidate,allocator<vhtm::Candidate> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_417_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::Candidate,allocator<vhtm::Candidate> >::reverse_iterator* pobj;
         vector<vhtm::Candidate,allocator<vhtm::Candidate> >::reverse_iterator xobj = ((vector<vhtm::Candidate,allocator<vhtm::Candidate> >*) G__getstructoffset())->rend();
         pobj = new vector<vhtm::Candidate,allocator<vhtm::Candidate> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_417_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vhtm::Candidate,allocator<vhtm::Candidate> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_417_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vhtm::Candidate,allocator<vhtm::Candidate> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_417_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Candidate,allocator<vhtm::Candidate> >*) G__getstructoffset())->resize((vector<vhtm::Candidate,allocator<vhtm::Candidate> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_417_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Candidate,allocator<vhtm::Candidate> >*) G__getstructoffset())->resize((vector<vhtm::Candidate,allocator<vhtm::Candidate> >::size_type) G__int(libp->para[0]), *((vhtm::Candidate*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_417_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vhtm::Candidate,allocator<vhtm::Candidate> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_417_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<vhtm::Candidate,allocator<vhtm::Candidate> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_417_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vhtm::Candidate,allocator<vhtm::Candidate> >::reference obj = ((vector<vhtm::Candidate,allocator<vhtm::Candidate> >*) G__getstructoffset())->operator[]((vector<vhtm::Candidate,allocator<vhtm::Candidate> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_417_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::Candidate,allocator<vhtm::Candidate> >::const_reference obj = ((const vector<vhtm::Candidate,allocator<vhtm::Candidate> >*) G__getstructoffset())->operator[]((vector<vhtm::Candidate,allocator<vhtm::Candidate> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_417_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vhtm::Candidate,allocator<vhtm::Candidate> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vhtm::Candidate,allocator<vhtm::Candidate> >[n];
     } else {
       p = new((void*) gvp) vector<vhtm::Candidate,allocator<vhtm::Candidate> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vhtm::Candidate,allocator<vhtm::Candidate> >;
     } else {
       p = new((void*) gvp) vector<vhtm::Candidate,allocator<vhtm::Candidate> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLCandidatecOallocatorlEvhtmcLcLCandidategRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_417_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vhtm::Candidate,allocator<vhtm::Candidate> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vhtm::Candidate,allocator<vhtm::Candidate> >((vector<vhtm::Candidate,allocator<vhtm::Candidate> >::size_type) G__int(libp->para[0]), *(vhtm::Candidate*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<vhtm::Candidate,allocator<vhtm::Candidate> >((vector<vhtm::Candidate,allocator<vhtm::Candidate> >::size_type) G__int(libp->para[0]), *(vhtm::Candidate*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vhtm::Candidate,allocator<vhtm::Candidate> >((vector<vhtm::Candidate,allocator<vhtm::Candidate> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<vhtm::Candidate,allocator<vhtm::Candidate> >((vector<vhtm::Candidate,allocator<vhtm::Candidate> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLCandidatecOallocatorlEvhtmcLcLCandidategRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_417_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vhtm::Candidate,allocator<vhtm::Candidate> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vhtm::Candidate,allocator<vhtm::Candidate> >(*(vector<vhtm::Candidate,allocator<vhtm::Candidate> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<vhtm::Candidate,allocator<vhtm::Candidate> >(*(vector<vhtm::Candidate,allocator<vhtm::Candidate> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLCandidatecOallocatorlEvhtmcLcLCandidategRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_417_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vhtm::Candidate,allocator<vhtm::Candidate> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vhtm::Candidate,allocator<vhtm::Candidate> >(*((vector<vhtm::Candidate,allocator<vhtm::Candidate> >::const_iterator*) G__int(libp->para[0])), *((vector<vhtm::Candidate,allocator<vhtm::Candidate> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<vhtm::Candidate,allocator<vhtm::Candidate> >(*((vector<vhtm::Candidate,allocator<vhtm::Candidate> >::const_iterator*) G__int(libp->para[0])), *((vector<vhtm::Candidate,allocator<vhtm::Candidate> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLCandidatecOallocatorlEvhtmcLcLCandidategRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_417_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vhtm::Candidate,allocator<vhtm::Candidate> >& obj = ((vector<vhtm::Candidate,allocator<vhtm::Candidate> >*) G__getstructoffset())->operator=(*(vector<vhtm::Candidate,allocator<vhtm::Candidate> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_417_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Candidate,allocator<vhtm::Candidate> >*) G__getstructoffset())->reserve((vector<vhtm::Candidate,allocator<vhtm::Candidate> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_417_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vhtm::Candidate& obj = ((vector<vhtm::Candidate,allocator<vhtm::Candidate> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_417_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vhtm::Candidate& obj = ((vector<vhtm::Candidate,allocator<vhtm::Candidate> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_417_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Candidate,allocator<vhtm::Candidate> >*) G__getstructoffset())->push_back(*(vhtm::Candidate*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_417_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Candidate,allocator<vhtm::Candidate> >*) G__getstructoffset())->swap(*(vector<vhtm::Candidate,allocator<vhtm::Candidate> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_417_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::Candidate,allocator<vhtm::Candidate> >::iterator* pobj;
         vector<vhtm::Candidate,allocator<vhtm::Candidate> >::iterator xobj = ((vector<vhtm::Candidate,allocator<vhtm::Candidate> >*) G__getstructoffset())->insert(*((vector<vhtm::Candidate,allocator<vhtm::Candidate> >::iterator*) G__int(libp->para[0])), *(vhtm::Candidate*) libp->para[1].ref);
         pobj = new vector<vhtm::Candidate,allocator<vhtm::Candidate> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_417_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Candidate,allocator<vhtm::Candidate> >*) G__getstructoffset())->insert(*((vector<vhtm::Candidate,allocator<vhtm::Candidate> >::iterator*) G__int(libp->para[0])), *((vector<vhtm::Candidate,allocator<vhtm::Candidate> >::const_iterator*) G__int(libp->para[1]))
, *((vector<vhtm::Candidate,allocator<vhtm::Candidate> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_417_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Candidate,allocator<vhtm::Candidate> >*) G__getstructoffset())->insert(*((vector<vhtm::Candidate,allocator<vhtm::Candidate> >::iterator*) G__int(libp->para[0])), (vector<vhtm::Candidate,allocator<vhtm::Candidate> >::size_type) G__int(libp->para[1])
, *(vhtm::Candidate*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_417_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Candidate,allocator<vhtm::Candidate> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_417_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Candidate,allocator<vhtm::Candidate> >*) G__getstructoffset())->erase(*((vector<vhtm::Candidate,allocator<vhtm::Candidate> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_417_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Candidate,allocator<vhtm::Candidate> >*) G__getstructoffset())->erase(*((vector<vhtm::Candidate,allocator<vhtm::Candidate> >::iterator*) G__int(libp->para[0])), *((vector<vhtm::Candidate,allocator<vhtm::Candidate> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_417_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Candidate,allocator<vhtm::Candidate> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<vhtm::Candidate,allocator<vhtm::Candidate> > G__TvectorlEvhtmcLcLCandidatecOallocatorlEvhtmcLcLCandidategRsPgR;
static int G__Dict_417_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<vhtm::Candidate,allocator<vhtm::Candidate> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<vhtm::Candidate,allocator<vhtm::Candidate> >*) (soff+(sizeof(vector<vhtm::Candidate,allocator<vhtm::Candidate> >)*i)))->~G__TvectorlEvhtmcLcLCandidatecOallocatorlEvhtmcLcLCandidategRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<vhtm::Candidate,allocator<vhtm::Candidate> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<vhtm::Candidate,allocator<vhtm::Candidate> >*) (soff))->~G__TvectorlEvhtmcLcLCandidatecOallocatorlEvhtmcLcLCandidategRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vhtm::Muon */
static int G__Dict_420_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vhtm::Muon* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vhtm::Muon[n];
     } else {
       p = new((void*) gvp) vhtm::Muon[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vhtm::Muon;
     } else {
       p = new((void*) gvp) vhtm::Muon;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vhtmcLcLMuon));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_420_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) vhtm::Muon::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_420_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) vhtm::Muon::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_420_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) vhtm::Muon::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_420_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      vhtm::Muon::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_420_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vhtm::Muon*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_420_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) vhtm::Muon::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_420_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) vhtm::Muon::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_420_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) vhtm::Muon::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_420_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) vhtm::Muon::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Dict_420_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   vhtm::Muon* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new vhtm::Muon(*(vhtm::Muon*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vhtmcLcLMuon));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vhtm::Muon G__TvhtmcLcLMuon;
static int G__Dict_420_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vhtm::Muon*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vhtm::Muon*) (soff+(sizeof(vhtm::Muon)*i)))->~G__TvhtmcLcLMuon();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vhtm::Muon*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vhtm::Muon*) (soff))->~G__TvhtmcLcLMuon();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_420_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vhtm::Muon* dest = (vhtm::Muon*) G__getstructoffset();
   *dest = *(vhtm::Muon*) libp->para[0].ref;
   const vhtm::Muon& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > > */
static int G__Dict_423_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >[n];
     } else {
       p = new((void*) gvp) map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >;
     } else {
       p = new((void*) gvp) map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_maplEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_423_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >(*((map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::iterator*) G__int(libp->para[0])), *((map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >(*((map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::iterator*) G__int(libp->para[0])), *((map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_maplEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_423_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >(*((map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::reverse_iterator*) G__int(libp->para[0])), *((map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::reverse_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >(*((map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::reverse_iterator*) G__int(libp->para[0])), *((map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::reverse_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_maplEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_423_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >(*(map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >(*(map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_maplEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_423_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >& obj = ((map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >*) G__getstructoffset())->operator=(*(map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_423_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::iterator* pobj;
         map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::iterator xobj = ((map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >*) G__getstructoffset())->begin();
         pobj = new map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_423_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::iterator* pobj;
         map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::iterator xobj = ((map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >*) G__getstructoffset())->end();
         pobj = new map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_423_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::reverse_iterator* pobj;
         map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::reverse_iterator xobj = ((map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >*) G__getstructoffset())->rbegin();
         pobj = new map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_423_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::reverse_iterator* pobj;
         map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::reverse_iterator xobj = ((map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >*) G__getstructoffset())->rend();
         pobj = new map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_423_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_423_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_423_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_423_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<double,allocator<double> >& obj = ((map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >*) G__getstructoffset())->operator[](*(double*) G__Doubleref(&libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_423_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         pair<map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::iterator,bool>* pobj;
         pair<map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::iterator,bool> xobj = ((map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >*) G__getstructoffset())->insert(*(map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::value_type*) libp->para[0].ref);
         pobj = new pair<map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::iterator,bool>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_423_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::iterator* pobj;
         map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::iterator xobj = ((map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >*) G__getstructoffset())->insert(*((map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::iterator*) G__int(libp->para[0])), *(map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::value_type*) libp->para[1].ref);
         pobj = new map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_423_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >*) G__getstructoffset())->insert(*((map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::iterator*) G__int(libp->para[0])), *((map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_423_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >*) G__getstructoffset())->insert(*((map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::reverse_iterator*) G__int(libp->para[0])), *((map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::reverse_iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_423_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >*) G__getstructoffset())->erase(*((map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_423_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >*) G__getstructoffset())->erase(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_423_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >*) G__getstructoffset())->erase(*((map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::iterator*) G__int(libp->para[0])), *((map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_423_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >*) G__getstructoffset())->swap(*(map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_423_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_423_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::iterator* pobj;
         map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::iterator xobj = ((map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >*) G__getstructoffset())->find(*(double*) G__Doubleref(&libp->para[0]));
         pobj = new map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_423_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >*) G__getstructoffset())->count(*(double*) G__Doubleref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_423_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::iterator* pobj;
         map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::iterator xobj = ((map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >*) G__getstructoffset())->lower_bound(*(double*) G__Doubleref(&libp->para[0]));
         pobj = new map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_423_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::iterator* pobj;
         map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::iterator xobj = ((map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >*) G__getstructoffset())->upper_bound(*(double*) G__Doubleref(&libp->para[0]));
         pobj = new map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > > G__TmaplEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR;
static int G__Dict_423_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >*) (soff+(sizeof(map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >)*i)))->~G__TmaplEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >*) (soff))->~G__TmaplEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vhtm::Jet */
static int G__Dict_428_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vhtm::Jet* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vhtm::Jet[n];
     } else {
       p = new((void*) gvp) vhtm::Jet[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vhtm::Jet;
     } else {
       p = new((void*) gvp) vhtm::Jet;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vhtmcLcLJet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_428_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) vhtm::Jet::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_428_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) vhtm::Jet::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_428_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) vhtm::Jet::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_428_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      vhtm::Jet::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_428_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vhtm::Jet*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_428_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) vhtm::Jet::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_428_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) vhtm::Jet::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_428_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) vhtm::Jet::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_428_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) vhtm::Jet::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Dict_428_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   vhtm::Jet* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new vhtm::Jet(*(vhtm::Jet*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vhtmcLcLJet));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vhtm::Jet G__TvhtmcLcLJet;
static int G__Dict_428_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vhtm::Jet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vhtm::Jet*) (soff+(sizeof(vhtm::Jet)*i)))->~G__TvhtmcLcLJet();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vhtm::Jet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vhtm::Jet*) (soff))->~G__TvhtmcLcLJet();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_428_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vhtm::Jet* dest = (vhtm::Jet*) G__getstructoffset();
   *dest = *(vhtm::Jet*) libp->para[0].ref;
   const vhtm::Jet& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vhtm::Vertex */
static int G__Dict_429_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vhtm::Vertex* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vhtm::Vertex[n];
     } else {
       p = new((void*) gvp) vhtm::Vertex[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vhtm::Vertex;
     } else {
       p = new((void*) gvp) vhtm::Vertex;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vhtmcLcLVertex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_429_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) vhtm::Vertex::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_429_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) vhtm::Vertex::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_429_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) vhtm::Vertex::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_429_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      vhtm::Vertex::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_429_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vhtm::Vertex*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_429_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) vhtm::Vertex::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_429_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) vhtm::Vertex::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_429_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) vhtm::Vertex::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_429_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) vhtm::Vertex::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Dict_429_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   vhtm::Vertex* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new vhtm::Vertex(*(vhtm::Vertex*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vhtmcLcLVertex));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vhtm::Vertex G__TvhtmcLcLVertex;
static int G__Dict_429_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vhtm::Vertex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vhtm::Vertex*) (soff+(sizeof(vhtm::Vertex)*i)))->~G__TvhtmcLcLVertex();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vhtm::Vertex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vhtm::Vertex*) (soff))->~G__TvhtmcLcLVertex();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_429_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vhtm::Vertex* dest = (vhtm::Vertex*) G__getstructoffset();
   *dest = *(vhtm::Vertex*) libp->para[0].ref;
   const vhtm::Vertex& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vhtm::GenMET */
static int G__Dict_430_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vhtm::GenMET* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vhtm::GenMET[n];
     } else {
       p = new((void*) gvp) vhtm::GenMET[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vhtm::GenMET;
     } else {
       p = new((void*) gvp) vhtm::GenMET;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenMET));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_430_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) vhtm::GenMET::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_430_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) vhtm::GenMET::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_430_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) vhtm::GenMET::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_430_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      vhtm::GenMET::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_430_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vhtm::GenMET*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_430_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) vhtm::GenMET::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_430_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) vhtm::GenMET::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_430_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) vhtm::GenMET::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_430_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) vhtm::GenMET::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Dict_430_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   vhtm::GenMET* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new vhtm::GenMET(*(vhtm::GenMET*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenMET));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vhtm::GenMET G__TvhtmcLcLGenMET;
static int G__Dict_430_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vhtm::GenMET*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vhtm::GenMET*) (soff+(sizeof(vhtm::GenMET)*i)))->~G__TvhtmcLcLGenMET();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vhtm::GenMET*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vhtm::GenMET*) (soff))->~G__TvhtmcLcLGenMET();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_430_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vhtm::GenMET* dest = (vhtm::GenMET*) G__getstructoffset();
   *dest = *(vhtm::GenMET*) libp->para[0].ref;
   const vhtm::GenMET& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vhtm::TriggerObject */
static int G__Dict_431_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vhtm::TriggerObject* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vhtm::TriggerObject[n];
     } else {
       p = new((void*) gvp) vhtm::TriggerObject[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vhtm::TriggerObject;
     } else {
       p = new((void*) gvp) vhtm::TriggerObject;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vhtmcLcLTriggerObject));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_431_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) vhtm::TriggerObject::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_431_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) vhtm::TriggerObject::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_431_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) vhtm::TriggerObject::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_431_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      vhtm::TriggerObject::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_431_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vhtm::TriggerObject*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_431_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) vhtm::TriggerObject::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_431_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) vhtm::TriggerObject::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_431_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) vhtm::TriggerObject::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_431_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) vhtm::TriggerObject::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Dict_431_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   vhtm::TriggerObject* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new vhtm::TriggerObject(*(vhtm::TriggerObject*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vhtmcLcLTriggerObject));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vhtm::TriggerObject G__TvhtmcLcLTriggerObject;
static int G__Dict_431_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vhtm::TriggerObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vhtm::TriggerObject*) (soff+(sizeof(vhtm::TriggerObject)*i)))->~G__TvhtmcLcLTriggerObject();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vhtm::TriggerObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vhtm::TriggerObject*) (soff))->~G__TvhtmcLcLTriggerObject();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_431_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vhtm::TriggerObject* dest = (vhtm::TriggerObject*) G__getstructoffset();
   *dest = *(vhtm::TriggerObject*) libp->para[0].ref;
   const vhtm::TriggerObject& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > > */
static int G__Dict_434_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >[n];
     } else {
       p = new((void*) gvp) map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >;
     } else {
       p = new((void*) gvp) map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_434_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >(*((map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::iterator*) G__int(libp->para[0])), *((map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >(*((map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::iterator*) G__int(libp->para[0])), *((map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_434_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >(*((map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::reverse_iterator*) G__int(libp->para[0])), *((map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::reverse_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >(*((map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::reverse_iterator*) G__int(libp->para[0])), *((map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::reverse_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_434_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >(*(map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >(*(map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_434_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >& obj = ((map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >*) G__getstructoffset())->operator=(*(map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_434_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::iterator* pobj;
         map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::iterator xobj = ((map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >*) G__getstructoffset())->begin();
         pobj = new map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_434_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::iterator* pobj;
         map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::iterator xobj = ((map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >*) G__getstructoffset())->end();
         pobj = new map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_434_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::reverse_iterator* pobj;
         map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::reverse_iterator xobj = ((map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >*) G__getstructoffset())->rbegin();
         pobj = new map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_434_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::reverse_iterator* pobj;
         map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::reverse_iterator xobj = ((map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >*) G__getstructoffset())->rend();
         pobj = new map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_434_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_434_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_434_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_434_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const unsigned int& obj = ((map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >*) G__getstructoffset())->operator[](*(string*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         G__letint(result7, 'h', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_434_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         pair<map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::iterator,bool>* pobj;
         pair<map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::iterator,bool> xobj = ((map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >*) G__getstructoffset())->insert(*(map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::value_type*) libp->para[0].ref);
         pobj = new pair<map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::iterator,bool>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_434_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::iterator* pobj;
         map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::iterator xobj = ((map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >*) G__getstructoffset())->insert(*((map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::iterator*) G__int(libp->para[0])), *(map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::value_type*) libp->para[1].ref);
         pobj = new map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_434_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >*) G__getstructoffset())->insert(*((map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::iterator*) G__int(libp->para[0])), *((map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_434_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >*) G__getstructoffset())->insert(*((map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::reverse_iterator*) G__int(libp->para[0])), *((map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::reverse_iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_434_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >*) G__getstructoffset())->erase(*((map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_434_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >*) G__getstructoffset())->erase(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_434_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >*) G__getstructoffset())->erase(*((map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::iterator*) G__int(libp->para[0])), *((map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_434_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >*) G__getstructoffset())->swap(*(map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_434_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_434_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::iterator* pobj;
         map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::iterator xobj = ((map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >*) G__getstructoffset())->find(*(string*) libp->para[0].ref);
         pobj = new map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_434_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >*) G__getstructoffset())->count(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_434_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::iterator* pobj;
         map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::iterator xobj = ((map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >*) G__getstructoffset())->lower_bound(*(string*) libp->para[0].ref);
         pobj = new map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_434_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::iterator* pobj;
         map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::iterator xobj = ((map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >*) G__getstructoffset())->upper_bound(*(string*) libp->para[0].ref);
         pobj = new map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > > G__TmaplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgR;
static int G__Dict_434_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >*) (soff+(sizeof(map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >)*i)))->~G__TmaplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >*) (soff))->~G__TmaplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* pair<string,unsigned int> */
static int G__Dict_435_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pair<string,unsigned int>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pair<string,unsigned int>[n];
     } else {
       p = new((void*) gvp) pair<string,unsigned int>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new pair<string,unsigned int>;
     } else {
       p = new((void*) gvp) pair<string,unsigned int>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_pairlEstringcOunsignedsPintgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_435_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   pair<string,unsigned int>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new pair<string,unsigned int>(*(string*) libp->para[0].ref, *(unsigned int*) G__UIntref(&libp->para[1]));
   } else {
     p = new((void*) gvp) pair<string,unsigned int>(*(string*) libp->para[0].ref, *(unsigned int*) G__UIntref(&libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_pairlEstringcOunsignedsPintgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Dict_435_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   pair<string,unsigned int>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new pair<string,unsigned int>(*(pair<string,unsigned int>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_pairlEstringcOunsignedsPintgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef pair<string,unsigned int> G__TpairlEstringcOunsignedsPintgR;
static int G__Dict_435_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (pair<string,unsigned int>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((pair<string,unsigned int>*) (soff+(sizeof(pair<string,unsigned int>)*i)))->~G__TpairlEstringcOunsignedsPintgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (pair<string,unsigned int>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((pair<string,unsigned int>*) (soff))->~G__TpairlEstringcOunsignedsPintgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vhtm::Photon */
static int G__Dict_439_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vhtm::Photon* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vhtm::Photon[n];
     } else {
       p = new((void*) gvp) vhtm::Photon[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vhtm::Photon;
     } else {
       p = new((void*) gvp) vhtm::Photon;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vhtmcLcLPhoton));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_439_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) vhtm::Photon::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_439_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) vhtm::Photon::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_439_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) vhtm::Photon::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_439_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      vhtm::Photon::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_439_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vhtm::Photon*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_439_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) vhtm::Photon::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_439_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) vhtm::Photon::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_439_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) vhtm::Photon::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_439_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) vhtm::Photon::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Dict_439_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   vhtm::Photon* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new vhtm::Photon(*(vhtm::Photon*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vhtmcLcLPhoton));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vhtm::Photon G__TvhtmcLcLPhoton;
static int G__Dict_439_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vhtm::Photon*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vhtm::Photon*) (soff+(sizeof(vhtm::Photon)*i)))->~G__TvhtmcLcLPhoton();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vhtm::Photon*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vhtm::Photon*) (soff))->~G__TvhtmcLcLPhoton();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dict_439_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vhtm::Photon* dest = (vhtm::Photon*) G__getstructoffset();
   *dest = *(vhtm::Photon*) libp->para[0].ref;
   const vhtm::Photon& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<vhtm::Event,allocator<vhtm::Event> > */
static int G__Dict_441_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vhtm::Event,allocator<vhtm::Event> >::reference obj = ((vector<vhtm::Event,allocator<vhtm::Event> >*) G__getstructoffset())->at((vector<vhtm::Event,allocator<vhtm::Event> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_441_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::Event,allocator<vhtm::Event> >::const_reference obj = ((const vector<vhtm::Event,allocator<vhtm::Event> >*) G__getstructoffset())->at((vector<vhtm::Event,allocator<vhtm::Event> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_441_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::Event,allocator<vhtm::Event> >::iterator* pobj;
         vector<vhtm::Event,allocator<vhtm::Event> >::iterator xobj = ((vector<vhtm::Event,allocator<vhtm::Event> >*) G__getstructoffset())->begin();
         pobj = new vector<vhtm::Event,allocator<vhtm::Event> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_441_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::Event,allocator<vhtm::Event> >::iterator* pobj;
         vector<vhtm::Event,allocator<vhtm::Event> >::iterator xobj = ((vector<vhtm::Event,allocator<vhtm::Event> >*) G__getstructoffset())->end();
         pobj = new vector<vhtm::Event,allocator<vhtm::Event> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_441_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::Event,allocator<vhtm::Event> >::reverse_iterator* pobj;
         vector<vhtm::Event,allocator<vhtm::Event> >::reverse_iterator xobj = ((vector<vhtm::Event,allocator<vhtm::Event> >*) G__getstructoffset())->rbegin();
         pobj = new vector<vhtm::Event,allocator<vhtm::Event> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_441_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::Event,allocator<vhtm::Event> >::reverse_iterator* pobj;
         vector<vhtm::Event,allocator<vhtm::Event> >::reverse_iterator xobj = ((vector<vhtm::Event,allocator<vhtm::Event> >*) G__getstructoffset())->rend();
         pobj = new vector<vhtm::Event,allocator<vhtm::Event> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_441_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vhtm::Event,allocator<vhtm::Event> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_441_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vhtm::Event,allocator<vhtm::Event> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_441_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Event,allocator<vhtm::Event> >*) G__getstructoffset())->resize((vector<vhtm::Event,allocator<vhtm::Event> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_441_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Event,allocator<vhtm::Event> >*) G__getstructoffset())->resize((vector<vhtm::Event,allocator<vhtm::Event> >::size_type) G__int(libp->para[0]), *((vhtm::Event*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_441_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vhtm::Event,allocator<vhtm::Event> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_441_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<vhtm::Event,allocator<vhtm::Event> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_441_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vhtm::Event,allocator<vhtm::Event> >::reference obj = ((vector<vhtm::Event,allocator<vhtm::Event> >*) G__getstructoffset())->operator[]((vector<vhtm::Event,allocator<vhtm::Event> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_441_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::Event,allocator<vhtm::Event> >::const_reference obj = ((const vector<vhtm::Event,allocator<vhtm::Event> >*) G__getstructoffset())->operator[]((vector<vhtm::Event,allocator<vhtm::Event> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_441_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vhtm::Event,allocator<vhtm::Event> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vhtm::Event,allocator<vhtm::Event> >[n];
     } else {
       p = new((void*) gvp) vector<vhtm::Event,allocator<vhtm::Event> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vhtm::Event,allocator<vhtm::Event> >;
     } else {
       p = new((void*) gvp) vector<vhtm::Event,allocator<vhtm::Event> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLEventcOallocatorlEvhtmcLcLEventgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_441_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vhtm::Event,allocator<vhtm::Event> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vhtm::Event,allocator<vhtm::Event> >((vector<vhtm::Event,allocator<vhtm::Event> >::size_type) G__int(libp->para[0]), *(vhtm::Event*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<vhtm::Event,allocator<vhtm::Event> >((vector<vhtm::Event,allocator<vhtm::Event> >::size_type) G__int(libp->para[0]), *(vhtm::Event*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vhtm::Event,allocator<vhtm::Event> >((vector<vhtm::Event,allocator<vhtm::Event> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<vhtm::Event,allocator<vhtm::Event> >((vector<vhtm::Event,allocator<vhtm::Event> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLEventcOallocatorlEvhtmcLcLEventgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_441_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vhtm::Event,allocator<vhtm::Event> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vhtm::Event,allocator<vhtm::Event> >(*(vector<vhtm::Event,allocator<vhtm::Event> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<vhtm::Event,allocator<vhtm::Event> >(*(vector<vhtm::Event,allocator<vhtm::Event> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLEventcOallocatorlEvhtmcLcLEventgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_441_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vhtm::Event,allocator<vhtm::Event> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vhtm::Event,allocator<vhtm::Event> >(*((vector<vhtm::Event,allocator<vhtm::Event> >::const_iterator*) G__int(libp->para[0])), *((vector<vhtm::Event,allocator<vhtm::Event> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<vhtm::Event,allocator<vhtm::Event> >(*((vector<vhtm::Event,allocator<vhtm::Event> >::const_iterator*) G__int(libp->para[0])), *((vector<vhtm::Event,allocator<vhtm::Event> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLEventcOallocatorlEvhtmcLcLEventgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_441_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vhtm::Event,allocator<vhtm::Event> >& obj = ((vector<vhtm::Event,allocator<vhtm::Event> >*) G__getstructoffset())->operator=(*(vector<vhtm::Event,allocator<vhtm::Event> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_441_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Event,allocator<vhtm::Event> >*) G__getstructoffset())->reserve((vector<vhtm::Event,allocator<vhtm::Event> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_441_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vhtm::Event& obj = ((vector<vhtm::Event,allocator<vhtm::Event> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_441_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vhtm::Event& obj = ((vector<vhtm::Event,allocator<vhtm::Event> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_441_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Event,allocator<vhtm::Event> >*) G__getstructoffset())->push_back(*(vhtm::Event*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_441_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Event,allocator<vhtm::Event> >*) G__getstructoffset())->swap(*(vector<vhtm::Event,allocator<vhtm::Event> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_441_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::Event,allocator<vhtm::Event> >::iterator* pobj;
         vector<vhtm::Event,allocator<vhtm::Event> >::iterator xobj = ((vector<vhtm::Event,allocator<vhtm::Event> >*) G__getstructoffset())->insert(*((vector<vhtm::Event,allocator<vhtm::Event> >::iterator*) G__int(libp->para[0])), *(vhtm::Event*) libp->para[1].ref);
         pobj = new vector<vhtm::Event,allocator<vhtm::Event> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_441_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Event,allocator<vhtm::Event> >*) G__getstructoffset())->insert(*((vector<vhtm::Event,allocator<vhtm::Event> >::iterator*) G__int(libp->para[0])), *((vector<vhtm::Event,allocator<vhtm::Event> >::const_iterator*) G__int(libp->para[1]))
, *((vector<vhtm::Event,allocator<vhtm::Event> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_441_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Event,allocator<vhtm::Event> >*) G__getstructoffset())->insert(*((vector<vhtm::Event,allocator<vhtm::Event> >::iterator*) G__int(libp->para[0])), (vector<vhtm::Event,allocator<vhtm::Event> >::size_type) G__int(libp->para[1])
, *(vhtm::Event*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_441_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Event,allocator<vhtm::Event> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_441_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Event,allocator<vhtm::Event> >*) G__getstructoffset())->erase(*((vector<vhtm::Event,allocator<vhtm::Event> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_441_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Event,allocator<vhtm::Event> >*) G__getstructoffset())->erase(*((vector<vhtm::Event,allocator<vhtm::Event> >::iterator*) G__int(libp->para[0])), *((vector<vhtm::Event,allocator<vhtm::Event> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_441_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Event,allocator<vhtm::Event> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<vhtm::Event,allocator<vhtm::Event> > G__TvectorlEvhtmcLcLEventcOallocatorlEvhtmcLcLEventgRsPgR;
static int G__Dict_441_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<vhtm::Event,allocator<vhtm::Event> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<vhtm::Event,allocator<vhtm::Event> >*) (soff+(sizeof(vector<vhtm::Event,allocator<vhtm::Event> >)*i)))->~G__TvectorlEvhtmcLcLEventcOallocatorlEvhtmcLcLEventgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<vhtm::Event,allocator<vhtm::Event> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<vhtm::Event,allocator<vhtm::Event> >*) (soff))->~G__TvectorlEvhtmcLcLEventcOallocatorlEvhtmcLcLEventgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<vhtm::GenEvent,allocator<vhtm::GenEvent> > */
static int G__Dict_445_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::reference obj = ((vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >*) G__getstructoffset())->at((vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_445_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::const_reference obj = ((const vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >*) G__getstructoffset())->at((vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_445_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::iterator* pobj;
         vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::iterator xobj = ((vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >*) G__getstructoffset())->begin();
         pobj = new vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_445_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::iterator* pobj;
         vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::iterator xobj = ((vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >*) G__getstructoffset())->end();
         pobj = new vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_445_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::reverse_iterator* pobj;
         vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::reverse_iterator xobj = ((vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >*) G__getstructoffset())->rbegin();
         pobj = new vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_445_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::reverse_iterator* pobj;
         vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::reverse_iterator xobj = ((vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >*) G__getstructoffset())->rend();
         pobj = new vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_445_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_445_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_445_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >*) G__getstructoffset())->resize((vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_445_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >*) G__getstructoffset())->resize((vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::size_type) G__int(libp->para[0]), *((vhtm::GenEvent*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_445_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_445_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_445_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::reference obj = ((vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >*) G__getstructoffset())->operator[]((vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_445_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::const_reference obj = ((const vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >*) G__getstructoffset())->operator[]((vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_445_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >[n];
     } else {
       p = new((void*) gvp) vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >;
     } else {
       p = new((void*) gvp) vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenEventcOallocatorlEvhtmcLcLGenEventgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_445_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >((vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::size_type) G__int(libp->para[0]), *(vhtm::GenEvent*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >((vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::size_type) G__int(libp->para[0]), *(vhtm::GenEvent*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >((vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >((vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenEventcOallocatorlEvhtmcLcLGenEventgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_445_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >(*(vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >(*(vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenEventcOallocatorlEvhtmcLcLGenEventgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_445_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >(*((vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::const_iterator*) G__int(libp->para[0])), *((vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >(*((vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::const_iterator*) G__int(libp->para[0])), *((vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenEventcOallocatorlEvhtmcLcLGenEventgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_445_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >& obj = ((vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >*) G__getstructoffset())->operator=(*(vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_445_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >*) G__getstructoffset())->reserve((vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_445_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vhtm::GenEvent& obj = ((vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_445_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vhtm::GenEvent& obj = ((vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_445_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >*) G__getstructoffset())->push_back(*(vhtm::GenEvent*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_445_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >*) G__getstructoffset())->swap(*(vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_445_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::iterator* pobj;
         vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::iterator xobj = ((vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >*) G__getstructoffset())->insert(*((vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::iterator*) G__int(libp->para[0])), *(vhtm::GenEvent*) libp->para[1].ref);
         pobj = new vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_445_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >*) G__getstructoffset())->insert(*((vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::iterator*) G__int(libp->para[0])), *((vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::const_iterator*) G__int(libp->para[1]))
, *((vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_445_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >*) G__getstructoffset())->insert(*((vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::iterator*) G__int(libp->para[0])), (vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::size_type) G__int(libp->para[1])
, *(vhtm::GenEvent*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_445_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_445_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >*) G__getstructoffset())->erase(*((vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_445_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >*) G__getstructoffset())->erase(*((vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::iterator*) G__int(libp->para[0])), *((vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_445_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<vhtm::GenEvent,allocator<vhtm::GenEvent> > G__TvectorlEvhtmcLcLGenEventcOallocatorlEvhtmcLcLGenEventgRsPgR;
static int G__Dict_445_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >*) (soff+(sizeof(vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >)*i)))->~G__TvectorlEvhtmcLcLGenEventcOallocatorlEvhtmcLcLGenEventgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >*) (soff))->~G__TvectorlEvhtmcLcLGenEventcOallocatorlEvhtmcLcLGenEventgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<vhtm::Electron,allocator<vhtm::Electron> > */
static int G__Dict_449_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vhtm::Electron,allocator<vhtm::Electron> >::reference obj = ((vector<vhtm::Electron,allocator<vhtm::Electron> >*) G__getstructoffset())->at((vector<vhtm::Electron,allocator<vhtm::Electron> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_449_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::Electron,allocator<vhtm::Electron> >::const_reference obj = ((const vector<vhtm::Electron,allocator<vhtm::Electron> >*) G__getstructoffset())->at((vector<vhtm::Electron,allocator<vhtm::Electron> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_449_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::Electron,allocator<vhtm::Electron> >::iterator* pobj;
         vector<vhtm::Electron,allocator<vhtm::Electron> >::iterator xobj = ((vector<vhtm::Electron,allocator<vhtm::Electron> >*) G__getstructoffset())->begin();
         pobj = new vector<vhtm::Electron,allocator<vhtm::Electron> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_449_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::Electron,allocator<vhtm::Electron> >::iterator* pobj;
         vector<vhtm::Electron,allocator<vhtm::Electron> >::iterator xobj = ((vector<vhtm::Electron,allocator<vhtm::Electron> >*) G__getstructoffset())->end();
         pobj = new vector<vhtm::Electron,allocator<vhtm::Electron> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_449_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::Electron,allocator<vhtm::Electron> >::reverse_iterator* pobj;
         vector<vhtm::Electron,allocator<vhtm::Electron> >::reverse_iterator xobj = ((vector<vhtm::Electron,allocator<vhtm::Electron> >*) G__getstructoffset())->rbegin();
         pobj = new vector<vhtm::Electron,allocator<vhtm::Electron> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_449_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::Electron,allocator<vhtm::Electron> >::reverse_iterator* pobj;
         vector<vhtm::Electron,allocator<vhtm::Electron> >::reverse_iterator xobj = ((vector<vhtm::Electron,allocator<vhtm::Electron> >*) G__getstructoffset())->rend();
         pobj = new vector<vhtm::Electron,allocator<vhtm::Electron> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_449_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vhtm::Electron,allocator<vhtm::Electron> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_449_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vhtm::Electron,allocator<vhtm::Electron> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_449_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Electron,allocator<vhtm::Electron> >*) G__getstructoffset())->resize((vector<vhtm::Electron,allocator<vhtm::Electron> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_449_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Electron,allocator<vhtm::Electron> >*) G__getstructoffset())->resize((vector<vhtm::Electron,allocator<vhtm::Electron> >::size_type) G__int(libp->para[0]), *((vhtm::Electron*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_449_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vhtm::Electron,allocator<vhtm::Electron> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_449_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<vhtm::Electron,allocator<vhtm::Electron> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_449_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vhtm::Electron,allocator<vhtm::Electron> >::reference obj = ((vector<vhtm::Electron,allocator<vhtm::Electron> >*) G__getstructoffset())->operator[]((vector<vhtm::Electron,allocator<vhtm::Electron> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_449_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::Electron,allocator<vhtm::Electron> >::const_reference obj = ((const vector<vhtm::Electron,allocator<vhtm::Electron> >*) G__getstructoffset())->operator[]((vector<vhtm::Electron,allocator<vhtm::Electron> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_449_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vhtm::Electron,allocator<vhtm::Electron> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vhtm::Electron,allocator<vhtm::Electron> >[n];
     } else {
       p = new((void*) gvp) vector<vhtm::Electron,allocator<vhtm::Electron> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vhtm::Electron,allocator<vhtm::Electron> >;
     } else {
       p = new((void*) gvp) vector<vhtm::Electron,allocator<vhtm::Electron> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLElectroncOallocatorlEvhtmcLcLElectrongRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_449_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vhtm::Electron,allocator<vhtm::Electron> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vhtm::Electron,allocator<vhtm::Electron> >((vector<vhtm::Electron,allocator<vhtm::Electron> >::size_type) G__int(libp->para[0]), *(vhtm::Electron*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<vhtm::Electron,allocator<vhtm::Electron> >((vector<vhtm::Electron,allocator<vhtm::Electron> >::size_type) G__int(libp->para[0]), *(vhtm::Electron*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vhtm::Electron,allocator<vhtm::Electron> >((vector<vhtm::Electron,allocator<vhtm::Electron> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<vhtm::Electron,allocator<vhtm::Electron> >((vector<vhtm::Electron,allocator<vhtm::Electron> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLElectroncOallocatorlEvhtmcLcLElectrongRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_449_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vhtm::Electron,allocator<vhtm::Electron> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vhtm::Electron,allocator<vhtm::Electron> >(*(vector<vhtm::Electron,allocator<vhtm::Electron> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<vhtm::Electron,allocator<vhtm::Electron> >(*(vector<vhtm::Electron,allocator<vhtm::Electron> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLElectroncOallocatorlEvhtmcLcLElectrongRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_449_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vhtm::Electron,allocator<vhtm::Electron> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vhtm::Electron,allocator<vhtm::Electron> >(*((vector<vhtm::Electron,allocator<vhtm::Electron> >::const_iterator*) G__int(libp->para[0])), *((vector<vhtm::Electron,allocator<vhtm::Electron> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<vhtm::Electron,allocator<vhtm::Electron> >(*((vector<vhtm::Electron,allocator<vhtm::Electron> >::const_iterator*) G__int(libp->para[0])), *((vector<vhtm::Electron,allocator<vhtm::Electron> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLElectroncOallocatorlEvhtmcLcLElectrongRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_449_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vhtm::Electron,allocator<vhtm::Electron> >& obj = ((vector<vhtm::Electron,allocator<vhtm::Electron> >*) G__getstructoffset())->operator=(*(vector<vhtm::Electron,allocator<vhtm::Electron> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_449_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Electron,allocator<vhtm::Electron> >*) G__getstructoffset())->reserve((vector<vhtm::Electron,allocator<vhtm::Electron> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_449_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vhtm::Electron& obj = ((vector<vhtm::Electron,allocator<vhtm::Electron> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_449_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vhtm::Electron& obj = ((vector<vhtm::Electron,allocator<vhtm::Electron> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_449_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Electron,allocator<vhtm::Electron> >*) G__getstructoffset())->push_back(*(vhtm::Electron*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_449_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Electron,allocator<vhtm::Electron> >*) G__getstructoffset())->swap(*(vector<vhtm::Electron,allocator<vhtm::Electron> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_449_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::Electron,allocator<vhtm::Electron> >::iterator* pobj;
         vector<vhtm::Electron,allocator<vhtm::Electron> >::iterator xobj = ((vector<vhtm::Electron,allocator<vhtm::Electron> >*) G__getstructoffset())->insert(*((vector<vhtm::Electron,allocator<vhtm::Electron> >::iterator*) G__int(libp->para[0])), *(vhtm::Electron*) libp->para[1].ref);
         pobj = new vector<vhtm::Electron,allocator<vhtm::Electron> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_449_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Electron,allocator<vhtm::Electron> >*) G__getstructoffset())->insert(*((vector<vhtm::Electron,allocator<vhtm::Electron> >::iterator*) G__int(libp->para[0])), *((vector<vhtm::Electron,allocator<vhtm::Electron> >::const_iterator*) G__int(libp->para[1]))
, *((vector<vhtm::Electron,allocator<vhtm::Electron> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_449_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Electron,allocator<vhtm::Electron> >*) G__getstructoffset())->insert(*((vector<vhtm::Electron,allocator<vhtm::Electron> >::iterator*) G__int(libp->para[0])), (vector<vhtm::Electron,allocator<vhtm::Electron> >::size_type) G__int(libp->para[1])
, *(vhtm::Electron*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_449_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Electron,allocator<vhtm::Electron> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_449_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Electron,allocator<vhtm::Electron> >*) G__getstructoffset())->erase(*((vector<vhtm::Electron,allocator<vhtm::Electron> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_449_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Electron,allocator<vhtm::Electron> >*) G__getstructoffset())->erase(*((vector<vhtm::Electron,allocator<vhtm::Electron> >::iterator*) G__int(libp->para[0])), *((vector<vhtm::Electron,allocator<vhtm::Electron> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_449_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Electron,allocator<vhtm::Electron> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<vhtm::Electron,allocator<vhtm::Electron> > G__TvectorlEvhtmcLcLElectroncOallocatorlEvhtmcLcLElectrongRsPgR;
static int G__Dict_449_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<vhtm::Electron,allocator<vhtm::Electron> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<vhtm::Electron,allocator<vhtm::Electron> >*) (soff+(sizeof(vector<vhtm::Electron,allocator<vhtm::Electron> >)*i)))->~G__TvectorlEvhtmcLcLElectroncOallocatorlEvhtmcLcLElectrongRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<vhtm::Electron,allocator<vhtm::Electron> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<vhtm::Electron,allocator<vhtm::Electron> >*) (soff))->~G__TvectorlEvhtmcLcLElectroncOallocatorlEvhtmcLcLElectrongRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<vhtm::GenParticle,allocator<vhtm::GenParticle> > */
static int G__Dict_453_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::reference obj = ((vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >*) G__getstructoffset())->at((vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_453_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::const_reference obj = ((const vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >*) G__getstructoffset())->at((vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_453_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::iterator* pobj;
         vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::iterator xobj = ((vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >*) G__getstructoffset())->begin();
         pobj = new vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_453_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::iterator* pobj;
         vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::iterator xobj = ((vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >*) G__getstructoffset())->end();
         pobj = new vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_453_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::reverse_iterator* pobj;
         vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::reverse_iterator xobj = ((vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >*) G__getstructoffset())->rbegin();
         pobj = new vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_453_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::reverse_iterator* pobj;
         vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::reverse_iterator xobj = ((vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >*) G__getstructoffset())->rend();
         pobj = new vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_453_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_453_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_453_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >*) G__getstructoffset())->resize((vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_453_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >*) G__getstructoffset())->resize((vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::size_type) G__int(libp->para[0]), *((vhtm::GenParticle*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_453_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_453_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_453_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::reference obj = ((vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >*) G__getstructoffset())->operator[]((vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_453_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::const_reference obj = ((const vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >*) G__getstructoffset())->operator[]((vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_453_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >[n];
     } else {
       p = new((void*) gvp) vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >;
     } else {
       p = new((void*) gvp) vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenParticlecOallocatorlEvhtmcLcLGenParticlegRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_453_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >((vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::size_type) G__int(libp->para[0]), *(vhtm::GenParticle*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >((vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::size_type) G__int(libp->para[0]), *(vhtm::GenParticle*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >((vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >((vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenParticlecOallocatorlEvhtmcLcLGenParticlegRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_453_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >(*(vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >(*(vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenParticlecOallocatorlEvhtmcLcLGenParticlegRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_453_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >(*((vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::const_iterator*) G__int(libp->para[0])), *((vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >(*((vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::const_iterator*) G__int(libp->para[0])), *((vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenParticlecOallocatorlEvhtmcLcLGenParticlegRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_453_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >& obj = ((vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >*) G__getstructoffset())->operator=(*(vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_453_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >*) G__getstructoffset())->reserve((vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_453_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vhtm::GenParticle& obj = ((vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_453_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vhtm::GenParticle& obj = ((vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_453_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >*) G__getstructoffset())->push_back(*(vhtm::GenParticle*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_453_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >*) G__getstructoffset())->swap(*(vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_453_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::iterator* pobj;
         vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::iterator xobj = ((vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >*) G__getstructoffset())->insert(*((vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::iterator*) G__int(libp->para[0])), *(vhtm::GenParticle*) libp->para[1].ref);
         pobj = new vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_453_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >*) G__getstructoffset())->insert(*((vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::iterator*) G__int(libp->para[0])), *((vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::const_iterator*) G__int(libp->para[1]))
, *((vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_453_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >*) G__getstructoffset())->insert(*((vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::iterator*) G__int(libp->para[0])), (vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::size_type) G__int(libp->para[1])
, *(vhtm::GenParticle*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_453_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_453_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >*) G__getstructoffset())->erase(*((vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_453_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >*) G__getstructoffset())->erase(*((vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::iterator*) G__int(libp->para[0])), *((vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_453_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<vhtm::GenParticle,allocator<vhtm::GenParticle> > G__TvectorlEvhtmcLcLGenParticlecOallocatorlEvhtmcLcLGenParticlegRsPgR;
static int G__Dict_453_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >*) (soff+(sizeof(vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >)*i)))->~G__TvectorlEvhtmcLcLGenParticlecOallocatorlEvhtmcLcLGenParticlegRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >*) (soff))->~G__TvectorlEvhtmcLcLGenParticlecOallocatorlEvhtmcLcLGenParticlegRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<vhtm::GenJet,allocator<vhtm::GenJet> > */
static int G__Dict_457_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vhtm::GenJet,allocator<vhtm::GenJet> >::reference obj = ((vector<vhtm::GenJet,allocator<vhtm::GenJet> >*) G__getstructoffset())->at((vector<vhtm::GenJet,allocator<vhtm::GenJet> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_457_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::GenJet,allocator<vhtm::GenJet> >::const_reference obj = ((const vector<vhtm::GenJet,allocator<vhtm::GenJet> >*) G__getstructoffset())->at((vector<vhtm::GenJet,allocator<vhtm::GenJet> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_457_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::GenJet,allocator<vhtm::GenJet> >::iterator* pobj;
         vector<vhtm::GenJet,allocator<vhtm::GenJet> >::iterator xobj = ((vector<vhtm::GenJet,allocator<vhtm::GenJet> >*) G__getstructoffset())->begin();
         pobj = new vector<vhtm::GenJet,allocator<vhtm::GenJet> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_457_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::GenJet,allocator<vhtm::GenJet> >::iterator* pobj;
         vector<vhtm::GenJet,allocator<vhtm::GenJet> >::iterator xobj = ((vector<vhtm::GenJet,allocator<vhtm::GenJet> >*) G__getstructoffset())->end();
         pobj = new vector<vhtm::GenJet,allocator<vhtm::GenJet> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_457_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::GenJet,allocator<vhtm::GenJet> >::reverse_iterator* pobj;
         vector<vhtm::GenJet,allocator<vhtm::GenJet> >::reverse_iterator xobj = ((vector<vhtm::GenJet,allocator<vhtm::GenJet> >*) G__getstructoffset())->rbegin();
         pobj = new vector<vhtm::GenJet,allocator<vhtm::GenJet> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_457_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::GenJet,allocator<vhtm::GenJet> >::reverse_iterator* pobj;
         vector<vhtm::GenJet,allocator<vhtm::GenJet> >::reverse_iterator xobj = ((vector<vhtm::GenJet,allocator<vhtm::GenJet> >*) G__getstructoffset())->rend();
         pobj = new vector<vhtm::GenJet,allocator<vhtm::GenJet> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_457_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vhtm::GenJet,allocator<vhtm::GenJet> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_457_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vhtm::GenJet,allocator<vhtm::GenJet> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_457_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::GenJet,allocator<vhtm::GenJet> >*) G__getstructoffset())->resize((vector<vhtm::GenJet,allocator<vhtm::GenJet> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_457_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::GenJet,allocator<vhtm::GenJet> >*) G__getstructoffset())->resize((vector<vhtm::GenJet,allocator<vhtm::GenJet> >::size_type) G__int(libp->para[0]), *((vhtm::GenJet*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_457_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vhtm::GenJet,allocator<vhtm::GenJet> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_457_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<vhtm::GenJet,allocator<vhtm::GenJet> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_457_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vhtm::GenJet,allocator<vhtm::GenJet> >::reference obj = ((vector<vhtm::GenJet,allocator<vhtm::GenJet> >*) G__getstructoffset())->operator[]((vector<vhtm::GenJet,allocator<vhtm::GenJet> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_457_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::GenJet,allocator<vhtm::GenJet> >::const_reference obj = ((const vector<vhtm::GenJet,allocator<vhtm::GenJet> >*) G__getstructoffset())->operator[]((vector<vhtm::GenJet,allocator<vhtm::GenJet> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_457_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vhtm::GenJet,allocator<vhtm::GenJet> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vhtm::GenJet,allocator<vhtm::GenJet> >[n];
     } else {
       p = new((void*) gvp) vector<vhtm::GenJet,allocator<vhtm::GenJet> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vhtm::GenJet,allocator<vhtm::GenJet> >;
     } else {
       p = new((void*) gvp) vector<vhtm::GenJet,allocator<vhtm::GenJet> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenJetcOallocatorlEvhtmcLcLGenJetgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_457_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vhtm::GenJet,allocator<vhtm::GenJet> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vhtm::GenJet,allocator<vhtm::GenJet> >((vector<vhtm::GenJet,allocator<vhtm::GenJet> >::size_type) G__int(libp->para[0]), *(vhtm::GenJet*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<vhtm::GenJet,allocator<vhtm::GenJet> >((vector<vhtm::GenJet,allocator<vhtm::GenJet> >::size_type) G__int(libp->para[0]), *(vhtm::GenJet*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vhtm::GenJet,allocator<vhtm::GenJet> >((vector<vhtm::GenJet,allocator<vhtm::GenJet> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<vhtm::GenJet,allocator<vhtm::GenJet> >((vector<vhtm::GenJet,allocator<vhtm::GenJet> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenJetcOallocatorlEvhtmcLcLGenJetgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_457_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vhtm::GenJet,allocator<vhtm::GenJet> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vhtm::GenJet,allocator<vhtm::GenJet> >(*(vector<vhtm::GenJet,allocator<vhtm::GenJet> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<vhtm::GenJet,allocator<vhtm::GenJet> >(*(vector<vhtm::GenJet,allocator<vhtm::GenJet> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenJetcOallocatorlEvhtmcLcLGenJetgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_457_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vhtm::GenJet,allocator<vhtm::GenJet> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vhtm::GenJet,allocator<vhtm::GenJet> >(*((vector<vhtm::GenJet,allocator<vhtm::GenJet> >::const_iterator*) G__int(libp->para[0])), *((vector<vhtm::GenJet,allocator<vhtm::GenJet> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<vhtm::GenJet,allocator<vhtm::GenJet> >(*((vector<vhtm::GenJet,allocator<vhtm::GenJet> >::const_iterator*) G__int(libp->para[0])), *((vector<vhtm::GenJet,allocator<vhtm::GenJet> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenJetcOallocatorlEvhtmcLcLGenJetgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_457_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vhtm::GenJet,allocator<vhtm::GenJet> >& obj = ((vector<vhtm::GenJet,allocator<vhtm::GenJet> >*) G__getstructoffset())->operator=(*(vector<vhtm::GenJet,allocator<vhtm::GenJet> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_457_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::GenJet,allocator<vhtm::GenJet> >*) G__getstructoffset())->reserve((vector<vhtm::GenJet,allocator<vhtm::GenJet> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_457_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vhtm::GenJet& obj = ((vector<vhtm::GenJet,allocator<vhtm::GenJet> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_457_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vhtm::GenJet& obj = ((vector<vhtm::GenJet,allocator<vhtm::GenJet> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_457_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::GenJet,allocator<vhtm::GenJet> >*) G__getstructoffset())->push_back(*(vhtm::GenJet*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_457_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::GenJet,allocator<vhtm::GenJet> >*) G__getstructoffset())->swap(*(vector<vhtm::GenJet,allocator<vhtm::GenJet> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_457_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::GenJet,allocator<vhtm::GenJet> >::iterator* pobj;
         vector<vhtm::GenJet,allocator<vhtm::GenJet> >::iterator xobj = ((vector<vhtm::GenJet,allocator<vhtm::GenJet> >*) G__getstructoffset())->insert(*((vector<vhtm::GenJet,allocator<vhtm::GenJet> >::iterator*) G__int(libp->para[0])), *(vhtm::GenJet*) libp->para[1].ref);
         pobj = new vector<vhtm::GenJet,allocator<vhtm::GenJet> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_457_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::GenJet,allocator<vhtm::GenJet> >*) G__getstructoffset())->insert(*((vector<vhtm::GenJet,allocator<vhtm::GenJet> >::iterator*) G__int(libp->para[0])), *((vector<vhtm::GenJet,allocator<vhtm::GenJet> >::const_iterator*) G__int(libp->para[1]))
, *((vector<vhtm::GenJet,allocator<vhtm::GenJet> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_457_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::GenJet,allocator<vhtm::GenJet> >*) G__getstructoffset())->insert(*((vector<vhtm::GenJet,allocator<vhtm::GenJet> >::iterator*) G__int(libp->para[0])), (vector<vhtm::GenJet,allocator<vhtm::GenJet> >::size_type) G__int(libp->para[1])
, *(vhtm::GenJet*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_457_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::GenJet,allocator<vhtm::GenJet> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_457_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::GenJet,allocator<vhtm::GenJet> >*) G__getstructoffset())->erase(*((vector<vhtm::GenJet,allocator<vhtm::GenJet> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_457_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::GenJet,allocator<vhtm::GenJet> >*) G__getstructoffset())->erase(*((vector<vhtm::GenJet,allocator<vhtm::GenJet> >::iterator*) G__int(libp->para[0])), *((vector<vhtm::GenJet,allocator<vhtm::GenJet> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_457_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::GenJet,allocator<vhtm::GenJet> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<vhtm::GenJet,allocator<vhtm::GenJet> > G__TvectorlEvhtmcLcLGenJetcOallocatorlEvhtmcLcLGenJetgRsPgR;
static int G__Dict_457_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<vhtm::GenJet,allocator<vhtm::GenJet> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<vhtm::GenJet,allocator<vhtm::GenJet> >*) (soff+(sizeof(vector<vhtm::GenJet,allocator<vhtm::GenJet> >)*i)))->~G__TvectorlEvhtmcLcLGenJetcOallocatorlEvhtmcLcLGenJetgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<vhtm::GenJet,allocator<vhtm::GenJet> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<vhtm::GenJet,allocator<vhtm::GenJet> >*) (soff))->~G__TvectorlEvhtmcLcLGenJetcOallocatorlEvhtmcLcLGenJetgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<vhtm::GenMET,allocator<vhtm::GenMET> > */
static int G__Dict_461_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vhtm::GenMET,allocator<vhtm::GenMET> >::reference obj = ((vector<vhtm::GenMET,allocator<vhtm::GenMET> >*) G__getstructoffset())->at((vector<vhtm::GenMET,allocator<vhtm::GenMET> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_461_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::GenMET,allocator<vhtm::GenMET> >::const_reference obj = ((const vector<vhtm::GenMET,allocator<vhtm::GenMET> >*) G__getstructoffset())->at((vector<vhtm::GenMET,allocator<vhtm::GenMET> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_461_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::GenMET,allocator<vhtm::GenMET> >::iterator* pobj;
         vector<vhtm::GenMET,allocator<vhtm::GenMET> >::iterator xobj = ((vector<vhtm::GenMET,allocator<vhtm::GenMET> >*) G__getstructoffset())->begin();
         pobj = new vector<vhtm::GenMET,allocator<vhtm::GenMET> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_461_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::GenMET,allocator<vhtm::GenMET> >::iterator* pobj;
         vector<vhtm::GenMET,allocator<vhtm::GenMET> >::iterator xobj = ((vector<vhtm::GenMET,allocator<vhtm::GenMET> >*) G__getstructoffset())->end();
         pobj = new vector<vhtm::GenMET,allocator<vhtm::GenMET> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_461_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::GenMET,allocator<vhtm::GenMET> >::reverse_iterator* pobj;
         vector<vhtm::GenMET,allocator<vhtm::GenMET> >::reverse_iterator xobj = ((vector<vhtm::GenMET,allocator<vhtm::GenMET> >*) G__getstructoffset())->rbegin();
         pobj = new vector<vhtm::GenMET,allocator<vhtm::GenMET> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_461_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::GenMET,allocator<vhtm::GenMET> >::reverse_iterator* pobj;
         vector<vhtm::GenMET,allocator<vhtm::GenMET> >::reverse_iterator xobj = ((vector<vhtm::GenMET,allocator<vhtm::GenMET> >*) G__getstructoffset())->rend();
         pobj = new vector<vhtm::GenMET,allocator<vhtm::GenMET> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_461_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vhtm::GenMET,allocator<vhtm::GenMET> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_461_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vhtm::GenMET,allocator<vhtm::GenMET> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_461_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::GenMET,allocator<vhtm::GenMET> >*) G__getstructoffset())->resize((vector<vhtm::GenMET,allocator<vhtm::GenMET> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_461_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::GenMET,allocator<vhtm::GenMET> >*) G__getstructoffset())->resize((vector<vhtm::GenMET,allocator<vhtm::GenMET> >::size_type) G__int(libp->para[0]), *((vhtm::GenMET*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_461_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vhtm::GenMET,allocator<vhtm::GenMET> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_461_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<vhtm::GenMET,allocator<vhtm::GenMET> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_461_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vhtm::GenMET,allocator<vhtm::GenMET> >::reference obj = ((vector<vhtm::GenMET,allocator<vhtm::GenMET> >*) G__getstructoffset())->operator[]((vector<vhtm::GenMET,allocator<vhtm::GenMET> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_461_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::GenMET,allocator<vhtm::GenMET> >::const_reference obj = ((const vector<vhtm::GenMET,allocator<vhtm::GenMET> >*) G__getstructoffset())->operator[]((vector<vhtm::GenMET,allocator<vhtm::GenMET> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_461_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vhtm::GenMET,allocator<vhtm::GenMET> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vhtm::GenMET,allocator<vhtm::GenMET> >[n];
     } else {
       p = new((void*) gvp) vector<vhtm::GenMET,allocator<vhtm::GenMET> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vhtm::GenMET,allocator<vhtm::GenMET> >;
     } else {
       p = new((void*) gvp) vector<vhtm::GenMET,allocator<vhtm::GenMET> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenMETcOallocatorlEvhtmcLcLGenMETgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_461_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vhtm::GenMET,allocator<vhtm::GenMET> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vhtm::GenMET,allocator<vhtm::GenMET> >((vector<vhtm::GenMET,allocator<vhtm::GenMET> >::size_type) G__int(libp->para[0]), *(vhtm::GenMET*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<vhtm::GenMET,allocator<vhtm::GenMET> >((vector<vhtm::GenMET,allocator<vhtm::GenMET> >::size_type) G__int(libp->para[0]), *(vhtm::GenMET*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vhtm::GenMET,allocator<vhtm::GenMET> >((vector<vhtm::GenMET,allocator<vhtm::GenMET> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<vhtm::GenMET,allocator<vhtm::GenMET> >((vector<vhtm::GenMET,allocator<vhtm::GenMET> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenMETcOallocatorlEvhtmcLcLGenMETgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_461_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vhtm::GenMET,allocator<vhtm::GenMET> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vhtm::GenMET,allocator<vhtm::GenMET> >(*(vector<vhtm::GenMET,allocator<vhtm::GenMET> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<vhtm::GenMET,allocator<vhtm::GenMET> >(*(vector<vhtm::GenMET,allocator<vhtm::GenMET> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenMETcOallocatorlEvhtmcLcLGenMETgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_461_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vhtm::GenMET,allocator<vhtm::GenMET> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vhtm::GenMET,allocator<vhtm::GenMET> >(*((vector<vhtm::GenMET,allocator<vhtm::GenMET> >::const_iterator*) G__int(libp->para[0])), *((vector<vhtm::GenMET,allocator<vhtm::GenMET> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<vhtm::GenMET,allocator<vhtm::GenMET> >(*((vector<vhtm::GenMET,allocator<vhtm::GenMET> >::const_iterator*) G__int(libp->para[0])), *((vector<vhtm::GenMET,allocator<vhtm::GenMET> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenMETcOallocatorlEvhtmcLcLGenMETgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_461_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vhtm::GenMET,allocator<vhtm::GenMET> >& obj = ((vector<vhtm::GenMET,allocator<vhtm::GenMET> >*) G__getstructoffset())->operator=(*(vector<vhtm::GenMET,allocator<vhtm::GenMET> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_461_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::GenMET,allocator<vhtm::GenMET> >*) G__getstructoffset())->reserve((vector<vhtm::GenMET,allocator<vhtm::GenMET> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_461_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vhtm::GenMET& obj = ((vector<vhtm::GenMET,allocator<vhtm::GenMET> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_461_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vhtm::GenMET& obj = ((vector<vhtm::GenMET,allocator<vhtm::GenMET> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_461_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::GenMET,allocator<vhtm::GenMET> >*) G__getstructoffset())->push_back(*(vhtm::GenMET*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_461_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::GenMET,allocator<vhtm::GenMET> >*) G__getstructoffset())->swap(*(vector<vhtm::GenMET,allocator<vhtm::GenMET> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_461_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::GenMET,allocator<vhtm::GenMET> >::iterator* pobj;
         vector<vhtm::GenMET,allocator<vhtm::GenMET> >::iterator xobj = ((vector<vhtm::GenMET,allocator<vhtm::GenMET> >*) G__getstructoffset())->insert(*((vector<vhtm::GenMET,allocator<vhtm::GenMET> >::iterator*) G__int(libp->para[0])), *(vhtm::GenMET*) libp->para[1].ref);
         pobj = new vector<vhtm::GenMET,allocator<vhtm::GenMET> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_461_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::GenMET,allocator<vhtm::GenMET> >*) G__getstructoffset())->insert(*((vector<vhtm::GenMET,allocator<vhtm::GenMET> >::iterator*) G__int(libp->para[0])), *((vector<vhtm::GenMET,allocator<vhtm::GenMET> >::const_iterator*) G__int(libp->para[1]))
, *((vector<vhtm::GenMET,allocator<vhtm::GenMET> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_461_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::GenMET,allocator<vhtm::GenMET> >*) G__getstructoffset())->insert(*((vector<vhtm::GenMET,allocator<vhtm::GenMET> >::iterator*) G__int(libp->para[0])), (vector<vhtm::GenMET,allocator<vhtm::GenMET> >::size_type) G__int(libp->para[1])
, *(vhtm::GenMET*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_461_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::GenMET,allocator<vhtm::GenMET> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_461_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::GenMET,allocator<vhtm::GenMET> >*) G__getstructoffset())->erase(*((vector<vhtm::GenMET,allocator<vhtm::GenMET> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_461_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::GenMET,allocator<vhtm::GenMET> >*) G__getstructoffset())->erase(*((vector<vhtm::GenMET,allocator<vhtm::GenMET> >::iterator*) G__int(libp->para[0])), *((vector<vhtm::GenMET,allocator<vhtm::GenMET> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_461_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::GenMET,allocator<vhtm::GenMET> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<vhtm::GenMET,allocator<vhtm::GenMET> > G__TvectorlEvhtmcLcLGenMETcOallocatorlEvhtmcLcLGenMETgRsPgR;
static int G__Dict_461_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<vhtm::GenMET,allocator<vhtm::GenMET> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<vhtm::GenMET,allocator<vhtm::GenMET> >*) (soff+(sizeof(vector<vhtm::GenMET,allocator<vhtm::GenMET> >)*i)))->~G__TvectorlEvhtmcLcLGenMETcOallocatorlEvhtmcLcLGenMETgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<vhtm::GenMET,allocator<vhtm::GenMET> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<vhtm::GenMET,allocator<vhtm::GenMET> >*) (soff))->~G__TvectorlEvhtmcLcLGenMETcOallocatorlEvhtmcLcLGenMETgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<vhtm::MET,allocator<vhtm::MET> > */
static int G__Dict_465_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vhtm::MET,allocator<vhtm::MET> >::reference obj = ((vector<vhtm::MET,allocator<vhtm::MET> >*) G__getstructoffset())->at((vector<vhtm::MET,allocator<vhtm::MET> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_465_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::MET,allocator<vhtm::MET> >::const_reference obj = ((const vector<vhtm::MET,allocator<vhtm::MET> >*) G__getstructoffset())->at((vector<vhtm::MET,allocator<vhtm::MET> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_465_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::MET,allocator<vhtm::MET> >::iterator* pobj;
         vector<vhtm::MET,allocator<vhtm::MET> >::iterator xobj = ((vector<vhtm::MET,allocator<vhtm::MET> >*) G__getstructoffset())->begin();
         pobj = new vector<vhtm::MET,allocator<vhtm::MET> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_465_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::MET,allocator<vhtm::MET> >::iterator* pobj;
         vector<vhtm::MET,allocator<vhtm::MET> >::iterator xobj = ((vector<vhtm::MET,allocator<vhtm::MET> >*) G__getstructoffset())->end();
         pobj = new vector<vhtm::MET,allocator<vhtm::MET> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_465_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::MET,allocator<vhtm::MET> >::reverse_iterator* pobj;
         vector<vhtm::MET,allocator<vhtm::MET> >::reverse_iterator xobj = ((vector<vhtm::MET,allocator<vhtm::MET> >*) G__getstructoffset())->rbegin();
         pobj = new vector<vhtm::MET,allocator<vhtm::MET> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_465_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::MET,allocator<vhtm::MET> >::reverse_iterator* pobj;
         vector<vhtm::MET,allocator<vhtm::MET> >::reverse_iterator xobj = ((vector<vhtm::MET,allocator<vhtm::MET> >*) G__getstructoffset())->rend();
         pobj = new vector<vhtm::MET,allocator<vhtm::MET> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_465_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vhtm::MET,allocator<vhtm::MET> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_465_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vhtm::MET,allocator<vhtm::MET> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_465_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::MET,allocator<vhtm::MET> >*) G__getstructoffset())->resize((vector<vhtm::MET,allocator<vhtm::MET> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_465_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::MET,allocator<vhtm::MET> >*) G__getstructoffset())->resize((vector<vhtm::MET,allocator<vhtm::MET> >::size_type) G__int(libp->para[0]), *((vhtm::MET*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_465_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vhtm::MET,allocator<vhtm::MET> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_465_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<vhtm::MET,allocator<vhtm::MET> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_465_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vhtm::MET,allocator<vhtm::MET> >::reference obj = ((vector<vhtm::MET,allocator<vhtm::MET> >*) G__getstructoffset())->operator[]((vector<vhtm::MET,allocator<vhtm::MET> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_465_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::MET,allocator<vhtm::MET> >::const_reference obj = ((const vector<vhtm::MET,allocator<vhtm::MET> >*) G__getstructoffset())->operator[]((vector<vhtm::MET,allocator<vhtm::MET> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_465_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vhtm::MET,allocator<vhtm::MET> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vhtm::MET,allocator<vhtm::MET> >[n];
     } else {
       p = new((void*) gvp) vector<vhtm::MET,allocator<vhtm::MET> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vhtm::MET,allocator<vhtm::MET> >;
     } else {
       p = new((void*) gvp) vector<vhtm::MET,allocator<vhtm::MET> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLMETcOallocatorlEvhtmcLcLMETgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_465_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vhtm::MET,allocator<vhtm::MET> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vhtm::MET,allocator<vhtm::MET> >((vector<vhtm::MET,allocator<vhtm::MET> >::size_type) G__int(libp->para[0]), *(vhtm::MET*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<vhtm::MET,allocator<vhtm::MET> >((vector<vhtm::MET,allocator<vhtm::MET> >::size_type) G__int(libp->para[0]), *(vhtm::MET*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vhtm::MET,allocator<vhtm::MET> >((vector<vhtm::MET,allocator<vhtm::MET> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<vhtm::MET,allocator<vhtm::MET> >((vector<vhtm::MET,allocator<vhtm::MET> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLMETcOallocatorlEvhtmcLcLMETgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_465_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vhtm::MET,allocator<vhtm::MET> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vhtm::MET,allocator<vhtm::MET> >(*(vector<vhtm::MET,allocator<vhtm::MET> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<vhtm::MET,allocator<vhtm::MET> >(*(vector<vhtm::MET,allocator<vhtm::MET> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLMETcOallocatorlEvhtmcLcLMETgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_465_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vhtm::MET,allocator<vhtm::MET> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vhtm::MET,allocator<vhtm::MET> >(*((vector<vhtm::MET,allocator<vhtm::MET> >::const_iterator*) G__int(libp->para[0])), *((vector<vhtm::MET,allocator<vhtm::MET> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<vhtm::MET,allocator<vhtm::MET> >(*((vector<vhtm::MET,allocator<vhtm::MET> >::const_iterator*) G__int(libp->para[0])), *((vector<vhtm::MET,allocator<vhtm::MET> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLMETcOallocatorlEvhtmcLcLMETgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_465_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vhtm::MET,allocator<vhtm::MET> >& obj = ((vector<vhtm::MET,allocator<vhtm::MET> >*) G__getstructoffset())->operator=(*(vector<vhtm::MET,allocator<vhtm::MET> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_465_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::MET,allocator<vhtm::MET> >*) G__getstructoffset())->reserve((vector<vhtm::MET,allocator<vhtm::MET> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_465_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vhtm::MET& obj = ((vector<vhtm::MET,allocator<vhtm::MET> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_465_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vhtm::MET& obj = ((vector<vhtm::MET,allocator<vhtm::MET> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_465_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::MET,allocator<vhtm::MET> >*) G__getstructoffset())->push_back(*(vhtm::MET*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_465_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::MET,allocator<vhtm::MET> >*) G__getstructoffset())->swap(*(vector<vhtm::MET,allocator<vhtm::MET> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_465_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::MET,allocator<vhtm::MET> >::iterator* pobj;
         vector<vhtm::MET,allocator<vhtm::MET> >::iterator xobj = ((vector<vhtm::MET,allocator<vhtm::MET> >*) G__getstructoffset())->insert(*((vector<vhtm::MET,allocator<vhtm::MET> >::iterator*) G__int(libp->para[0])), *(vhtm::MET*) libp->para[1].ref);
         pobj = new vector<vhtm::MET,allocator<vhtm::MET> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_465_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::MET,allocator<vhtm::MET> >*) G__getstructoffset())->insert(*((vector<vhtm::MET,allocator<vhtm::MET> >::iterator*) G__int(libp->para[0])), *((vector<vhtm::MET,allocator<vhtm::MET> >::const_iterator*) G__int(libp->para[1]))
, *((vector<vhtm::MET,allocator<vhtm::MET> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_465_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::MET,allocator<vhtm::MET> >*) G__getstructoffset())->insert(*((vector<vhtm::MET,allocator<vhtm::MET> >::iterator*) G__int(libp->para[0])), (vector<vhtm::MET,allocator<vhtm::MET> >::size_type) G__int(libp->para[1])
, *(vhtm::MET*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_465_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::MET,allocator<vhtm::MET> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_465_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::MET,allocator<vhtm::MET> >*) G__getstructoffset())->erase(*((vector<vhtm::MET,allocator<vhtm::MET> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_465_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::MET,allocator<vhtm::MET> >*) G__getstructoffset())->erase(*((vector<vhtm::MET,allocator<vhtm::MET> >::iterator*) G__int(libp->para[0])), *((vector<vhtm::MET,allocator<vhtm::MET> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_465_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::MET,allocator<vhtm::MET> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<vhtm::MET,allocator<vhtm::MET> > G__TvectorlEvhtmcLcLMETcOallocatorlEvhtmcLcLMETgRsPgR;
static int G__Dict_465_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<vhtm::MET,allocator<vhtm::MET> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<vhtm::MET,allocator<vhtm::MET> >*) (soff+(sizeof(vector<vhtm::MET,allocator<vhtm::MET> >)*i)))->~G__TvectorlEvhtmcLcLMETcOallocatorlEvhtmcLcLMETgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<vhtm::MET,allocator<vhtm::MET> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<vhtm::MET,allocator<vhtm::MET> >*) (soff))->~G__TvectorlEvhtmcLcLMETcOallocatorlEvhtmcLcLMETgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<vhtm::Tau,allocator<vhtm::Tau> > */
static int G__Dict_469_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vhtm::Tau,allocator<vhtm::Tau> >::reference obj = ((vector<vhtm::Tau,allocator<vhtm::Tau> >*) G__getstructoffset())->at((vector<vhtm::Tau,allocator<vhtm::Tau> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_469_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::Tau,allocator<vhtm::Tau> >::const_reference obj = ((const vector<vhtm::Tau,allocator<vhtm::Tau> >*) G__getstructoffset())->at((vector<vhtm::Tau,allocator<vhtm::Tau> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_469_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::Tau,allocator<vhtm::Tau> >::iterator* pobj;
         vector<vhtm::Tau,allocator<vhtm::Tau> >::iterator xobj = ((vector<vhtm::Tau,allocator<vhtm::Tau> >*) G__getstructoffset())->begin();
         pobj = new vector<vhtm::Tau,allocator<vhtm::Tau> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_469_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::Tau,allocator<vhtm::Tau> >::iterator* pobj;
         vector<vhtm::Tau,allocator<vhtm::Tau> >::iterator xobj = ((vector<vhtm::Tau,allocator<vhtm::Tau> >*) G__getstructoffset())->end();
         pobj = new vector<vhtm::Tau,allocator<vhtm::Tau> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_469_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::Tau,allocator<vhtm::Tau> >::reverse_iterator* pobj;
         vector<vhtm::Tau,allocator<vhtm::Tau> >::reverse_iterator xobj = ((vector<vhtm::Tau,allocator<vhtm::Tau> >*) G__getstructoffset())->rbegin();
         pobj = new vector<vhtm::Tau,allocator<vhtm::Tau> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_469_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::Tau,allocator<vhtm::Tau> >::reverse_iterator* pobj;
         vector<vhtm::Tau,allocator<vhtm::Tau> >::reverse_iterator xobj = ((vector<vhtm::Tau,allocator<vhtm::Tau> >*) G__getstructoffset())->rend();
         pobj = new vector<vhtm::Tau,allocator<vhtm::Tau> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_469_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vhtm::Tau,allocator<vhtm::Tau> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_469_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vhtm::Tau,allocator<vhtm::Tau> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_469_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Tau,allocator<vhtm::Tau> >*) G__getstructoffset())->resize((vector<vhtm::Tau,allocator<vhtm::Tau> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_469_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Tau,allocator<vhtm::Tau> >*) G__getstructoffset())->resize((vector<vhtm::Tau,allocator<vhtm::Tau> >::size_type) G__int(libp->para[0]), *((vhtm::Tau*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_469_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vhtm::Tau,allocator<vhtm::Tau> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_469_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<vhtm::Tau,allocator<vhtm::Tau> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_469_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vhtm::Tau,allocator<vhtm::Tau> >::reference obj = ((vector<vhtm::Tau,allocator<vhtm::Tau> >*) G__getstructoffset())->operator[]((vector<vhtm::Tau,allocator<vhtm::Tau> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_469_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::Tau,allocator<vhtm::Tau> >::const_reference obj = ((const vector<vhtm::Tau,allocator<vhtm::Tau> >*) G__getstructoffset())->operator[]((vector<vhtm::Tau,allocator<vhtm::Tau> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_469_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vhtm::Tau,allocator<vhtm::Tau> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vhtm::Tau,allocator<vhtm::Tau> >[n];
     } else {
       p = new((void*) gvp) vector<vhtm::Tau,allocator<vhtm::Tau> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vhtm::Tau,allocator<vhtm::Tau> >;
     } else {
       p = new((void*) gvp) vector<vhtm::Tau,allocator<vhtm::Tau> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLTaucOallocatorlEvhtmcLcLTaugRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_469_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vhtm::Tau,allocator<vhtm::Tau> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vhtm::Tau,allocator<vhtm::Tau> >((vector<vhtm::Tau,allocator<vhtm::Tau> >::size_type) G__int(libp->para[0]), *(vhtm::Tau*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<vhtm::Tau,allocator<vhtm::Tau> >((vector<vhtm::Tau,allocator<vhtm::Tau> >::size_type) G__int(libp->para[0]), *(vhtm::Tau*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vhtm::Tau,allocator<vhtm::Tau> >((vector<vhtm::Tau,allocator<vhtm::Tau> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<vhtm::Tau,allocator<vhtm::Tau> >((vector<vhtm::Tau,allocator<vhtm::Tau> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLTaucOallocatorlEvhtmcLcLTaugRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_469_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vhtm::Tau,allocator<vhtm::Tau> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vhtm::Tau,allocator<vhtm::Tau> >(*(vector<vhtm::Tau,allocator<vhtm::Tau> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<vhtm::Tau,allocator<vhtm::Tau> >(*(vector<vhtm::Tau,allocator<vhtm::Tau> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLTaucOallocatorlEvhtmcLcLTaugRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_469_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vhtm::Tau,allocator<vhtm::Tau> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vhtm::Tau,allocator<vhtm::Tau> >(*((vector<vhtm::Tau,allocator<vhtm::Tau> >::const_iterator*) G__int(libp->para[0])), *((vector<vhtm::Tau,allocator<vhtm::Tau> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<vhtm::Tau,allocator<vhtm::Tau> >(*((vector<vhtm::Tau,allocator<vhtm::Tau> >::const_iterator*) G__int(libp->para[0])), *((vector<vhtm::Tau,allocator<vhtm::Tau> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLTaucOallocatorlEvhtmcLcLTaugRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_469_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vhtm::Tau,allocator<vhtm::Tau> >& obj = ((vector<vhtm::Tau,allocator<vhtm::Tau> >*) G__getstructoffset())->operator=(*(vector<vhtm::Tau,allocator<vhtm::Tau> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_469_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Tau,allocator<vhtm::Tau> >*) G__getstructoffset())->reserve((vector<vhtm::Tau,allocator<vhtm::Tau> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_469_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vhtm::Tau& obj = ((vector<vhtm::Tau,allocator<vhtm::Tau> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_469_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vhtm::Tau& obj = ((vector<vhtm::Tau,allocator<vhtm::Tau> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_469_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Tau,allocator<vhtm::Tau> >*) G__getstructoffset())->push_back(*(vhtm::Tau*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_469_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Tau,allocator<vhtm::Tau> >*) G__getstructoffset())->swap(*(vector<vhtm::Tau,allocator<vhtm::Tau> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_469_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::Tau,allocator<vhtm::Tau> >::iterator* pobj;
         vector<vhtm::Tau,allocator<vhtm::Tau> >::iterator xobj = ((vector<vhtm::Tau,allocator<vhtm::Tau> >*) G__getstructoffset())->insert(*((vector<vhtm::Tau,allocator<vhtm::Tau> >::iterator*) G__int(libp->para[0])), *(vhtm::Tau*) libp->para[1].ref);
         pobj = new vector<vhtm::Tau,allocator<vhtm::Tau> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_469_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Tau,allocator<vhtm::Tau> >*) G__getstructoffset())->insert(*((vector<vhtm::Tau,allocator<vhtm::Tau> >::iterator*) G__int(libp->para[0])), *((vector<vhtm::Tau,allocator<vhtm::Tau> >::const_iterator*) G__int(libp->para[1]))
, *((vector<vhtm::Tau,allocator<vhtm::Tau> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_469_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Tau,allocator<vhtm::Tau> >*) G__getstructoffset())->insert(*((vector<vhtm::Tau,allocator<vhtm::Tau> >::iterator*) G__int(libp->para[0])), (vector<vhtm::Tau,allocator<vhtm::Tau> >::size_type) G__int(libp->para[1])
, *(vhtm::Tau*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_469_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Tau,allocator<vhtm::Tau> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_469_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Tau,allocator<vhtm::Tau> >*) G__getstructoffset())->erase(*((vector<vhtm::Tau,allocator<vhtm::Tau> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_469_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Tau,allocator<vhtm::Tau> >*) G__getstructoffset())->erase(*((vector<vhtm::Tau,allocator<vhtm::Tau> >::iterator*) G__int(libp->para[0])), *((vector<vhtm::Tau,allocator<vhtm::Tau> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_469_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Tau,allocator<vhtm::Tau> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<vhtm::Tau,allocator<vhtm::Tau> > G__TvectorlEvhtmcLcLTaucOallocatorlEvhtmcLcLTaugRsPgR;
static int G__Dict_469_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<vhtm::Tau,allocator<vhtm::Tau> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<vhtm::Tau,allocator<vhtm::Tau> >*) (soff+(sizeof(vector<vhtm::Tau,allocator<vhtm::Tau> >)*i)))->~G__TvectorlEvhtmcLcLTaucOallocatorlEvhtmcLcLTaugRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<vhtm::Tau,allocator<vhtm::Tau> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<vhtm::Tau,allocator<vhtm::Tau> >*) (soff))->~G__TvectorlEvhtmcLcLTaucOallocatorlEvhtmcLcLTaugRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<vhtm::Muon,allocator<vhtm::Muon> > */
static int G__Dict_473_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vhtm::Muon,allocator<vhtm::Muon> >::reference obj = ((vector<vhtm::Muon,allocator<vhtm::Muon> >*) G__getstructoffset())->at((vector<vhtm::Muon,allocator<vhtm::Muon> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::Muon,allocator<vhtm::Muon> >::const_reference obj = ((const vector<vhtm::Muon,allocator<vhtm::Muon> >*) G__getstructoffset())->at((vector<vhtm::Muon,allocator<vhtm::Muon> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::Muon,allocator<vhtm::Muon> >::iterator* pobj;
         vector<vhtm::Muon,allocator<vhtm::Muon> >::iterator xobj = ((vector<vhtm::Muon,allocator<vhtm::Muon> >*) G__getstructoffset())->begin();
         pobj = new vector<vhtm::Muon,allocator<vhtm::Muon> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::Muon,allocator<vhtm::Muon> >::iterator* pobj;
         vector<vhtm::Muon,allocator<vhtm::Muon> >::iterator xobj = ((vector<vhtm::Muon,allocator<vhtm::Muon> >*) G__getstructoffset())->end();
         pobj = new vector<vhtm::Muon,allocator<vhtm::Muon> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::Muon,allocator<vhtm::Muon> >::reverse_iterator* pobj;
         vector<vhtm::Muon,allocator<vhtm::Muon> >::reverse_iterator xobj = ((vector<vhtm::Muon,allocator<vhtm::Muon> >*) G__getstructoffset())->rbegin();
         pobj = new vector<vhtm::Muon,allocator<vhtm::Muon> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::Muon,allocator<vhtm::Muon> >::reverse_iterator* pobj;
         vector<vhtm::Muon,allocator<vhtm::Muon> >::reverse_iterator xobj = ((vector<vhtm::Muon,allocator<vhtm::Muon> >*) G__getstructoffset())->rend();
         pobj = new vector<vhtm::Muon,allocator<vhtm::Muon> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vhtm::Muon,allocator<vhtm::Muon> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vhtm::Muon,allocator<vhtm::Muon> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Muon,allocator<vhtm::Muon> >*) G__getstructoffset())->resize((vector<vhtm::Muon,allocator<vhtm::Muon> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Muon,allocator<vhtm::Muon> >*) G__getstructoffset())->resize((vector<vhtm::Muon,allocator<vhtm::Muon> >::size_type) G__int(libp->para[0]), *((vhtm::Muon*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vhtm::Muon,allocator<vhtm::Muon> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<vhtm::Muon,allocator<vhtm::Muon> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vhtm::Muon,allocator<vhtm::Muon> >::reference obj = ((vector<vhtm::Muon,allocator<vhtm::Muon> >*) G__getstructoffset())->operator[]((vector<vhtm::Muon,allocator<vhtm::Muon> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::Muon,allocator<vhtm::Muon> >::const_reference obj = ((const vector<vhtm::Muon,allocator<vhtm::Muon> >*) G__getstructoffset())->operator[]((vector<vhtm::Muon,allocator<vhtm::Muon> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vhtm::Muon,allocator<vhtm::Muon> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vhtm::Muon,allocator<vhtm::Muon> >[n];
     } else {
       p = new((void*) gvp) vector<vhtm::Muon,allocator<vhtm::Muon> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vhtm::Muon,allocator<vhtm::Muon> >;
     } else {
       p = new((void*) gvp) vector<vhtm::Muon,allocator<vhtm::Muon> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLMuoncOallocatorlEvhtmcLcLMuongRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vhtm::Muon,allocator<vhtm::Muon> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vhtm::Muon,allocator<vhtm::Muon> >((vector<vhtm::Muon,allocator<vhtm::Muon> >::size_type) G__int(libp->para[0]), *(vhtm::Muon*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<vhtm::Muon,allocator<vhtm::Muon> >((vector<vhtm::Muon,allocator<vhtm::Muon> >::size_type) G__int(libp->para[0]), *(vhtm::Muon*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vhtm::Muon,allocator<vhtm::Muon> >((vector<vhtm::Muon,allocator<vhtm::Muon> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<vhtm::Muon,allocator<vhtm::Muon> >((vector<vhtm::Muon,allocator<vhtm::Muon> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLMuoncOallocatorlEvhtmcLcLMuongRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vhtm::Muon,allocator<vhtm::Muon> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vhtm::Muon,allocator<vhtm::Muon> >(*(vector<vhtm::Muon,allocator<vhtm::Muon> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<vhtm::Muon,allocator<vhtm::Muon> >(*(vector<vhtm::Muon,allocator<vhtm::Muon> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLMuoncOallocatorlEvhtmcLcLMuongRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vhtm::Muon,allocator<vhtm::Muon> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vhtm::Muon,allocator<vhtm::Muon> >(*((vector<vhtm::Muon,allocator<vhtm::Muon> >::const_iterator*) G__int(libp->para[0])), *((vector<vhtm::Muon,allocator<vhtm::Muon> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<vhtm::Muon,allocator<vhtm::Muon> >(*((vector<vhtm::Muon,allocator<vhtm::Muon> >::const_iterator*) G__int(libp->para[0])), *((vector<vhtm::Muon,allocator<vhtm::Muon> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLMuoncOallocatorlEvhtmcLcLMuongRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vhtm::Muon,allocator<vhtm::Muon> >& obj = ((vector<vhtm::Muon,allocator<vhtm::Muon> >*) G__getstructoffset())->operator=(*(vector<vhtm::Muon,allocator<vhtm::Muon> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Muon,allocator<vhtm::Muon> >*) G__getstructoffset())->reserve((vector<vhtm::Muon,allocator<vhtm::Muon> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vhtm::Muon& obj = ((vector<vhtm::Muon,allocator<vhtm::Muon> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vhtm::Muon& obj = ((vector<vhtm::Muon,allocator<vhtm::Muon> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Muon,allocator<vhtm::Muon> >*) G__getstructoffset())->push_back(*(vhtm::Muon*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Muon,allocator<vhtm::Muon> >*) G__getstructoffset())->swap(*(vector<vhtm::Muon,allocator<vhtm::Muon> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::Muon,allocator<vhtm::Muon> >::iterator* pobj;
         vector<vhtm::Muon,allocator<vhtm::Muon> >::iterator xobj = ((vector<vhtm::Muon,allocator<vhtm::Muon> >*) G__getstructoffset())->insert(*((vector<vhtm::Muon,allocator<vhtm::Muon> >::iterator*) G__int(libp->para[0])), *(vhtm::Muon*) libp->para[1].ref);
         pobj = new vector<vhtm::Muon,allocator<vhtm::Muon> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Muon,allocator<vhtm::Muon> >*) G__getstructoffset())->insert(*((vector<vhtm::Muon,allocator<vhtm::Muon> >::iterator*) G__int(libp->para[0])), *((vector<vhtm::Muon,allocator<vhtm::Muon> >::const_iterator*) G__int(libp->para[1]))
, *((vector<vhtm::Muon,allocator<vhtm::Muon> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Muon,allocator<vhtm::Muon> >*) G__getstructoffset())->insert(*((vector<vhtm::Muon,allocator<vhtm::Muon> >::iterator*) G__int(libp->para[0])), (vector<vhtm::Muon,allocator<vhtm::Muon> >::size_type) G__int(libp->para[1])
, *(vhtm::Muon*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Muon,allocator<vhtm::Muon> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Muon,allocator<vhtm::Muon> >*) G__getstructoffset())->erase(*((vector<vhtm::Muon,allocator<vhtm::Muon> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Muon,allocator<vhtm::Muon> >*) G__getstructoffset())->erase(*((vector<vhtm::Muon,allocator<vhtm::Muon> >::iterator*) G__int(libp->para[0])), *((vector<vhtm::Muon,allocator<vhtm::Muon> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_473_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Muon,allocator<vhtm::Muon> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<vhtm::Muon,allocator<vhtm::Muon> > G__TvectorlEvhtmcLcLMuoncOallocatorlEvhtmcLcLMuongRsPgR;
static int G__Dict_473_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<vhtm::Muon,allocator<vhtm::Muon> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<vhtm::Muon,allocator<vhtm::Muon> >*) (soff+(sizeof(vector<vhtm::Muon,allocator<vhtm::Muon> >)*i)))->~G__TvectorlEvhtmcLcLMuoncOallocatorlEvhtmcLcLMuongRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<vhtm::Muon,allocator<vhtm::Muon> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<vhtm::Muon,allocator<vhtm::Muon> >*) (soff))->~G__TvectorlEvhtmcLcLMuoncOallocatorlEvhtmcLcLMuongRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<vhtm::Jet,allocator<vhtm::Jet> > */
static int G__Dict_477_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vhtm::Jet,allocator<vhtm::Jet> >::reference obj = ((vector<vhtm::Jet,allocator<vhtm::Jet> >*) G__getstructoffset())->at((vector<vhtm::Jet,allocator<vhtm::Jet> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_477_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::Jet,allocator<vhtm::Jet> >::const_reference obj = ((const vector<vhtm::Jet,allocator<vhtm::Jet> >*) G__getstructoffset())->at((vector<vhtm::Jet,allocator<vhtm::Jet> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_477_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::Jet,allocator<vhtm::Jet> >::iterator* pobj;
         vector<vhtm::Jet,allocator<vhtm::Jet> >::iterator xobj = ((vector<vhtm::Jet,allocator<vhtm::Jet> >*) G__getstructoffset())->begin();
         pobj = new vector<vhtm::Jet,allocator<vhtm::Jet> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_477_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::Jet,allocator<vhtm::Jet> >::iterator* pobj;
         vector<vhtm::Jet,allocator<vhtm::Jet> >::iterator xobj = ((vector<vhtm::Jet,allocator<vhtm::Jet> >*) G__getstructoffset())->end();
         pobj = new vector<vhtm::Jet,allocator<vhtm::Jet> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_477_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::Jet,allocator<vhtm::Jet> >::reverse_iterator* pobj;
         vector<vhtm::Jet,allocator<vhtm::Jet> >::reverse_iterator xobj = ((vector<vhtm::Jet,allocator<vhtm::Jet> >*) G__getstructoffset())->rbegin();
         pobj = new vector<vhtm::Jet,allocator<vhtm::Jet> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_477_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::Jet,allocator<vhtm::Jet> >::reverse_iterator* pobj;
         vector<vhtm::Jet,allocator<vhtm::Jet> >::reverse_iterator xobj = ((vector<vhtm::Jet,allocator<vhtm::Jet> >*) G__getstructoffset())->rend();
         pobj = new vector<vhtm::Jet,allocator<vhtm::Jet> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_477_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vhtm::Jet,allocator<vhtm::Jet> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_477_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vhtm::Jet,allocator<vhtm::Jet> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_477_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Jet,allocator<vhtm::Jet> >*) G__getstructoffset())->resize((vector<vhtm::Jet,allocator<vhtm::Jet> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_477_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Jet,allocator<vhtm::Jet> >*) G__getstructoffset())->resize((vector<vhtm::Jet,allocator<vhtm::Jet> >::size_type) G__int(libp->para[0]), *((vhtm::Jet*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_477_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vhtm::Jet,allocator<vhtm::Jet> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_477_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<vhtm::Jet,allocator<vhtm::Jet> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_477_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vhtm::Jet,allocator<vhtm::Jet> >::reference obj = ((vector<vhtm::Jet,allocator<vhtm::Jet> >*) G__getstructoffset())->operator[]((vector<vhtm::Jet,allocator<vhtm::Jet> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_477_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::Jet,allocator<vhtm::Jet> >::const_reference obj = ((const vector<vhtm::Jet,allocator<vhtm::Jet> >*) G__getstructoffset())->operator[]((vector<vhtm::Jet,allocator<vhtm::Jet> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_477_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vhtm::Jet,allocator<vhtm::Jet> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vhtm::Jet,allocator<vhtm::Jet> >[n];
     } else {
       p = new((void*) gvp) vector<vhtm::Jet,allocator<vhtm::Jet> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vhtm::Jet,allocator<vhtm::Jet> >;
     } else {
       p = new((void*) gvp) vector<vhtm::Jet,allocator<vhtm::Jet> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLJetcOallocatorlEvhtmcLcLJetgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_477_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vhtm::Jet,allocator<vhtm::Jet> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vhtm::Jet,allocator<vhtm::Jet> >((vector<vhtm::Jet,allocator<vhtm::Jet> >::size_type) G__int(libp->para[0]), *(vhtm::Jet*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<vhtm::Jet,allocator<vhtm::Jet> >((vector<vhtm::Jet,allocator<vhtm::Jet> >::size_type) G__int(libp->para[0]), *(vhtm::Jet*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vhtm::Jet,allocator<vhtm::Jet> >((vector<vhtm::Jet,allocator<vhtm::Jet> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<vhtm::Jet,allocator<vhtm::Jet> >((vector<vhtm::Jet,allocator<vhtm::Jet> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLJetcOallocatorlEvhtmcLcLJetgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_477_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vhtm::Jet,allocator<vhtm::Jet> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vhtm::Jet,allocator<vhtm::Jet> >(*(vector<vhtm::Jet,allocator<vhtm::Jet> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<vhtm::Jet,allocator<vhtm::Jet> >(*(vector<vhtm::Jet,allocator<vhtm::Jet> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLJetcOallocatorlEvhtmcLcLJetgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_477_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vhtm::Jet,allocator<vhtm::Jet> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vhtm::Jet,allocator<vhtm::Jet> >(*((vector<vhtm::Jet,allocator<vhtm::Jet> >::const_iterator*) G__int(libp->para[0])), *((vector<vhtm::Jet,allocator<vhtm::Jet> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<vhtm::Jet,allocator<vhtm::Jet> >(*((vector<vhtm::Jet,allocator<vhtm::Jet> >::const_iterator*) G__int(libp->para[0])), *((vector<vhtm::Jet,allocator<vhtm::Jet> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLJetcOallocatorlEvhtmcLcLJetgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_477_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vhtm::Jet,allocator<vhtm::Jet> >& obj = ((vector<vhtm::Jet,allocator<vhtm::Jet> >*) G__getstructoffset())->operator=(*(vector<vhtm::Jet,allocator<vhtm::Jet> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_477_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Jet,allocator<vhtm::Jet> >*) G__getstructoffset())->reserve((vector<vhtm::Jet,allocator<vhtm::Jet> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_477_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vhtm::Jet& obj = ((vector<vhtm::Jet,allocator<vhtm::Jet> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_477_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vhtm::Jet& obj = ((vector<vhtm::Jet,allocator<vhtm::Jet> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_477_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Jet,allocator<vhtm::Jet> >*) G__getstructoffset())->push_back(*(vhtm::Jet*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_477_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Jet,allocator<vhtm::Jet> >*) G__getstructoffset())->swap(*(vector<vhtm::Jet,allocator<vhtm::Jet> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_477_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::Jet,allocator<vhtm::Jet> >::iterator* pobj;
         vector<vhtm::Jet,allocator<vhtm::Jet> >::iterator xobj = ((vector<vhtm::Jet,allocator<vhtm::Jet> >*) G__getstructoffset())->insert(*((vector<vhtm::Jet,allocator<vhtm::Jet> >::iterator*) G__int(libp->para[0])), *(vhtm::Jet*) libp->para[1].ref);
         pobj = new vector<vhtm::Jet,allocator<vhtm::Jet> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_477_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Jet,allocator<vhtm::Jet> >*) G__getstructoffset())->insert(*((vector<vhtm::Jet,allocator<vhtm::Jet> >::iterator*) G__int(libp->para[0])), *((vector<vhtm::Jet,allocator<vhtm::Jet> >::const_iterator*) G__int(libp->para[1]))
, *((vector<vhtm::Jet,allocator<vhtm::Jet> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_477_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Jet,allocator<vhtm::Jet> >*) G__getstructoffset())->insert(*((vector<vhtm::Jet,allocator<vhtm::Jet> >::iterator*) G__int(libp->para[0])), (vector<vhtm::Jet,allocator<vhtm::Jet> >::size_type) G__int(libp->para[1])
, *(vhtm::Jet*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_477_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Jet,allocator<vhtm::Jet> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_477_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Jet,allocator<vhtm::Jet> >*) G__getstructoffset())->erase(*((vector<vhtm::Jet,allocator<vhtm::Jet> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_477_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Jet,allocator<vhtm::Jet> >*) G__getstructoffset())->erase(*((vector<vhtm::Jet,allocator<vhtm::Jet> >::iterator*) G__int(libp->para[0])), *((vector<vhtm::Jet,allocator<vhtm::Jet> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_477_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Jet,allocator<vhtm::Jet> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<vhtm::Jet,allocator<vhtm::Jet> > G__TvectorlEvhtmcLcLJetcOallocatorlEvhtmcLcLJetgRsPgR;
static int G__Dict_477_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<vhtm::Jet,allocator<vhtm::Jet> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<vhtm::Jet,allocator<vhtm::Jet> >*) (soff+(sizeof(vector<vhtm::Jet,allocator<vhtm::Jet> >)*i)))->~G__TvectorlEvhtmcLcLJetcOallocatorlEvhtmcLcLJetgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<vhtm::Jet,allocator<vhtm::Jet> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<vhtm::Jet,allocator<vhtm::Jet> >*) (soff))->~G__TvectorlEvhtmcLcLJetcOallocatorlEvhtmcLcLJetgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<vhtm::Vertex,allocator<vhtm::Vertex> > */
static int G__Dict_481_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vhtm::Vertex,allocator<vhtm::Vertex> >::reference obj = ((vector<vhtm::Vertex,allocator<vhtm::Vertex> >*) G__getstructoffset())->at((vector<vhtm::Vertex,allocator<vhtm::Vertex> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_481_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::Vertex,allocator<vhtm::Vertex> >::const_reference obj = ((const vector<vhtm::Vertex,allocator<vhtm::Vertex> >*) G__getstructoffset())->at((vector<vhtm::Vertex,allocator<vhtm::Vertex> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_481_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::Vertex,allocator<vhtm::Vertex> >::iterator* pobj;
         vector<vhtm::Vertex,allocator<vhtm::Vertex> >::iterator xobj = ((vector<vhtm::Vertex,allocator<vhtm::Vertex> >*) G__getstructoffset())->begin();
         pobj = new vector<vhtm::Vertex,allocator<vhtm::Vertex> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_481_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::Vertex,allocator<vhtm::Vertex> >::iterator* pobj;
         vector<vhtm::Vertex,allocator<vhtm::Vertex> >::iterator xobj = ((vector<vhtm::Vertex,allocator<vhtm::Vertex> >*) G__getstructoffset())->end();
         pobj = new vector<vhtm::Vertex,allocator<vhtm::Vertex> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_481_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::Vertex,allocator<vhtm::Vertex> >::reverse_iterator* pobj;
         vector<vhtm::Vertex,allocator<vhtm::Vertex> >::reverse_iterator xobj = ((vector<vhtm::Vertex,allocator<vhtm::Vertex> >*) G__getstructoffset())->rbegin();
         pobj = new vector<vhtm::Vertex,allocator<vhtm::Vertex> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_481_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::Vertex,allocator<vhtm::Vertex> >::reverse_iterator* pobj;
         vector<vhtm::Vertex,allocator<vhtm::Vertex> >::reverse_iterator xobj = ((vector<vhtm::Vertex,allocator<vhtm::Vertex> >*) G__getstructoffset())->rend();
         pobj = new vector<vhtm::Vertex,allocator<vhtm::Vertex> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_481_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vhtm::Vertex,allocator<vhtm::Vertex> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_481_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vhtm::Vertex,allocator<vhtm::Vertex> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_481_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Vertex,allocator<vhtm::Vertex> >*) G__getstructoffset())->resize((vector<vhtm::Vertex,allocator<vhtm::Vertex> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_481_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Vertex,allocator<vhtm::Vertex> >*) G__getstructoffset())->resize((vector<vhtm::Vertex,allocator<vhtm::Vertex> >::size_type) G__int(libp->para[0]), *((vhtm::Vertex*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_481_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vhtm::Vertex,allocator<vhtm::Vertex> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_481_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<vhtm::Vertex,allocator<vhtm::Vertex> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_481_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vhtm::Vertex,allocator<vhtm::Vertex> >::reference obj = ((vector<vhtm::Vertex,allocator<vhtm::Vertex> >*) G__getstructoffset())->operator[]((vector<vhtm::Vertex,allocator<vhtm::Vertex> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_481_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::Vertex,allocator<vhtm::Vertex> >::const_reference obj = ((const vector<vhtm::Vertex,allocator<vhtm::Vertex> >*) G__getstructoffset())->operator[]((vector<vhtm::Vertex,allocator<vhtm::Vertex> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_481_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vhtm::Vertex,allocator<vhtm::Vertex> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vhtm::Vertex,allocator<vhtm::Vertex> >[n];
     } else {
       p = new((void*) gvp) vector<vhtm::Vertex,allocator<vhtm::Vertex> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vhtm::Vertex,allocator<vhtm::Vertex> >;
     } else {
       p = new((void*) gvp) vector<vhtm::Vertex,allocator<vhtm::Vertex> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLVertexcOallocatorlEvhtmcLcLVertexgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_481_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vhtm::Vertex,allocator<vhtm::Vertex> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vhtm::Vertex,allocator<vhtm::Vertex> >((vector<vhtm::Vertex,allocator<vhtm::Vertex> >::size_type) G__int(libp->para[0]), *(vhtm::Vertex*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<vhtm::Vertex,allocator<vhtm::Vertex> >((vector<vhtm::Vertex,allocator<vhtm::Vertex> >::size_type) G__int(libp->para[0]), *(vhtm::Vertex*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vhtm::Vertex,allocator<vhtm::Vertex> >((vector<vhtm::Vertex,allocator<vhtm::Vertex> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<vhtm::Vertex,allocator<vhtm::Vertex> >((vector<vhtm::Vertex,allocator<vhtm::Vertex> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLVertexcOallocatorlEvhtmcLcLVertexgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_481_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vhtm::Vertex,allocator<vhtm::Vertex> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vhtm::Vertex,allocator<vhtm::Vertex> >(*(vector<vhtm::Vertex,allocator<vhtm::Vertex> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<vhtm::Vertex,allocator<vhtm::Vertex> >(*(vector<vhtm::Vertex,allocator<vhtm::Vertex> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLVertexcOallocatorlEvhtmcLcLVertexgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_481_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vhtm::Vertex,allocator<vhtm::Vertex> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vhtm::Vertex,allocator<vhtm::Vertex> >(*((vector<vhtm::Vertex,allocator<vhtm::Vertex> >::const_iterator*) G__int(libp->para[0])), *((vector<vhtm::Vertex,allocator<vhtm::Vertex> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<vhtm::Vertex,allocator<vhtm::Vertex> >(*((vector<vhtm::Vertex,allocator<vhtm::Vertex> >::const_iterator*) G__int(libp->para[0])), *((vector<vhtm::Vertex,allocator<vhtm::Vertex> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLVertexcOallocatorlEvhtmcLcLVertexgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_481_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vhtm::Vertex,allocator<vhtm::Vertex> >& obj = ((vector<vhtm::Vertex,allocator<vhtm::Vertex> >*) G__getstructoffset())->operator=(*(vector<vhtm::Vertex,allocator<vhtm::Vertex> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_481_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Vertex,allocator<vhtm::Vertex> >*) G__getstructoffset())->reserve((vector<vhtm::Vertex,allocator<vhtm::Vertex> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_481_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vhtm::Vertex& obj = ((vector<vhtm::Vertex,allocator<vhtm::Vertex> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_481_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vhtm::Vertex& obj = ((vector<vhtm::Vertex,allocator<vhtm::Vertex> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_481_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Vertex,allocator<vhtm::Vertex> >*) G__getstructoffset())->push_back(*(vhtm::Vertex*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_481_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Vertex,allocator<vhtm::Vertex> >*) G__getstructoffset())->swap(*(vector<vhtm::Vertex,allocator<vhtm::Vertex> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_481_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::Vertex,allocator<vhtm::Vertex> >::iterator* pobj;
         vector<vhtm::Vertex,allocator<vhtm::Vertex> >::iterator xobj = ((vector<vhtm::Vertex,allocator<vhtm::Vertex> >*) G__getstructoffset())->insert(*((vector<vhtm::Vertex,allocator<vhtm::Vertex> >::iterator*) G__int(libp->para[0])), *(vhtm::Vertex*) libp->para[1].ref);
         pobj = new vector<vhtm::Vertex,allocator<vhtm::Vertex> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_481_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Vertex,allocator<vhtm::Vertex> >*) G__getstructoffset())->insert(*((vector<vhtm::Vertex,allocator<vhtm::Vertex> >::iterator*) G__int(libp->para[0])), *((vector<vhtm::Vertex,allocator<vhtm::Vertex> >::const_iterator*) G__int(libp->para[1]))
, *((vector<vhtm::Vertex,allocator<vhtm::Vertex> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_481_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Vertex,allocator<vhtm::Vertex> >*) G__getstructoffset())->insert(*((vector<vhtm::Vertex,allocator<vhtm::Vertex> >::iterator*) G__int(libp->para[0])), (vector<vhtm::Vertex,allocator<vhtm::Vertex> >::size_type) G__int(libp->para[1])
, *(vhtm::Vertex*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_481_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Vertex,allocator<vhtm::Vertex> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_481_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Vertex,allocator<vhtm::Vertex> >*) G__getstructoffset())->erase(*((vector<vhtm::Vertex,allocator<vhtm::Vertex> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_481_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Vertex,allocator<vhtm::Vertex> >*) G__getstructoffset())->erase(*((vector<vhtm::Vertex,allocator<vhtm::Vertex> >::iterator*) G__int(libp->para[0])), *((vector<vhtm::Vertex,allocator<vhtm::Vertex> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_481_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Vertex,allocator<vhtm::Vertex> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<vhtm::Vertex,allocator<vhtm::Vertex> > G__TvectorlEvhtmcLcLVertexcOallocatorlEvhtmcLcLVertexgRsPgR;
static int G__Dict_481_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<vhtm::Vertex,allocator<vhtm::Vertex> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<vhtm::Vertex,allocator<vhtm::Vertex> >*) (soff+(sizeof(vector<vhtm::Vertex,allocator<vhtm::Vertex> >)*i)))->~G__TvectorlEvhtmcLcLVertexcOallocatorlEvhtmcLcLVertexgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<vhtm::Vertex,allocator<vhtm::Vertex> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<vhtm::Vertex,allocator<vhtm::Vertex> >*) (soff))->~G__TvectorlEvhtmcLcLVertexcOallocatorlEvhtmcLcLVertexgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<vhtm::Photon,allocator<vhtm::Photon> > */
static int G__Dict_485_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vhtm::Photon,allocator<vhtm::Photon> >::reference obj = ((vector<vhtm::Photon,allocator<vhtm::Photon> >*) G__getstructoffset())->at((vector<vhtm::Photon,allocator<vhtm::Photon> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_485_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::Photon,allocator<vhtm::Photon> >::const_reference obj = ((const vector<vhtm::Photon,allocator<vhtm::Photon> >*) G__getstructoffset())->at((vector<vhtm::Photon,allocator<vhtm::Photon> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_485_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::Photon,allocator<vhtm::Photon> >::iterator* pobj;
         vector<vhtm::Photon,allocator<vhtm::Photon> >::iterator xobj = ((vector<vhtm::Photon,allocator<vhtm::Photon> >*) G__getstructoffset())->begin();
         pobj = new vector<vhtm::Photon,allocator<vhtm::Photon> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_485_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::Photon,allocator<vhtm::Photon> >::iterator* pobj;
         vector<vhtm::Photon,allocator<vhtm::Photon> >::iterator xobj = ((vector<vhtm::Photon,allocator<vhtm::Photon> >*) G__getstructoffset())->end();
         pobj = new vector<vhtm::Photon,allocator<vhtm::Photon> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_485_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::Photon,allocator<vhtm::Photon> >::reverse_iterator* pobj;
         vector<vhtm::Photon,allocator<vhtm::Photon> >::reverse_iterator xobj = ((vector<vhtm::Photon,allocator<vhtm::Photon> >*) G__getstructoffset())->rbegin();
         pobj = new vector<vhtm::Photon,allocator<vhtm::Photon> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_485_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::Photon,allocator<vhtm::Photon> >::reverse_iterator* pobj;
         vector<vhtm::Photon,allocator<vhtm::Photon> >::reverse_iterator xobj = ((vector<vhtm::Photon,allocator<vhtm::Photon> >*) G__getstructoffset())->rend();
         pobj = new vector<vhtm::Photon,allocator<vhtm::Photon> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_485_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vhtm::Photon,allocator<vhtm::Photon> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_485_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vhtm::Photon,allocator<vhtm::Photon> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_485_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Photon,allocator<vhtm::Photon> >*) G__getstructoffset())->resize((vector<vhtm::Photon,allocator<vhtm::Photon> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_485_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Photon,allocator<vhtm::Photon> >*) G__getstructoffset())->resize((vector<vhtm::Photon,allocator<vhtm::Photon> >::size_type) G__int(libp->para[0]), *((vhtm::Photon*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_485_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vhtm::Photon,allocator<vhtm::Photon> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_485_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<vhtm::Photon,allocator<vhtm::Photon> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_485_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vhtm::Photon,allocator<vhtm::Photon> >::reference obj = ((vector<vhtm::Photon,allocator<vhtm::Photon> >*) G__getstructoffset())->operator[]((vector<vhtm::Photon,allocator<vhtm::Photon> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_485_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::Photon,allocator<vhtm::Photon> >::const_reference obj = ((const vector<vhtm::Photon,allocator<vhtm::Photon> >*) G__getstructoffset())->operator[]((vector<vhtm::Photon,allocator<vhtm::Photon> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_485_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vhtm::Photon,allocator<vhtm::Photon> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vhtm::Photon,allocator<vhtm::Photon> >[n];
     } else {
       p = new((void*) gvp) vector<vhtm::Photon,allocator<vhtm::Photon> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vhtm::Photon,allocator<vhtm::Photon> >;
     } else {
       p = new((void*) gvp) vector<vhtm::Photon,allocator<vhtm::Photon> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLPhotoncOallocatorlEvhtmcLcLPhotongRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_485_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vhtm::Photon,allocator<vhtm::Photon> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vhtm::Photon,allocator<vhtm::Photon> >((vector<vhtm::Photon,allocator<vhtm::Photon> >::size_type) G__int(libp->para[0]), *(vhtm::Photon*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<vhtm::Photon,allocator<vhtm::Photon> >((vector<vhtm::Photon,allocator<vhtm::Photon> >::size_type) G__int(libp->para[0]), *(vhtm::Photon*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vhtm::Photon,allocator<vhtm::Photon> >((vector<vhtm::Photon,allocator<vhtm::Photon> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<vhtm::Photon,allocator<vhtm::Photon> >((vector<vhtm::Photon,allocator<vhtm::Photon> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLPhotoncOallocatorlEvhtmcLcLPhotongRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_485_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vhtm::Photon,allocator<vhtm::Photon> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vhtm::Photon,allocator<vhtm::Photon> >(*(vector<vhtm::Photon,allocator<vhtm::Photon> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<vhtm::Photon,allocator<vhtm::Photon> >(*(vector<vhtm::Photon,allocator<vhtm::Photon> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLPhotoncOallocatorlEvhtmcLcLPhotongRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_485_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vhtm::Photon,allocator<vhtm::Photon> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vhtm::Photon,allocator<vhtm::Photon> >(*((vector<vhtm::Photon,allocator<vhtm::Photon> >::const_iterator*) G__int(libp->para[0])), *((vector<vhtm::Photon,allocator<vhtm::Photon> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<vhtm::Photon,allocator<vhtm::Photon> >(*((vector<vhtm::Photon,allocator<vhtm::Photon> >::const_iterator*) G__int(libp->para[0])), *((vector<vhtm::Photon,allocator<vhtm::Photon> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLPhotoncOallocatorlEvhtmcLcLPhotongRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_485_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vhtm::Photon,allocator<vhtm::Photon> >& obj = ((vector<vhtm::Photon,allocator<vhtm::Photon> >*) G__getstructoffset())->operator=(*(vector<vhtm::Photon,allocator<vhtm::Photon> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_485_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Photon,allocator<vhtm::Photon> >*) G__getstructoffset())->reserve((vector<vhtm::Photon,allocator<vhtm::Photon> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_485_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vhtm::Photon& obj = ((vector<vhtm::Photon,allocator<vhtm::Photon> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_485_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vhtm::Photon& obj = ((vector<vhtm::Photon,allocator<vhtm::Photon> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_485_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Photon,allocator<vhtm::Photon> >*) G__getstructoffset())->push_back(*(vhtm::Photon*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_485_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Photon,allocator<vhtm::Photon> >*) G__getstructoffset())->swap(*(vector<vhtm::Photon,allocator<vhtm::Photon> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_485_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::Photon,allocator<vhtm::Photon> >::iterator* pobj;
         vector<vhtm::Photon,allocator<vhtm::Photon> >::iterator xobj = ((vector<vhtm::Photon,allocator<vhtm::Photon> >*) G__getstructoffset())->insert(*((vector<vhtm::Photon,allocator<vhtm::Photon> >::iterator*) G__int(libp->para[0])), *(vhtm::Photon*) libp->para[1].ref);
         pobj = new vector<vhtm::Photon,allocator<vhtm::Photon> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_485_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Photon,allocator<vhtm::Photon> >*) G__getstructoffset())->insert(*((vector<vhtm::Photon,allocator<vhtm::Photon> >::iterator*) G__int(libp->para[0])), *((vector<vhtm::Photon,allocator<vhtm::Photon> >::const_iterator*) G__int(libp->para[1]))
, *((vector<vhtm::Photon,allocator<vhtm::Photon> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_485_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Photon,allocator<vhtm::Photon> >*) G__getstructoffset())->insert(*((vector<vhtm::Photon,allocator<vhtm::Photon> >::iterator*) G__int(libp->para[0])), (vector<vhtm::Photon,allocator<vhtm::Photon> >::size_type) G__int(libp->para[1])
, *(vhtm::Photon*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_485_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Photon,allocator<vhtm::Photon> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_485_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Photon,allocator<vhtm::Photon> >*) G__getstructoffset())->erase(*((vector<vhtm::Photon,allocator<vhtm::Photon> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_485_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Photon,allocator<vhtm::Photon> >*) G__getstructoffset())->erase(*((vector<vhtm::Photon,allocator<vhtm::Photon> >::iterator*) G__int(libp->para[0])), *((vector<vhtm::Photon,allocator<vhtm::Photon> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_485_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::Photon,allocator<vhtm::Photon> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<vhtm::Photon,allocator<vhtm::Photon> > G__TvectorlEvhtmcLcLPhotoncOallocatorlEvhtmcLcLPhotongRsPgR;
static int G__Dict_485_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<vhtm::Photon,allocator<vhtm::Photon> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<vhtm::Photon,allocator<vhtm::Photon> >*) (soff+(sizeof(vector<vhtm::Photon,allocator<vhtm::Photon> >)*i)))->~G__TvectorlEvhtmcLcLPhotoncOallocatorlEvhtmcLcLPhotongRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<vhtm::Photon,allocator<vhtm::Photon> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<vhtm::Photon,allocator<vhtm::Photon> >*) (soff))->~G__TvectorlEvhtmcLcLPhotoncOallocatorlEvhtmcLcLPhotongRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> > */
static int G__Dict_489_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::reference obj = ((vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >*) G__getstructoffset())->at((vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_489_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::const_reference obj = ((const vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >*) G__getstructoffset())->at((vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_489_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::iterator* pobj;
         vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::iterator xobj = ((vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >*) G__getstructoffset())->begin();
         pobj = new vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_489_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::iterator* pobj;
         vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::iterator xobj = ((vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >*) G__getstructoffset())->end();
         pobj = new vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_489_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::reverse_iterator* pobj;
         vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::reverse_iterator xobj = ((vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >*) G__getstructoffset())->rbegin();
         pobj = new vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_489_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::reverse_iterator* pobj;
         vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::reverse_iterator xobj = ((vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >*) G__getstructoffset())->rend();
         pobj = new vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_489_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_489_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_489_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >*) G__getstructoffset())->resize((vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_489_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >*) G__getstructoffset())->resize((vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::size_type) G__int(libp->para[0]), *((vhtm::TriggerObject*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_489_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_489_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_489_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::reference obj = ((vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >*) G__getstructoffset())->operator[]((vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_489_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::const_reference obj = ((const vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >*) G__getstructoffset())->operator[]((vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_489_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >[n];
     } else {
       p = new((void*) gvp) vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >;
     } else {
       p = new((void*) gvp) vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLTriggerObjectcOallocatorlEvhtmcLcLTriggerObjectgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_489_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >((vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::size_type) G__int(libp->para[0]), *(vhtm::TriggerObject*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >((vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::size_type) G__int(libp->para[0]), *(vhtm::TriggerObject*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >((vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >((vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLTriggerObjectcOallocatorlEvhtmcLcLTriggerObjectgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_489_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >(*(vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >(*(vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLTriggerObjectcOallocatorlEvhtmcLcLTriggerObjectgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_489_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >(*((vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::const_iterator*) G__int(libp->para[0])), *((vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >(*((vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::const_iterator*) G__int(libp->para[0])), *((vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLTriggerObjectcOallocatorlEvhtmcLcLTriggerObjectgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_489_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >& obj = ((vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >*) G__getstructoffset())->operator=(*(vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_489_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >*) G__getstructoffset())->reserve((vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_489_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vhtm::TriggerObject& obj = ((vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_489_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vhtm::TriggerObject& obj = ((vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_489_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >*) G__getstructoffset())->push_back(*(vhtm::TriggerObject*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_489_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >*) G__getstructoffset())->swap(*(vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_489_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::iterator* pobj;
         vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::iterator xobj = ((vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >*) G__getstructoffset())->insert(*((vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::iterator*) G__int(libp->para[0])), *(vhtm::TriggerObject*) libp->para[1].ref);
         pobj = new vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_489_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >*) G__getstructoffset())->insert(*((vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::iterator*) G__int(libp->para[0])), *((vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::const_iterator*) G__int(libp->para[1]))
, *((vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_489_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >*) G__getstructoffset())->insert(*((vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::iterator*) G__int(libp->para[0])), (vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::size_type) G__int(libp->para[1])
, *(vhtm::TriggerObject*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_489_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_489_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >*) G__getstructoffset())->erase(*((vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_489_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >*) G__getstructoffset())->erase(*((vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::iterator*) G__int(libp->para[0])), *((vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_489_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> > G__TvectorlEvhtmcLcLTriggerObjectcOallocatorlEvhtmcLcLTriggerObjectgRsPgR;
static int G__Dict_489_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >*) (soff+(sizeof(vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >)*i)))->~G__TvectorlEvhtmcLcLTriggerObjectcOallocatorlEvhtmcLcLTriggerObjectgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >*) (soff))->~G__TvectorlEvhtmcLcLTriggerObjectcOallocatorlEvhtmcLcLTriggerObjectgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<string,allocator<string> > */
static int G__Dict_493_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<string,allocator<string> >::reference obj = ((vector<string,allocator<string> >*) G__getstructoffset())->at((vector<string,allocator<string> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_493_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<string,allocator<string> >::const_reference obj = ((const vector<string,allocator<string> >*) G__getstructoffset())->at((vector<string,allocator<string> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_493_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<string,allocator<string> >::iterator* pobj;
         vector<string,allocator<string> >::iterator xobj = ((vector<string,allocator<string> >*) G__getstructoffset())->begin();
         pobj = new vector<string,allocator<string> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_493_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<string,allocator<string> >::iterator* pobj;
         vector<string,allocator<string> >::iterator xobj = ((vector<string,allocator<string> >*) G__getstructoffset())->end();
         pobj = new vector<string,allocator<string> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_493_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<string,allocator<string> >::reverse_iterator* pobj;
         vector<string,allocator<string> >::reverse_iterator xobj = ((vector<string,allocator<string> >*) G__getstructoffset())->rbegin();
         pobj = new vector<string,allocator<string> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_493_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<string,allocator<string> >::reverse_iterator* pobj;
         vector<string,allocator<string> >::reverse_iterator xobj = ((vector<string,allocator<string> >*) G__getstructoffset())->rend();
         pobj = new vector<string,allocator<string> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_493_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<string,allocator<string> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_493_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<string,allocator<string> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_493_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<string,allocator<string> >*) G__getstructoffset())->resize((vector<string,allocator<string> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_493_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<string,allocator<string> >*) G__getstructoffset())->resize((vector<string,allocator<string> >::size_type) G__int(libp->para[0]), *((string*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_493_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<string,allocator<string> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_493_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<string,allocator<string> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_493_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<string,allocator<string> >::reference obj = ((vector<string,allocator<string> >*) G__getstructoffset())->operator[]((vector<string,allocator<string> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_493_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<string,allocator<string> >::const_reference obj = ((const vector<string,allocator<string> >*) G__getstructoffset())->operator[]((vector<string,allocator<string> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_493_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<string,allocator<string> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<string,allocator<string> >[n];
     } else {
       p = new((void*) gvp) vector<string,allocator<string> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<string,allocator<string> >;
     } else {
       p = new((void*) gvp) vector<string,allocator<string> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_493_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<string,allocator<string> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<string,allocator<string> >((vector<string,allocator<string> >::size_type) G__int(libp->para[0]), *(string*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<string,allocator<string> >((vector<string,allocator<string> >::size_type) G__int(libp->para[0]), *(string*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<string,allocator<string> >((vector<string,allocator<string> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<string,allocator<string> >((vector<string,allocator<string> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_493_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<string,allocator<string> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<string,allocator<string> >(*(vector<string,allocator<string> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<string,allocator<string> >(*(vector<string,allocator<string> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_493_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<string,allocator<string> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<string,allocator<string> >(*((vector<string,allocator<string> >::const_iterator*) G__int(libp->para[0])), *((vector<string,allocator<string> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<string,allocator<string> >(*((vector<string,allocator<string> >::const_iterator*) G__int(libp->para[0])), *((vector<string,allocator<string> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_493_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<string,allocator<string> >& obj = ((vector<string,allocator<string> >*) G__getstructoffset())->operator=(*(vector<string,allocator<string> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_493_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<string,allocator<string> >*) G__getstructoffset())->reserve((vector<string,allocator<string> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_493_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((vector<string,allocator<string> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_493_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((vector<string,allocator<string> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_493_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<string,allocator<string> >*) G__getstructoffset())->push_back(*(string*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_493_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<string,allocator<string> >*) G__getstructoffset())->swap(*(vector<string,allocator<string> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_493_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<string,allocator<string> >::iterator* pobj;
         vector<string,allocator<string> >::iterator xobj = ((vector<string,allocator<string> >*) G__getstructoffset())->insert(*((vector<string,allocator<string> >::iterator*) G__int(libp->para[0])), *(string*) libp->para[1].ref);
         pobj = new vector<string,allocator<string> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_493_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<string,allocator<string> >*) G__getstructoffset())->insert(*((vector<string,allocator<string> >::iterator*) G__int(libp->para[0])), *((vector<string,allocator<string> >::const_iterator*) G__int(libp->para[1]))
, *((vector<string,allocator<string> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_493_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<string,allocator<string> >*) G__getstructoffset())->insert(*((vector<string,allocator<string> >::iterator*) G__int(libp->para[0])), (vector<string,allocator<string> >::size_type) G__int(libp->para[1])
, *(string*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_493_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<string,allocator<string> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_493_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<string,allocator<string> >*) G__getstructoffset())->erase(*((vector<string,allocator<string> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_493_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<string,allocator<string> >*) G__getstructoffset())->erase(*((vector<string,allocator<string> >::iterator*) G__int(libp->para[0])), *((vector<string,allocator<string> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dict_493_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<string,allocator<string> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<string,allocator<string> > G__TvectorlEstringcOallocatorlEstringgRsPgR;
static int G__Dict_493_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<string,allocator<string> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<string,allocator<string> >*) (soff+(sizeof(vector<string,allocator<string> >)*i)))->~G__TvectorlEstringcOallocatorlEstringgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<string,allocator<string> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<string,allocator<string> >*) (soff))->~G__TvectorlEstringcOallocatorlEstringgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* vhtm::Candidate */

/* vhtm::Event */

/* vhtm::GenEvent */

/* vhtm::Electron */

/* vhtm::GenParticle */

/* vhtm::GenJet */

/* vhtm::MET */

/* vhtm::Tau */

/* vector<vhtm::Candidate,allocator<vhtm::Candidate> > */

/* vhtm::Muon */

/* map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > > */

/* vhtm::Jet */

/* vhtm::Vertex */

/* vhtm::GenMET */

/* vhtm::TriggerObject */

/* map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > > */

/* pair<string,unsigned int> */

/* vhtm::Photon */

/* vector<vhtm::Event,allocator<vhtm::Event> > */

/* vector<vhtm::GenEvent,allocator<vhtm::GenEvent> > */

/* vector<vhtm::Electron,allocator<vhtm::Electron> > */

/* vector<vhtm::GenParticle,allocator<vhtm::GenParticle> > */

/* vector<vhtm::GenJet,allocator<vhtm::GenJet> > */

/* vector<vhtm::GenMET,allocator<vhtm::GenMET> > */

/* vector<vhtm::MET,allocator<vhtm::MET> > */

/* vector<vhtm::Tau,allocator<vhtm::Tau> > */

/* vector<vhtm::Muon,allocator<vhtm::Muon> > */

/* vector<vhtm::Jet,allocator<vhtm::Jet> > */

/* vector<vhtm::Vertex,allocator<vhtm::Vertex> > */

/* vector<vhtm::Photon,allocator<vhtm::Photon> > */

/* vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> > */

/* vector<string,allocator<string> > */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncDict {
 public:
  G__Sizep2memfuncDict(): p(&G__Sizep2memfuncDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncDict::*p)();
};

size_t G__get_sizep2memfuncDict()
{
  G__Sizep2memfuncDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictLN_vhtmcLcLCandidate))) {
     vhtm::Candidate *G__Lderived;
     G__Lderived=(vhtm::Candidate*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_vhtmcLcLCandidate),G__get_linked_tagnum(&G__DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictLN_vhtmcLcLEvent))) {
     vhtm::Event *G__Lderived;
     G__Lderived=(vhtm::Event*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_vhtmcLcLEvent),G__get_linked_tagnum(&G__DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenEvent))) {
     vhtm::GenEvent *G__Lderived;
     G__Lderived=(vhtm::GenEvent*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenEvent),G__get_linked_tagnum(&G__DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictLN_vhtmcLcLElectron))) {
     vhtm::Electron *G__Lderived;
     G__Lderived=(vhtm::Electron*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_vhtmcLcLElectron),G__get_linked_tagnum(&G__DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenParticle))) {
     vhtm::GenParticle *G__Lderived;
     G__Lderived=(vhtm::GenParticle*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenParticle),G__get_linked_tagnum(&G__DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenJet))) {
     vhtm::GenJet *G__Lderived;
     G__Lderived=(vhtm::GenJet*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenJet),G__get_linked_tagnum(&G__DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictLN_vhtmcLcLMET))) {
     vhtm::MET *G__Lderived;
     G__Lderived=(vhtm::MET*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_vhtmcLcLMET),G__get_linked_tagnum(&G__DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictLN_vhtmcLcLTau))) {
     vhtm::Tau *G__Lderived;
     G__Lderived=(vhtm::Tau*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_vhtmcLcLTau),G__get_linked_tagnum(&G__DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictLN_vhtmcLcLMuon))) {
     vhtm::Muon *G__Lderived;
     G__Lderived=(vhtm::Muon*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_vhtmcLcLMuon),G__get_linked_tagnum(&G__DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictLN_vhtmcLcLJet))) {
     vhtm::Jet *G__Lderived;
     G__Lderived=(vhtm::Jet*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_vhtmcLcLJet),G__get_linked_tagnum(&G__DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictLN_vhtmcLcLVertex))) {
     vhtm::Vertex *G__Lderived;
     G__Lderived=(vhtm::Vertex*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_vhtmcLcLVertex),G__get_linked_tagnum(&G__DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenMET))) {
     vhtm::GenMET *G__Lderived;
     G__Lderived=(vhtm::GenMET*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenMET),G__get_linked_tagnum(&G__DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictLN_vhtmcLcLTriggerObject))) {
     vhtm::TriggerObject *G__Lderived;
     G__Lderived=(vhtm::TriggerObject*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_vhtmcLcLTriggerObject),G__get_linked_tagnum(&G__DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictLN_vhtmcLcLPhoton))) {
     vhtm::Photon *G__Lderived;
     G__Lderived=(vhtm::Photon*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictLN_vhtmcLcLPhoton),G__get_linked_tagnum(&G__DictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableDict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("value_type",100,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",68,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",68,-1,256,G__get_linked_tagnum(&G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",100,-1,1,G__get_linked_tagnum(&G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",100,-1,257,G__get_linked_tagnum(&G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,float>",117,G__get_linked_tagnum(&G__DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,float>",117,G__get_linked_tagnum(&G__DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vhtm::Candidate>",117,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLCandidatecOallocatorlEvhtmcLcLCandidategRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DictLN_vhtmcLcLCandidate),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLCandidatecOallocatorlEvhtmcLcLCandidategRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__DictLN_vhtmcLcLCandidate),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLCandidatecOallocatorlEvhtmcLcLCandidategRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__DictLN_vhtmcLcLCandidate),256,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLCandidatecOallocatorlEvhtmcLcLCandidategRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__DictLN_vhtmcLcLCandidate),1,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLCandidatecOallocatorlEvhtmcLcLCandidategRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__DictLN_vhtmcLcLCandidate),257,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLCandidatecOallocatorlEvhtmcLcLCandidategRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLCandidatecOallocatorlEvhtmcLcLCandidategRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLCandidatecOallocatorlEvhtmcLcLCandidategRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLCandidatecOallocatorlEvhtmcLcLCandidategRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLCandidatecOallocatorlEvhtmcLcLCandidategRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLCandidatecOallocatorlEvhtmcLcLCandidategRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLCandidatecOallocatorlEvhtmcLcLCandidategRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLCandidatecOallocatorlEvhtmcLcLCandidategRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLCandidatecOallocatorlEvhtmcLcLCandidategRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLCandidatecOallocatorlEvhtmcLcLCandidategRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLCandidatecOallocatorlEvhtmcLcLCandidategRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLCandidatecOallocatorlEvhtmcLcLCandidategRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLCandidatecOallocatorlEvhtmcLcLCandidategRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<double,std::vector<double> >",117,G__get_linked_tagnum(&G__DictLN_maplEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_type",100,-1,0,G__get_linked_tagnum(&G__DictLN_maplEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("mapped_type",117,G__get_linked_tagnum(&G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,G__get_linked_tagnum(&G__DictLN_maplEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DictLN_pairlEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgR),0,G__get_linked_tagnum(&G__DictLN_maplEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_compare",117,G__get_linked_tagnum(&G__DictLN_lesslEdoublegR),0,G__get_linked_tagnum(&G__DictLN_maplEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("allocator_type",117,G__get_linked_tagnum(&G__DictLN_allocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,G__get_linked_tagnum(&G__DictLN_maplEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DictLN_maplEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DictLN_maplEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DictLN_maplEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DictLN_maplEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_maplEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRcLcLreverse_iterator),256,G__get_linked_tagnum(&G__DictLN_maplEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<double,vector<double,allocator<double> > >",117,G__get_linked_tagnum(&G__DictLN_maplEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<double,vector<double,allocator<double> >,less<double> >",117,G__get_linked_tagnum(&G__DictLN_maplEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,unsigned int>",117,G__get_linked_tagnum(&G__DictLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,unsigned int>",117,G__get_linked_tagnum(&G__DictLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_type",117,G__get_linked_tagnum(&G__DictLN_string),0,G__get_linked_tagnum(&G__DictLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("mapped_type",104,-1,0,G__get_linked_tagnum(&G__DictLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DictLN_pairlEstringcOunsignedsPintgR),0,G__get_linked_tagnum(&G__DictLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_compare",117,G__get_linked_tagnum(&G__DictLN_lesslEstringgR),0,G__get_linked_tagnum(&G__DictLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("allocator_type",117,G__get_linked_tagnum(&G__DictLN_allocatorlEpairlEconstsPstringcOunsignedsPintgRsPgR),0,G__get_linked_tagnum(&G__DictLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DictLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DictLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DictLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DictLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgRcLcLreverse_iterator),256,G__get_linked_tagnum(&G__DictLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,unsigned int>",117,G__get_linked_tagnum(&G__DictLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,unsigned int,less<string> >",117,G__get_linked_tagnum(&G__DictLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vhtm::Event>",117,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLEventcOallocatorlEvhtmcLcLEventgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DictLN_vhtmcLcLEvent),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLEventcOallocatorlEvhtmcLcLEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__DictLN_vhtmcLcLEvent),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLEventcOallocatorlEvhtmcLcLEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__DictLN_vhtmcLcLEvent),256,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLEventcOallocatorlEvhtmcLcLEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__DictLN_vhtmcLcLEvent),1,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLEventcOallocatorlEvhtmcLcLEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__DictLN_vhtmcLcLEvent),257,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLEventcOallocatorlEvhtmcLcLEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLEventcOallocatorlEvhtmcLcLEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLEventcOallocatorlEvhtmcLcLEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLEventcOallocatorlEvhtmcLcLEventgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLEventcOallocatorlEvhtmcLcLEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLEventcOallocatorlEvhtmcLcLEventgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLEventcOallocatorlEvhtmcLcLEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLEventcOallocatorlEvhtmcLcLEventgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLEventcOallocatorlEvhtmcLcLEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLEventcOallocatorlEvhtmcLcLEventgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLEventcOallocatorlEvhtmcLcLEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLEventcOallocatorlEvhtmcLcLEventgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLEventcOallocatorlEvhtmcLcLEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vhtm::GenEvent>",117,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenEventcOallocatorlEvhtmcLcLGenEventgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenEvent),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenEventcOallocatorlEvhtmcLcLGenEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenEvent),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenEventcOallocatorlEvhtmcLcLGenEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenEvent),256,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenEventcOallocatorlEvhtmcLcLGenEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenEvent),1,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenEventcOallocatorlEvhtmcLcLGenEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenEvent),257,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenEventcOallocatorlEvhtmcLcLGenEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenEventcOallocatorlEvhtmcLcLGenEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenEventcOallocatorlEvhtmcLcLGenEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenEventcOallocatorlEvhtmcLcLGenEventgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenEventcOallocatorlEvhtmcLcLGenEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLGenEventcOallocatorlEvhtmcLcLGenEventgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenEventcOallocatorlEvhtmcLcLGenEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLGenEventcOallocatorlEvhtmcLcLGenEventgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenEventcOallocatorlEvhtmcLcLGenEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLGenEventcOallocatorlEvhtmcLcLGenEventgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenEventcOallocatorlEvhtmcLcLGenEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLGenEventcOallocatorlEvhtmcLcLGenEventgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenEventcOallocatorlEvhtmcLcLGenEventgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vhtm::Electron>",117,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLElectroncOallocatorlEvhtmcLcLElectrongRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DictLN_vhtmcLcLElectron),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLElectroncOallocatorlEvhtmcLcLElectrongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__DictLN_vhtmcLcLElectron),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLElectroncOallocatorlEvhtmcLcLElectrongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__DictLN_vhtmcLcLElectron),256,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLElectroncOallocatorlEvhtmcLcLElectrongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__DictLN_vhtmcLcLElectron),1,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLElectroncOallocatorlEvhtmcLcLElectrongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__DictLN_vhtmcLcLElectron),257,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLElectroncOallocatorlEvhtmcLcLElectrongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLElectroncOallocatorlEvhtmcLcLElectrongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLElectroncOallocatorlEvhtmcLcLElectrongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLElectroncOallocatorlEvhtmcLcLElectrongRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLElectroncOallocatorlEvhtmcLcLElectrongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLElectroncOallocatorlEvhtmcLcLElectrongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLElectroncOallocatorlEvhtmcLcLElectrongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLElectroncOallocatorlEvhtmcLcLElectrongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLElectroncOallocatorlEvhtmcLcLElectrongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLElectroncOallocatorlEvhtmcLcLElectrongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLElectroncOallocatorlEvhtmcLcLElectrongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLElectroncOallocatorlEvhtmcLcLElectrongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLElectroncOallocatorlEvhtmcLcLElectrongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vhtm::GenParticle>",117,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenParticlecOallocatorlEvhtmcLcLGenParticlegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenParticle),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenParticlecOallocatorlEvhtmcLcLGenParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenParticle),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenParticlecOallocatorlEvhtmcLcLGenParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenParticle),256,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenParticlecOallocatorlEvhtmcLcLGenParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenParticle),1,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenParticlecOallocatorlEvhtmcLcLGenParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenParticle),257,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenParticlecOallocatorlEvhtmcLcLGenParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenParticlecOallocatorlEvhtmcLcLGenParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenParticlecOallocatorlEvhtmcLcLGenParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenParticlecOallocatorlEvhtmcLcLGenParticlegRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenParticlecOallocatorlEvhtmcLcLGenParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLGenParticlecOallocatorlEvhtmcLcLGenParticlegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenParticlecOallocatorlEvhtmcLcLGenParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLGenParticlecOallocatorlEvhtmcLcLGenParticlegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenParticlecOallocatorlEvhtmcLcLGenParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLGenParticlecOallocatorlEvhtmcLcLGenParticlegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenParticlecOallocatorlEvhtmcLcLGenParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLGenParticlecOallocatorlEvhtmcLcLGenParticlegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenParticlecOallocatorlEvhtmcLcLGenParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vhtm::GenJet>",117,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenJetcOallocatorlEvhtmcLcLGenJetgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenJet),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenJetcOallocatorlEvhtmcLcLGenJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenJet),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenJetcOallocatorlEvhtmcLcLGenJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenJet),256,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenJetcOallocatorlEvhtmcLcLGenJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenJet),1,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenJetcOallocatorlEvhtmcLcLGenJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenJet),257,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenJetcOallocatorlEvhtmcLcLGenJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenJetcOallocatorlEvhtmcLcLGenJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenJetcOallocatorlEvhtmcLcLGenJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenJetcOallocatorlEvhtmcLcLGenJetgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenJetcOallocatorlEvhtmcLcLGenJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLGenJetcOallocatorlEvhtmcLcLGenJetgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenJetcOallocatorlEvhtmcLcLGenJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLGenJetcOallocatorlEvhtmcLcLGenJetgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenJetcOallocatorlEvhtmcLcLGenJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLGenJetcOallocatorlEvhtmcLcLGenJetgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenJetcOallocatorlEvhtmcLcLGenJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLGenJetcOallocatorlEvhtmcLcLGenJetgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenJetcOallocatorlEvhtmcLcLGenJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vhtm::GenMET>",117,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenMETcOallocatorlEvhtmcLcLGenMETgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenMET),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenMETcOallocatorlEvhtmcLcLGenMETgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenMET),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenMETcOallocatorlEvhtmcLcLGenMETgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenMET),256,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenMETcOallocatorlEvhtmcLcLGenMETgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenMET),1,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenMETcOallocatorlEvhtmcLcLGenMETgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenMET),257,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenMETcOallocatorlEvhtmcLcLGenMETgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenMETcOallocatorlEvhtmcLcLGenMETgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenMETcOallocatorlEvhtmcLcLGenMETgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenMETcOallocatorlEvhtmcLcLGenMETgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenMETcOallocatorlEvhtmcLcLGenMETgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLGenMETcOallocatorlEvhtmcLcLGenMETgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenMETcOallocatorlEvhtmcLcLGenMETgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLGenMETcOallocatorlEvhtmcLcLGenMETgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenMETcOallocatorlEvhtmcLcLGenMETgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLGenMETcOallocatorlEvhtmcLcLGenMETgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenMETcOallocatorlEvhtmcLcLGenMETgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLGenMETcOallocatorlEvhtmcLcLGenMETgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenMETcOallocatorlEvhtmcLcLGenMETgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vhtm::MET>",117,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLMETcOallocatorlEvhtmcLcLMETgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DictLN_vhtmcLcLMET),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLMETcOallocatorlEvhtmcLcLMETgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__DictLN_vhtmcLcLMET),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLMETcOallocatorlEvhtmcLcLMETgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__DictLN_vhtmcLcLMET),256,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLMETcOallocatorlEvhtmcLcLMETgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__DictLN_vhtmcLcLMET),1,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLMETcOallocatorlEvhtmcLcLMETgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__DictLN_vhtmcLcLMET),257,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLMETcOallocatorlEvhtmcLcLMETgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLMETcOallocatorlEvhtmcLcLMETgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLMETcOallocatorlEvhtmcLcLMETgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLMETcOallocatorlEvhtmcLcLMETgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLMETcOallocatorlEvhtmcLcLMETgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLMETcOallocatorlEvhtmcLcLMETgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLMETcOallocatorlEvhtmcLcLMETgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLMETcOallocatorlEvhtmcLcLMETgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLMETcOallocatorlEvhtmcLcLMETgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLMETcOallocatorlEvhtmcLcLMETgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLMETcOallocatorlEvhtmcLcLMETgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLMETcOallocatorlEvhtmcLcLMETgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLMETcOallocatorlEvhtmcLcLMETgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vhtm::Tau>",117,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLTaucOallocatorlEvhtmcLcLTaugRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DictLN_vhtmcLcLTau),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLTaucOallocatorlEvhtmcLcLTaugRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__DictLN_vhtmcLcLTau),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLTaucOallocatorlEvhtmcLcLTaugRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__DictLN_vhtmcLcLTau),256,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLTaucOallocatorlEvhtmcLcLTaugRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__DictLN_vhtmcLcLTau),1,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLTaucOallocatorlEvhtmcLcLTaugRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__DictLN_vhtmcLcLTau),257,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLTaucOallocatorlEvhtmcLcLTaugRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLTaucOallocatorlEvhtmcLcLTaugRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLTaucOallocatorlEvhtmcLcLTaugRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLTaucOallocatorlEvhtmcLcLTaugRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLTaucOallocatorlEvhtmcLcLTaugRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLTaucOallocatorlEvhtmcLcLTaugRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLTaucOallocatorlEvhtmcLcLTaugRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLTaucOallocatorlEvhtmcLcLTaugRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLTaucOallocatorlEvhtmcLcLTaugRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLTaucOallocatorlEvhtmcLcLTaugRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLTaucOallocatorlEvhtmcLcLTaugRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLTaucOallocatorlEvhtmcLcLTaugRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLTaucOallocatorlEvhtmcLcLTaugRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vhtm::Muon>",117,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLMuoncOallocatorlEvhtmcLcLMuongRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DictLN_vhtmcLcLMuon),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLMuoncOallocatorlEvhtmcLcLMuongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__DictLN_vhtmcLcLMuon),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLMuoncOallocatorlEvhtmcLcLMuongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__DictLN_vhtmcLcLMuon),256,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLMuoncOallocatorlEvhtmcLcLMuongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__DictLN_vhtmcLcLMuon),1,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLMuoncOallocatorlEvhtmcLcLMuongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__DictLN_vhtmcLcLMuon),257,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLMuoncOallocatorlEvhtmcLcLMuongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLMuoncOallocatorlEvhtmcLcLMuongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLMuoncOallocatorlEvhtmcLcLMuongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLMuoncOallocatorlEvhtmcLcLMuongRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLMuoncOallocatorlEvhtmcLcLMuongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLMuoncOallocatorlEvhtmcLcLMuongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLMuoncOallocatorlEvhtmcLcLMuongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLMuoncOallocatorlEvhtmcLcLMuongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLMuoncOallocatorlEvhtmcLcLMuongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLMuoncOallocatorlEvhtmcLcLMuongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLMuoncOallocatorlEvhtmcLcLMuongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLMuoncOallocatorlEvhtmcLcLMuongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLMuoncOallocatorlEvhtmcLcLMuongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vhtm::Jet>",117,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLJetcOallocatorlEvhtmcLcLJetgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DictLN_vhtmcLcLJet),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLJetcOallocatorlEvhtmcLcLJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__DictLN_vhtmcLcLJet),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLJetcOallocatorlEvhtmcLcLJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__DictLN_vhtmcLcLJet),256,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLJetcOallocatorlEvhtmcLcLJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__DictLN_vhtmcLcLJet),1,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLJetcOallocatorlEvhtmcLcLJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__DictLN_vhtmcLcLJet),257,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLJetcOallocatorlEvhtmcLcLJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLJetcOallocatorlEvhtmcLcLJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLJetcOallocatorlEvhtmcLcLJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLJetcOallocatorlEvhtmcLcLJetgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLJetcOallocatorlEvhtmcLcLJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLJetcOallocatorlEvhtmcLcLJetgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLJetcOallocatorlEvhtmcLcLJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLJetcOallocatorlEvhtmcLcLJetgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLJetcOallocatorlEvhtmcLcLJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLJetcOallocatorlEvhtmcLcLJetgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLJetcOallocatorlEvhtmcLcLJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLJetcOallocatorlEvhtmcLcLJetgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLJetcOallocatorlEvhtmcLcLJetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vhtm::Vertex>",117,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLVertexcOallocatorlEvhtmcLcLVertexgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DictLN_vhtmcLcLVertex),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLVertexcOallocatorlEvhtmcLcLVertexgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__DictLN_vhtmcLcLVertex),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLVertexcOallocatorlEvhtmcLcLVertexgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__DictLN_vhtmcLcLVertex),256,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLVertexcOallocatorlEvhtmcLcLVertexgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__DictLN_vhtmcLcLVertex),1,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLVertexcOallocatorlEvhtmcLcLVertexgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__DictLN_vhtmcLcLVertex),257,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLVertexcOallocatorlEvhtmcLcLVertexgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLVertexcOallocatorlEvhtmcLcLVertexgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLVertexcOallocatorlEvhtmcLcLVertexgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLVertexcOallocatorlEvhtmcLcLVertexgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLVertexcOallocatorlEvhtmcLcLVertexgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLVertexcOallocatorlEvhtmcLcLVertexgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLVertexcOallocatorlEvhtmcLcLVertexgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLVertexcOallocatorlEvhtmcLcLVertexgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLVertexcOallocatorlEvhtmcLcLVertexgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLVertexcOallocatorlEvhtmcLcLVertexgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLVertexcOallocatorlEvhtmcLcLVertexgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLVertexcOallocatorlEvhtmcLcLVertexgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLVertexcOallocatorlEvhtmcLcLVertexgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vhtm::Photon>",117,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLPhotoncOallocatorlEvhtmcLcLPhotongRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DictLN_vhtmcLcLPhoton),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLPhotoncOallocatorlEvhtmcLcLPhotongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__DictLN_vhtmcLcLPhoton),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLPhotoncOallocatorlEvhtmcLcLPhotongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__DictLN_vhtmcLcLPhoton),256,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLPhotoncOallocatorlEvhtmcLcLPhotongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__DictLN_vhtmcLcLPhoton),1,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLPhotoncOallocatorlEvhtmcLcLPhotongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__DictLN_vhtmcLcLPhoton),257,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLPhotoncOallocatorlEvhtmcLcLPhotongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLPhotoncOallocatorlEvhtmcLcLPhotongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLPhotoncOallocatorlEvhtmcLcLPhotongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLPhotoncOallocatorlEvhtmcLcLPhotongRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLPhotoncOallocatorlEvhtmcLcLPhotongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLPhotoncOallocatorlEvhtmcLcLPhotongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLPhotoncOallocatorlEvhtmcLcLPhotongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLPhotoncOallocatorlEvhtmcLcLPhotongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLPhotoncOallocatorlEvhtmcLcLPhotongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLPhotoncOallocatorlEvhtmcLcLPhotongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLPhotoncOallocatorlEvhtmcLcLPhotongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLPhotoncOallocatorlEvhtmcLcLPhotongRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLPhotoncOallocatorlEvhtmcLcLPhotongRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vhtm::TriggerObject>",117,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLTriggerObjectcOallocatorlEvhtmcLcLTriggerObjectgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DictLN_vhtmcLcLTriggerObject),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLTriggerObjectcOallocatorlEvhtmcLcLTriggerObjectgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__DictLN_vhtmcLcLTriggerObject),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLTriggerObjectcOallocatorlEvhtmcLcLTriggerObjectgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__DictLN_vhtmcLcLTriggerObject),256,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLTriggerObjectcOallocatorlEvhtmcLcLTriggerObjectgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__DictLN_vhtmcLcLTriggerObject),1,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLTriggerObjectcOallocatorlEvhtmcLcLTriggerObjectgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__DictLN_vhtmcLcLTriggerObject),257,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLTriggerObjectcOallocatorlEvhtmcLcLTriggerObjectgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLTriggerObjectcOallocatorlEvhtmcLcLTriggerObjectgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLTriggerObjectcOallocatorlEvhtmcLcLTriggerObjectgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLTriggerObjectcOallocatorlEvhtmcLcLTriggerObjectgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLTriggerObjectcOallocatorlEvhtmcLcLTriggerObjectgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLTriggerObjectcOallocatorlEvhtmcLcLTriggerObjectgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLTriggerObjectcOallocatorlEvhtmcLcLTriggerObjectgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLTriggerObjectcOallocatorlEvhtmcLcLTriggerObjectgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLTriggerObjectcOallocatorlEvhtmcLcLTriggerObjectgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLTriggerObjectcOallocatorlEvhtmcLcLTriggerObjectgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLTriggerObjectcOallocatorlEvhtmcLcLTriggerObjectgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLTriggerObjectcOallocatorlEvhtmcLcLTriggerObjectgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLTriggerObjectcOallocatorlEvhtmcLcLTriggerObjectgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DictLN_string),0,G__get_linked_tagnum(&G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__DictLN_string),0,G__get_linked_tagnum(&G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__DictLN_string),256,G__get_linked_tagnum(&G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__DictLN_string),1,G__get_linked_tagnum(&G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__DictLN_string),257,G__get_linked_tagnum(&G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DictLN_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<std::string,unsigned int>",117,G__get_linked_tagnum(&G__DictLN_pairlEstringcOunsignedsPintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<string,unsigned int>",117,G__get_linked_tagnum(&G__DictLN_pairlEstringcOunsignedsPintgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* vhtm::Candidate */
static void G__setup_memvarvhtmcLcLCandidate(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_vhtmcLcLCandidate));
   { vhtm::Candidate *p; p=(vhtm::Candidate*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->pt)-(long)(p)),102,0,0,-1,-1,-1,1,"pt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eta)-(long)(p)),102,0,0,-1,-1,-1,1,"eta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->phi)-(long)(p)),102,0,0,-1,-1,-1,1,"phi=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vhtm::Event */
static void G__setup_memvarvhtmcLcLEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_vhtmcLcLEvent));
   { vhtm::Event *p; p=(vhtm::Event*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),104,0,0,-1,-1,-1,1,"run=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->event)-(long)(p)),104,0,0,-1,-1,-1,1,"event=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->lumis)-(long)(p)),104,0,0,-1,-1,-1,1,"lumis=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bunch)-(long)(p)),104,0,0,-1,-1,-1,1,"bunch=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->orbit)-(long)(p)),104,0,0,-1,-1,-1,1,"orbit=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->time)-(long)(p)),100,0,0,-1,-1,-1,1,"time=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isdata)-(long)(p)),103,0,0,-1,-1,-1,1,"isdata=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isPhysDeclared)-(long)(p)),103,0,0,-1,-1,-1,1,"isPhysDeclared=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isBPTX0)-(long)(p)),103,0,0,-1,-1,-1,1,"isBPTX0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isBSCMinBias)-(long)(p)),103,0,0,-1,-1,-1,1,"isBSCMinBias=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isBSCBeamHalo)-(long)(p)),103,0,0,-1,-1,-1,1,"isBSCBeamHalo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isPrimaryVertex)-(long)(p)),103,0,0,-1,-1,-1,1,"isPrimaryVertex=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->passHBHENoiseFilter)-(long)(p)),103,0,0,-1,-1,-1,1,"passHBHENoiseFilter=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->rho)-(long)(p)),100,0,0,-1,-1,-1,1,"rho=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->rhoNeutral)-(long)(p)),100,0,0,-1,-1,-1,1,"rhoNeutral=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nvtx)-(long)(p)),105,0,0,-1,-1,-1,1,"nvtx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nPU)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"nPU=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->bunchCrossing)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"bunchCrossing=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trueNInt)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"trueNInt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vhtm::GenEvent */
static void G__setup_memvarvhtmcLcLGenEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenEvent));
   { vhtm::GenEvent *p; p=(vhtm::GenEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->processID)-(long)(p)),104,0,0,-1,-1,-1,1,"processID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ptHat)-(long)(p)),100,0,0,-1,-1,-1,1,"ptHat=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pdfWeights)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"pdfWeights=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vhtm::Electron */
static void G__setup_memvarvhtmcLcLElectron(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_vhtmcLcLElectron));
   { vhtm::Electron *p; p=(vhtm::Electron*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->eta)-(long)(p)),100,0,0,-1,-1,-1,1,"eta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->phi)-(long)(p)),100,0,0,-1,-1,-1,1,"phi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pt)-(long)(p)),100,0,0,-1,-1,-1,1,"pt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ecalDriven)-(long)(p)),103,0,0,-1,-1,-1,1,"ecalDriven=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hasGsfTrack)-(long)(p)),103,0,0,-1,-1,-1,1,"hasGsfTrack=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trackPt)-(long)(p)),100,0,0,-1,-1,-1,1,"trackPt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->energy)-(long)(p)),100,0,0,-1,-1,-1,1,"energy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->caloEnergy)-(long)(p)),100,0,0,-1,-1,-1,1,"caloEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->charge)-(long)(p)),105,0,0,-1,-1,-1,1,"charge=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pixHits)-(long)(p)),105,0,0,-1,-1,-1,1,"pixHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trkHits)-(long)(p)),105,0,0,-1,-1,-1,1,"trkHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nValidHits)-(long)(p)),105,0,0,-1,-1,-1,1,"nValidHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trkD0)-(long)(p)),100,0,0,-1,-1,-1,1,"trkD0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trkDz)-(long)(p)),100,0,0,-1,-1,-1,1,"trkDz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hoe)-(long)(p)),100,0,0,-1,-1,-1,1,"hoe=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eop)-(long)(p)),100,0,0,-1,-1,-1,1,"eop=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sigmaEtaEta)-(long)(p)),100,0,0,-1,-1,-1,1,"sigmaEtaEta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sigmaIEtaIEta)-(long)(p)),100,0,0,-1,-1,-1,1,"sigmaIEtaIEta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->deltaPhiTrkSC)-(long)(p)),100,0,0,-1,-1,-1,1,"deltaPhiTrkSC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->deltaEtaTrkSC)-(long)(p)),100,0,0,-1,-1,-1,1,"deltaEtaTrkSC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->classif)-(long)(p)),105,0,0,-1,-1,-1,1,"classif=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vx)-(long)(p)),100,0,0,-1,-1,-1,1,"vx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vy)-(long)(p)),100,0,0,-1,-1,-1,1,"vy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vz)-(long)(p)),100,0,0,-1,-1,-1,1,"vz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->scEn)-(long)(p)),100,0,0,-1,-1,-1,1,"scEn=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->scEta)-(long)(p)),100,0,0,-1,-1,-1,1,"scEta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->scPhi)-(long)(p)),100,0,0,-1,-1,-1,1,"scPhi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->scET)-(long)(p)),100,0,0,-1,-1,-1,1,"scET=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->scRawEnergy)-(long)(p)),100,0,0,-1,-1,-1,1,"scRawEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dxyPV)-(long)(p)),100,0,0,-1,-1,-1,1,"dxyPV=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dzPV)-(long)(p)),100,0,0,-1,-1,-1,1,"dzPV=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vtxDist3D)-(long)(p)),100,0,0,-1,-1,-1,1,"vtxDist3D=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vtxIndex)-(long)(p)),105,0,0,-1,-1,-1,1,"vtxIndex=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vtxDistZ)-(long)(p)),100,0,0,-1,-1,-1,1,"vtxDistZ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->relIso)-(long)(p)),102,0,0,-1,-1,-1,1,"relIso=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pfRelIso)-(long)(p)),102,0,0,-1,-1,-1,1,"pfRelIso=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->chargedHadronIso)-(long)(p)),102,0,0,-1,-1,-1,1,"chargedHadronIso=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->neutralHadronIso)-(long)(p)),102,0,0,-1,-1,-1,1,"neutralHadronIso=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->photonIso)-(long)(p)),102,0,0,-1,-1,-1,1,"photonIso=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sumChargedHadronPt)-(long)(p)),102,0,0,-1,-1,-1,1,"sumChargedHadronPt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sumPUPt)-(long)(p)),102,0,0,-1,-1,-1,1,"sumPUPt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->missingHits)-(long)(p)),105,0,0,-1,-1,-1,1,"missingHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dB)-(long)(p)),100,0,0,-1,-1,-1,1,"dB=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nBrems)-(long)(p)),105,0,0,-1,-1,-1,1,"nBrems=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fbrem)-(long)(p)),102,0,0,-1,-1,-1,1,"fbrem=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hasMatchedConv)-(long)(p)),102,0,0,-1,-1,-1,1,"hasMatchedConv=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mvaPreselection)-(long)(p)),103,0,0,-1,-1,-1,1,"mvaPreselection=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isTriggerElectron)-(long)(p)),103,0,0,-1,-1,-1,1,"isTriggerElectron=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fidFlag)-(long)(p)),105,0,0,-1,-1,-1,1,"fidFlag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->idmap)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR),G__defined_typename("map<std::string,float>"),-1,1,"idmap=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->selbit)-(long)(p)),105,0,0,-1,-1,-1,1,"selbit=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vhtm::GenParticle */
static void G__setup_memvarvhtmcLcLGenParticle(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenParticle));
   { vhtm::GenParticle *p; p=(vhtm::GenParticle*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->eta)-(long)(p)),100,0,0,-1,-1,-1,1,"eta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->phi)-(long)(p)),100,0,0,-1,-1,-1,1,"phi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->p)-(long)(p)),100,0,0,-1,-1,-1,1,"p=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->px)-(long)(p)),100,0,0,-1,-1,-1,1,"px=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->py)-(long)(p)),100,0,0,-1,-1,-1,1,"py=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pz)-(long)(p)),100,0,0,-1,-1,-1,1,"pz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pt)-(long)(p)),100,0,0,-1,-1,-1,1,"pt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->energy)-(long)(p)),100,0,0,-1,-1,-1,1,"energy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pdgId)-(long)(p)),105,0,0,-1,-1,-1,1,"pdgId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vx)-(long)(p)),100,0,0,-1,-1,-1,1,"vx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vy)-(long)(p)),100,0,0,-1,-1,-1,1,"vy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vz)-(long)(p)),100,0,0,-1,-1,-1,1,"vz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->status)-(long)(p)),105,0,0,-1,-1,-1,1,"status=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->charge)-(long)(p)),100,0,0,-1,-1,-1,1,"charge=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->numDaught)-(long)(p)),105,0,0,-1,-1,-1,1,"numDaught=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->numMother)-(long)(p)),105,0,0,-1,-1,-1,1,"numMother=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->motherIndex)-(long)(p)),105,0,0,-1,-1,-1,1,"motherIndex=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->motherIndices)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"motherIndices=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->daughtIndices)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"daughtIndices=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vhtm::GenJet */
static void G__setup_memvarvhtmcLcLGenJet(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenJet));
   { vhtm::GenJet *p; p=(vhtm::GenJet*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->eta)-(long)(p)),100,0,0,-1,-1,-1,1,"eta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->phi)-(long)(p)),100,0,0,-1,-1,-1,1,"phi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->p)-(long)(p)),100,0,0,-1,-1,-1,1,"p=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pt)-(long)(p)),100,0,0,-1,-1,-1,1,"pt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->energy)-(long)(p)),100,0,0,-1,-1,-1,1,"energy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->emf)-(long)(p)),100,0,0,-1,-1,-1,1,"emf=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hadf)-(long)(p)),100,0,0,-1,-1,-1,1,"hadf=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vhtm::MET */
static void G__setup_memvarvhtmcLcLMET(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_vhtmcLcLMET));
   { vhtm::MET *p; p=(vhtm::MET*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->met)-(long)(p)),100,0,0,-1,-1,-1,1,"met=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->metphi)-(long)(p)),100,0,0,-1,-1,-1,1,"metphi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sumet)-(long)(p)),100,0,0,-1,-1,-1,1,"sumet=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->metuncorr)-(long)(p)),100,0,0,-1,-1,-1,1,"metuncorr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->metphiuncorr)-(long)(p)),100,0,0,-1,-1,-1,1,"metphiuncorr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sumetuncorr)-(long)(p)),100,0,0,-1,-1,-1,1,"sumetuncorr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vhtm::Tau */
static void G__setup_memvarvhtmcLcLTau(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_vhtmcLcLTau));
   { vhtm::Tau *p; p=(vhtm::Tau*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->eta)-(long)(p)),100,0,0,-1,-1,-1,1,"eta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->phi)-(long)(p)),100,0,0,-1,-1,-1,1,"phi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pt)-(long)(p)),100,0,0,-1,-1,-1,1,"pt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->energy)-(long)(p)),100,0,0,-1,-1,-1,1,"energy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->charge)-(long)(p)),105,0,0,-1,-1,-1,1,"charge=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->mass)-(long)(p)),100,0,0,-1,-1,-1,1,"mass=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dxyPV)-(long)(p)),100,0,0,-1,-1,-1,1,"dxyPV=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dzPV)-(long)(p)),100,0,0,-1,-1,-1,1,"dzPV=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vtxIndex)-(long)(p)),105,0,0,-1,-1,-1,1,"vtxIndex=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vtxDxy)-(long)(p)),100,0,0,-1,-1,-1,1,"vtxDxy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vtxDz)-(long)(p)),100,0,0,-1,-1,-1,1,"vtxDz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->leadChargedParticlePt)-(long)(p)),100,0,0,-1,-1,-1,1,"leadChargedParticlePt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->leadNeutralParticlePt)-(long)(p)),100,0,0,-1,-1,-1,1,"leadNeutralParticlePt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->leadParticlePt)-(long)(p)),100,0,0,-1,-1,-1,1,"leadParticlePt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sigChHadList)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLCandidatecOallocatorlEvhtmcLcLCandidategRsPgR),G__defined_typename("vector<vhtm::Candidate>"),-1,1,"sigChHadList=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sigNeHadList)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLCandidatecOallocatorlEvhtmcLcLCandidategRsPgR),G__defined_typename("vector<vhtm::Candidate>"),-1,1,"sigNeHadList=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sigGammaList)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLCandidatecOallocatorlEvhtmcLcLCandidategRsPgR),G__defined_typename("vector<vhtm::Candidate>"),-1,1,"sigGammaList=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isoChHadList)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLCandidatecOallocatorlEvhtmcLcLCandidategRsPgR),G__defined_typename("vector<vhtm::Candidate>"),-1,1,"isoChHadList=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isoNeHadList)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLCandidatecOallocatorlEvhtmcLcLCandidategRsPgR),G__defined_typename("vector<vhtm::Candidate>"),-1,1,"isoNeHadList=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isoGammaList)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLCandidatecOallocatorlEvhtmcLcLCandidategRsPgR),G__defined_typename("vector<vhtm::Candidate>"),-1,1,"isoGammaList=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ptSumChargedHadronsIsoCone)-(long)(p)),102,0,0,-1,-1,-1,1,"ptSumChargedHadronsIsoCone=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ptSumNeutralHadronsIsoCone)-(long)(p)),102,0,0,-1,-1,-1,1,"ptSumNeutralHadronsIsoCone=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ptSumPhotonsIsoCone)-(long)(p)),102,0,0,-1,-1,-1,1,"ptSumPhotonsIsoCone=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->decayModeFinding)-(long)(p)),102,0,0,-1,-1,-1,1,"decayModeFinding=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->decayModeFindingNewDMs)-(long)(p)),102,0,0,-1,-1,-1,1,"decayModeFindingNewDMs=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->decayModeFindingOldDMs)-(long)(p)),102,0,0,-1,-1,-1,1,"decayModeFindingOldDMs=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->againstMuonLoose)-(long)(p)),102,0,0,-1,-1,-1,1,"againstMuonLoose=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->againstMuonMedium)-(long)(p)),102,0,0,-1,-1,-1,1,"againstMuonMedium=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->againstMuonTight)-(long)(p)),102,0,0,-1,-1,-1,1,"againstMuonTight=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->againstMuonLoose3)-(long)(p)),102,0,0,-1,-1,-1,1,"againstMuonLoose3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->againstMuonTight3)-(long)(p)),102,0,0,-1,-1,-1,1,"againstMuonTight3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->againstElectronLoose)-(long)(p)),102,0,0,-1,-1,-1,1,"againstElectronLoose=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->againstElectronMedium)-(long)(p)),102,0,0,-1,-1,-1,1,"againstElectronMedium=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->againstElectronTight)-(long)(p)),102,0,0,-1,-1,-1,1,"againstElectronTight=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->againstElectronLooseMVA5)-(long)(p)),102,0,0,-1,-1,-1,1,"againstElectronLooseMVA5=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->againstElectronMediumMVA5)-(long)(p)),102,0,0,-1,-1,-1,1,"againstElectronMediumMVA5=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->againstElectronTightMVA5)-(long)(p)),102,0,0,-1,-1,-1,1,"againstElectronTightMVA5=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->byLooseCombinedIsolationDeltaBetaCorr3Hits)-(long)(p)),102,0,0,-1,-1,-1,1,"byLooseCombinedIsolationDeltaBetaCorr3Hits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->byMediumCombinedIsolationDeltaBetaCorr3Hits)-(long)(p)),102,0,0,-1,-1,-1,1,"byMediumCombinedIsolationDeltaBetaCorr3Hits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->byTightCombinedIsolationDeltaBetaCorr3Hits)-(long)(p)),102,0,0,-1,-1,-1,1,"byTightCombinedIsolationDeltaBetaCorr3Hits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->byCombinedIsolationDeltaBetaCorrRaw3Hits)-(long)(p)),102,0,0,-1,-1,-1,1,"byCombinedIsolationDeltaBetaCorrRaw3Hits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->chargedIsoPtSum)-(long)(p)),102,0,0,-1,-1,-1,1,"chargedIsoPtSum=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->neutralIsoPtSum)-(long)(p)),102,0,0,-1,-1,-1,1,"neutralIsoPtSum=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->puCorrPtSum)-(long)(p)),102,0,0,-1,-1,-1,1,"puCorrPtSum=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->jetPt)-(long)(p)),100,0,0,-1,-1,-1,1,"jetPt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->jetEta)-(long)(p)),100,0,0,-1,-1,-1,1,"jetEta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->jetPhi)-(long)(p)),100,0,0,-1,-1,-1,1,"jetPhi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->emFraction)-(long)(p)),102,0,0,-1,-1,-1,1,"emFraction=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vx)-(long)(p)),100,0,0,-1,-1,-1,1,"vx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vy)-(long)(p)),100,0,0,-1,-1,-1,1,"vy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vz)-(long)(p)),100,0,0,-1,-1,-1,1,"vz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->zvertex)-(long)(p)),100,0,0,-1,-1,-1,1,"zvertex=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dxySig)-(long)(p)),100,0,0,-1,-1,-1,1,"dxySig=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->selbit)-(long)(p)),105,0,0,-1,-1,-1,1,"selbit=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<vhtm::Candidate,allocator<vhtm::Candidate> > */
static void G__setup_memvarvectorlEvhtmcLcLCandidatecOallocatorlEvhtmcLcLCandidategRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLCandidatecOallocatorlEvhtmcLcLCandidategRsPgR));
   { vector<vhtm::Candidate,allocator<vhtm::Candidate> > *p; p=(vector<vhtm::Candidate,allocator<vhtm::Candidate> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vhtm::Muon */
static void G__setup_memvarvhtmcLcLMuon(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_vhtmcLcLMuon));
   { vhtm::Muon *p; p=(vhtm::Muon*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->isTrackerMuon)-(long)(p)),103,0,0,-1,-1,-1,1,"isTrackerMuon=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isPFMuon)-(long)(p)),103,0,0,-1,-1,-1,1,"isPFMuon=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eta)-(long)(p)),100,0,0,-1,-1,-1,1,"eta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->phi)-(long)(p)),100,0,0,-1,-1,-1,1,"phi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pt)-(long)(p)),100,0,0,-1,-1,-1,1,"pt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->p)-(long)(p)),100,0,0,-1,-1,-1,1,"p=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->energy)-(long)(p)),100,0,0,-1,-1,-1,1,"energy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->charge)-(long)(p)),105,0,0,-1,-1,-1,1,"charge=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trkD0)-(long)(p)),100,0,0,-1,-1,-1,1,"trkD0=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trkDz)-(long)(p)),100,0,0,-1,-1,-1,1,"trkDz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->globalChi2)-(long)(p)),100,0,0,-1,-1,-1,1,"globalChi2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trkIso)-(long)(p)),102,0,0,-1,-1,-1,1,"trkIso=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ecalIso)-(long)(p)),102,0,0,-1,-1,-1,1,"ecalIso=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hcalIso)-(long)(p)),102,0,0,-1,-1,-1,1,"hcalIso=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hoIso)-(long)(p)),102,0,0,-1,-1,-1,1,"hoIso=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pfChargedIsoR03)-(long)(p)),102,0,0,-1,-1,-1,1,"pfChargedIsoR03=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sumPUPt03)-(long)(p)),102,0,0,-1,-1,-1,1,"sumPUPt03=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pfRelIso03)-(long)(p)),102,0,0,-1,-1,-1,1,"pfRelIso03=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pfChargedIsoR04)-(long)(p)),102,0,0,-1,-1,-1,1,"pfChargedIsoR04=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sumPUPt04)-(long)(p)),102,0,0,-1,-1,-1,1,"sumPUPt04=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pfRelIso04)-(long)(p)),102,0,0,-1,-1,-1,1,"pfRelIso04=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->passID)-(long)(p)),105,0,0,-1,-1,-1,1,"passID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dxyPV)-(long)(p)),100,0,0,-1,-1,-1,1,"dxyPV=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dzPV)-(long)(p)),100,0,0,-1,-1,-1,1,"dzPV=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vtxDist3D)-(long)(p)),100,0,0,-1,-1,-1,1,"vtxDist3D=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vtxIndex)-(long)(p)),105,0,0,-1,-1,-1,1,"vtxIndex=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vtxDistZ)-(long)(p)),100,0,0,-1,-1,-1,1,"vtxDistZ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pixHits)-(long)(p)),105,0,0,-1,-1,-1,1,"pixHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trkHits)-(long)(p)),105,0,0,-1,-1,-1,1,"trkHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->muoHits)-(long)(p)),105,0,0,-1,-1,-1,1,"muoHits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->matches)-(long)(p)),105,0,0,-1,-1,-1,1,"matches=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trackerLayersWithMeasurement)-(long)(p)),105,0,0,-1,-1,-1,1,"trackerLayersWithMeasurement=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vx)-(long)(p)),100,0,0,-1,-1,-1,1,"vx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vy)-(long)(p)),100,0,0,-1,-1,-1,1,"vy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vz)-(long)(p)),100,0,0,-1,-1,-1,1,"vz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dB)-(long)(p)),100,0,0,-1,-1,-1,1,"dB=",0,"PV2D");
   G__memvar_setup((void*)((long)(&p->isGlobalMuonPromptTight)-(long)(p)),103,0,0,-1,-1,-1,1,"isGlobalMuonPromptTight=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isAllArbitrated)-(long)(p)),103,0,0,-1,-1,-1,1,"isAllArbitrated=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nChambers)-(long)(p)),105,0,0,-1,-1,-1,1,"nChambers=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nMatches)-(long)(p)),105,0,0,-1,-1,-1,1,"nMatches=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nMatchedStations)-(long)(p)),105,0,0,-1,-1,-1,1,"nMatchedStations=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->stationMask)-(long)(p)),104,0,0,-1,-1,-1,1,"stationMask=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->stationGapMaskDistance)-(long)(p)),104,0,0,-1,-1,-1,1,"stationGapMaskDistance=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->stationGapMaskPull)-(long)(p)),104,0,0,-1,-1,-1,1,"stationGapMaskPull=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->muonID)-(long)(p)),103,0,0,-1,-1,-1,1,"muonID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->selbit)-(long)(p)),105,0,0,-1,-1,-1,1,"selbit=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isolationMap)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_maplEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR),G__defined_typename("map<double,std::vector<double> >"),-1,1,"isolationMap=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > > */
static void G__setup_memvarmaplEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_maplEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR));
   { map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > > *p; p=(map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vhtm::Jet */
static void G__setup_memvarvhtmcLcLJet(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_vhtmcLcLJet));
   { vhtm::Jet *p; p=(vhtm::Jet*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->eta)-(long)(p)),100,0,0,-1,-1,-1,1,"eta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->phi)-(long)(p)),100,0,0,-1,-1,-1,1,"phi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pt)-(long)(p)),100,0,0,-1,-1,-1,1,"pt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pt_raw)-(long)(p)),100,0,0,-1,-1,-1,1,"pt_raw=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->energy)-(long)(p)),100,0,0,-1,-1,-1,1,"energy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->energy_raw)-(long)(p)),100,0,0,-1,-1,-1,1,"energy_raw=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->jecUnc)-(long)(p)),100,0,0,-1,-1,-1,1,"jecUnc=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->resJEC)-(long)(p)),100,0,0,-1,-1,-1,1,"resJEC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->partonFlavour)-(long)(p)),105,0,0,-1,-1,-1,1,"partonFlavour=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->chargedEmEnergyFraction)-(long)(p)),102,0,0,-1,-1,-1,1,"chargedEmEnergyFraction=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->chargedHadronEnergyFraction)-(long)(p)),102,0,0,-1,-1,-1,1,"chargedHadronEnergyFraction=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->chargedMuEnergyFraction)-(long)(p)),102,0,0,-1,-1,-1,1,"chargedMuEnergyFraction=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->electronEnergyFraction)-(long)(p)),102,0,0,-1,-1,-1,1,"electronEnergyFraction=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->muonEnergyFraction)-(long)(p)),102,0,0,-1,-1,-1,1,"muonEnergyFraction=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->neutralEmEnergyFraction)-(long)(p)),102,0,0,-1,-1,-1,1,"neutralEmEnergyFraction=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->neutralHadronEnergyFraction)-(long)(p)),102,0,0,-1,-1,-1,1,"neutralHadronEnergyFraction=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->photonEnergyFraction)-(long)(p)),102,0,0,-1,-1,-1,1,"photonEnergyFraction=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->chargedHadronMultiplicity)-(long)(p)),105,0,0,-1,-1,-1,1,"chargedHadronMultiplicity=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->chargedMultiplicity)-(long)(p)),105,0,0,-1,-1,-1,1,"chargedMultiplicity=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->electronMultiplicity)-(long)(p)),105,0,0,-1,-1,-1,1,"electronMultiplicity=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->muonMultiplicity)-(long)(p)),105,0,0,-1,-1,-1,1,"muonMultiplicity=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->neutralHadronMultiplicity)-(long)(p)),105,0,0,-1,-1,-1,1,"neutralHadronMultiplicity=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->neutralMultiplicity)-(long)(p)),105,0,0,-1,-1,-1,1,"neutralMultiplicity=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->photonMultiplicity)-(long)(p)),105,0,0,-1,-1,-1,1,"photonMultiplicity=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nConstituents)-(long)(p)),105,0,0,-1,-1,-1,1,"nConstituents=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->combinedSecondaryVertexBTag)-(long)(p)),102,0,0,-1,-1,-1,1,"combinedSecondaryVertexBTag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->combinedInclusiveSecondaryVertexBTag)-(long)(p)),102,0,0,-1,-1,-1,1,"combinedInclusiveSecondaryVertexBTag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->discrimap)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR),G__defined_typename("map<std::string,float>"),-1,1,"discrimap=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->passLooseID)-(long)(p)),105,0,0,-1,-1,-1,1,"passLooseID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->passTightID)-(long)(p)),105,0,0,-1,-1,-1,1,"passTightID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->selbit)-(long)(p)),105,0,0,-1,-1,-1,1,"selbit=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vhtm::Vertex */
static void G__setup_memvarvhtmcLcLVertex(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_vhtmcLcLVertex));
   { vhtm::Vertex *p; p=(vhtm::Vertex*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->x)-(long)(p)),100,0,0,-1,-1,-1,1,"x=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->y)-(long)(p)),100,0,0,-1,-1,-1,1,"y=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z)-(long)(p)),100,0,0,-1,-1,-1,1,"z=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->xErr)-(long)(p)),100,0,0,-1,-1,-1,1,"xErr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->yErr)-(long)(p)),100,0,0,-1,-1,-1,1,"yErr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->zErr)-(long)(p)),100,0,0,-1,-1,-1,1,"zErr=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->rho)-(long)(p)),100,0,0,-1,-1,-1,1,"rho=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->chi2)-(long)(p)),100,0,0,-1,-1,-1,1,"chi2=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ndf)-(long)(p)),100,0,0,-1,-1,-1,1,"ndf=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ntracksw05)-(long)(p)),105,0,0,-1,-1,-1,1,"ntracksw05=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isfake)-(long)(p)),103,0,0,-1,-1,-1,1,"isfake=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isvalid)-(long)(p)),103,0,0,-1,-1,-1,1,"isvalid=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sumPt)-(long)(p)),100,0,0,-1,-1,-1,1,"sumPt=",0,"vector sum");
   G__memvar_setup((void*)((long)(&p->selbit)-(long)(p)),105,0,0,-1,-1,-1,1,"selbit=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vhtm::GenMET */
static void G__setup_memvarvhtmcLcLGenMET(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenMET));
   { vhtm::GenMET *p; p=(vhtm::GenMET*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->met)-(long)(p)),100,0,0,-1,-1,-1,1,"met=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->metphi)-(long)(p)),100,0,0,-1,-1,-1,1,"metphi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sumet)-(long)(p)),100,0,0,-1,-1,-1,1,"sumet=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vhtm::TriggerObject */
static void G__setup_memvarvhtmcLcLTriggerObject(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_vhtmcLcLTriggerObject));
   { vhtm::TriggerObject *p; p=(vhtm::TriggerObject*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->energy)-(long)(p)),100,0,0,-1,-1,-1,1,"energy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pt)-(long)(p)),100,0,0,-1,-1,-1,1,"pt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eta)-(long)(p)),100,0,0,-1,-1,-1,1,"eta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->phi)-(long)(p)),100,0,0,-1,-1,-1,1,"phi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pathList)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgR),G__defined_typename("map<std::string,unsigned int>"),-1,1,"pathList=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > > */
static void G__setup_memvarmaplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgR));
   { map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > > *p; p=(map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* pair<string,unsigned int> */
static void G__setup_memvarpairlEstringcOunsignedsPintgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_pairlEstringcOunsignedsPintgR));
   { pair<string,unsigned int> *p; p=(pair<string,unsigned int>*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->first)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictLN_string),-1,-1,1,"first=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->second)-(long)(p)),104,0,0,-1,-1,-1,1,"second=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vhtm::Photon */
static void G__setup_memvarvhtmcLcLPhoton(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_vhtmcLcLPhoton));
   { vhtm::Photon *p; p=(vhtm::Photon*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->et)-(long)(p)),100,0,0,-1,-1,-1,1,"et=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eta)-(long)(p)),100,0,0,-1,-1,-1,1,"eta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->clusterEta)-(long)(p)),100,0,0,-1,-1,-1,1,"clusterEta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->phi)-(long)(p)),100,0,0,-1,-1,-1,1,"phi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->clusterPhi)-(long)(p)),100,0,0,-1,-1,-1,1,"clusterPhi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->energy)-(long)(p)),100,0,0,-1,-1,-1,1,"energy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->theta)-(long)(p)),100,0,0,-1,-1,-1,1,"theta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vx)-(long)(p)),100,0,0,-1,-1,-1,1,"vx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vy)-(long)(p)),100,0,0,-1,-1,-1,1,"vy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vz)-(long)(p)),100,0,0,-1,-1,-1,1,"vz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->scEnergy)-(long)(p)),100,0,0,-1,-1,-1,1,"scEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->scEta)-(long)(p)),100,0,0,-1,-1,-1,1,"scEta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->scPhi)-(long)(p)),100,0,0,-1,-1,-1,1,"scPhi=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->scSize)-(long)(p)),100,0,0,-1,-1,-1,1,"scSize=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->scEtaWidth)-(long)(p)),100,0,0,-1,-1,-1,1,"scEtaWidth=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->scPhiWidth)-(long)(p)),100,0,0,-1,-1,-1,1,"scPhiWidth=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->scEt)-(long)(p)),100,0,0,-1,-1,-1,1,"scEt=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->scRawEnergy)-(long)(p)),100,0,0,-1,-1,-1,1,"scRawEnergy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->scx)-(long)(p)),100,0,0,-1,-1,-1,1,"scx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->scy)-(long)(p)),100,0,0,-1,-1,-1,1,"scy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->scz)-(long)(p)),100,0,0,-1,-1,-1,1,"scz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isoEcalRecHit03)-(long)(p)),100,0,0,-1,-1,-1,1,"isoEcalRecHit03=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isoHcalRecHit03)-(long)(p)),100,0,0,-1,-1,-1,1,"isoHcalRecHit03=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isoSolidTrkCone03)-(long)(p)),100,0,0,-1,-1,-1,1,"isoSolidTrkCone03=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isoHollowTrkCone03)-(long)(p)),100,0,0,-1,-1,-1,1,"isoHollowTrkCone03=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nTrkSolidCone03)-(long)(p)),105,0,0,-1,-1,-1,1,"nTrkSolidCone03=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nTrkHollowCone03)-(long)(p)),105,0,0,-1,-1,-1,1,"nTrkHollowCone03=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isoEcalRecHit04)-(long)(p)),100,0,0,-1,-1,-1,1,"isoEcalRecHit04=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isoHcalRecHit04)-(long)(p)),100,0,0,-1,-1,-1,1,"isoHcalRecHit04=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isoSolidTrkCone04)-(long)(p)),100,0,0,-1,-1,-1,1,"isoSolidTrkCone04=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isoHollowTrkCone04)-(long)(p)),100,0,0,-1,-1,-1,1,"isoHollowTrkCone04=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nTrkSolidCone04)-(long)(p)),105,0,0,-1,-1,-1,1,"nTrkSolidCone04=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nTrkHollowCone04)-(long)(p)),105,0,0,-1,-1,-1,1,"nTrkHollowCone04=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isEB)-(long)(p)),103,0,0,-1,-1,-1,1,"isEB=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isEE)-(long)(p)),103,0,0,-1,-1,-1,1,"isEE=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isEBGap)-(long)(p)),103,0,0,-1,-1,-1,1,"isEBGap=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isEEGap)-(long)(p)),103,0,0,-1,-1,-1,1,"isEEGap=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isEBEEGap)-(long)(p)),103,0,0,-1,-1,-1,1,"isEBEEGap=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fidFlag)-(long)(p)),105,0,0,-1,-1,-1,1,"fidFlag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hasPixelSeed)-(long)(p)),103,0,0,-1,-1,-1,1,"hasPixelSeed=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ecalIso)-(long)(p)),100,0,0,-1,-1,-1,1,"ecalIso=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hcalIso)-(long)(p)),100,0,0,-1,-1,-1,1,"hcalIso=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trackIso)-(long)(p)),100,0,0,-1,-1,-1,1,"trackIso=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->chargedHadIso)-(long)(p)),100,0,0,-1,-1,-1,1,"chargedHadIso=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->neutralHadIso)-(long)(p)),100,0,0,-1,-1,-1,1,"neutralHadIso=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->photonIso)-(long)(p)),100,0,0,-1,-1,-1,1,"photonIso=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->r9)-(long)(p)),100,0,0,-1,-1,-1,1,"r9=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hoe)-(long)(p)),100,0,0,-1,-1,-1,1,"hoe=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sigmaEtaEta)-(long)(p)),100,0,0,-1,-1,-1,1,"sigmaEtaEta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sigmaIEtaIEta)-(long)(p)),100,0,0,-1,-1,-1,1,"sigmaIEtaIEta=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->e1x5)-(long)(p)),100,0,0,-1,-1,-1,1,"e1x5=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->e2x5)-(long)(p)),100,0,0,-1,-1,-1,1,"e2x5=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->e3x3)-(long)(p)),100,0,0,-1,-1,-1,1,"e3x3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->e5x5)-(long)(p)),100,0,0,-1,-1,-1,1,"e5x5=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->r1x5)-(long)(p)),100,0,0,-1,-1,-1,1,"r1x5=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->r2x5)-(long)(p)),100,0,0,-1,-1,-1,1,"r2x5=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->maxEnergyXtal)-(long)(p)),100,0,0,-1,-1,-1,1,"maxEnergyXtal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hasConversionTracks)-(long)(p)),103,0,0,-1,-1,-1,1,"hasConversionTracks=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nTracks)-(long)(p)),105,0,0,-1,-1,-1,1,"nTracks=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->isConverted)-(long)(p)),103,0,0,-1,-1,-1,1,"isConverted=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pairInvMass)-(long)(p)),100,0,0,-1,-1,-1,1,"pairInvMass=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pairCotThetaSeparation)-(long)(p)),100,0,0,-1,-1,-1,1,"pairCotThetaSeparation=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pairPx)-(long)(p)),100,0,0,-1,-1,-1,1,"pairPx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pairPy)-(long)(p)),100,0,0,-1,-1,-1,1,"pairPy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->pairPz)-(long)(p)),100,0,0,-1,-1,-1,1,"pairPz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->conv_vx)-(long)(p)),100,0,0,-1,-1,-1,1,"conv_vx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->conv_vy)-(long)(p)),100,0,0,-1,-1,-1,1,"conv_vy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->conv_vz)-(long)(p)),100,0,0,-1,-1,-1,1,"conv_vz=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->eovp)-(long)(p)),100,0,0,-1,-1,-1,1,"eovp=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->zpv)-(long)(p)),100,0,0,-1,-1,-1,1,"zpv=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->distOfMinApproach)-(long)(p)),100,0,0,-1,-1,-1,1,"distOfMinApproach=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dPhiTracksAtVtx)-(long)(p)),100,0,0,-1,-1,-1,1,"dPhiTracksAtVtx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dPhiTracksAtEcal)-(long)(p)),100,0,0,-1,-1,-1,1,"dPhiTracksAtEcal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dEtaTracksAtEcal)-(long)(p)),100,0,0,-1,-1,-1,1,"dEtaTracksAtEcal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->selbit)-(long)(p)),105,0,0,-1,-1,-1,1,"selbit=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<vhtm::Event,allocator<vhtm::Event> > */
static void G__setup_memvarvectorlEvhtmcLcLEventcOallocatorlEvhtmcLcLEventgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLEventcOallocatorlEvhtmcLcLEventgRsPgR));
   { vector<vhtm::Event,allocator<vhtm::Event> > *p; p=(vector<vhtm::Event,allocator<vhtm::Event> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<vhtm::GenEvent,allocator<vhtm::GenEvent> > */
static void G__setup_memvarvectorlEvhtmcLcLGenEventcOallocatorlEvhtmcLcLGenEventgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenEventcOallocatorlEvhtmcLcLGenEventgRsPgR));
   { vector<vhtm::GenEvent,allocator<vhtm::GenEvent> > *p; p=(vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<vhtm::Electron,allocator<vhtm::Electron> > */
static void G__setup_memvarvectorlEvhtmcLcLElectroncOallocatorlEvhtmcLcLElectrongRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLElectroncOallocatorlEvhtmcLcLElectrongRsPgR));
   { vector<vhtm::Electron,allocator<vhtm::Electron> > *p; p=(vector<vhtm::Electron,allocator<vhtm::Electron> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<vhtm::GenParticle,allocator<vhtm::GenParticle> > */
static void G__setup_memvarvectorlEvhtmcLcLGenParticlecOallocatorlEvhtmcLcLGenParticlegRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenParticlecOallocatorlEvhtmcLcLGenParticlegRsPgR));
   { vector<vhtm::GenParticle,allocator<vhtm::GenParticle> > *p; p=(vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<vhtm::GenJet,allocator<vhtm::GenJet> > */
static void G__setup_memvarvectorlEvhtmcLcLGenJetcOallocatorlEvhtmcLcLGenJetgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenJetcOallocatorlEvhtmcLcLGenJetgRsPgR));
   { vector<vhtm::GenJet,allocator<vhtm::GenJet> > *p; p=(vector<vhtm::GenJet,allocator<vhtm::GenJet> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<vhtm::GenMET,allocator<vhtm::GenMET> > */
static void G__setup_memvarvectorlEvhtmcLcLGenMETcOallocatorlEvhtmcLcLGenMETgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenMETcOallocatorlEvhtmcLcLGenMETgRsPgR));
   { vector<vhtm::GenMET,allocator<vhtm::GenMET> > *p; p=(vector<vhtm::GenMET,allocator<vhtm::GenMET> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<vhtm::MET,allocator<vhtm::MET> > */
static void G__setup_memvarvectorlEvhtmcLcLMETcOallocatorlEvhtmcLcLMETgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLMETcOallocatorlEvhtmcLcLMETgRsPgR));
   { vector<vhtm::MET,allocator<vhtm::MET> > *p; p=(vector<vhtm::MET,allocator<vhtm::MET> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<vhtm::Tau,allocator<vhtm::Tau> > */
static void G__setup_memvarvectorlEvhtmcLcLTaucOallocatorlEvhtmcLcLTaugRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLTaucOallocatorlEvhtmcLcLTaugRsPgR));
   { vector<vhtm::Tau,allocator<vhtm::Tau> > *p; p=(vector<vhtm::Tau,allocator<vhtm::Tau> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<vhtm::Muon,allocator<vhtm::Muon> > */
static void G__setup_memvarvectorlEvhtmcLcLMuoncOallocatorlEvhtmcLcLMuongRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLMuoncOallocatorlEvhtmcLcLMuongRsPgR));
   { vector<vhtm::Muon,allocator<vhtm::Muon> > *p; p=(vector<vhtm::Muon,allocator<vhtm::Muon> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<vhtm::Jet,allocator<vhtm::Jet> > */
static void G__setup_memvarvectorlEvhtmcLcLJetcOallocatorlEvhtmcLcLJetgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLJetcOallocatorlEvhtmcLcLJetgRsPgR));
   { vector<vhtm::Jet,allocator<vhtm::Jet> > *p; p=(vector<vhtm::Jet,allocator<vhtm::Jet> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<vhtm::Vertex,allocator<vhtm::Vertex> > */
static void G__setup_memvarvectorlEvhtmcLcLVertexcOallocatorlEvhtmcLcLVertexgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLVertexcOallocatorlEvhtmcLcLVertexgRsPgR));
   { vector<vhtm::Vertex,allocator<vhtm::Vertex> > *p; p=(vector<vhtm::Vertex,allocator<vhtm::Vertex> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<vhtm::Photon,allocator<vhtm::Photon> > */
static void G__setup_memvarvectorlEvhtmcLcLPhotoncOallocatorlEvhtmcLcLPhotongRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLPhotoncOallocatorlEvhtmcLcLPhotongRsPgR));
   { vector<vhtm::Photon,allocator<vhtm::Photon> > *p; p=(vector<vhtm::Photon,allocator<vhtm::Photon> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> > */
static void G__setup_memvarvectorlEvhtmcLcLTriggerObjectcOallocatorlEvhtmcLcLTriggerObjectgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLTriggerObjectcOallocatorlEvhtmcLcLTriggerObjectgRsPgR));
   { vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> > *p; p=(vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* vector<string,allocator<string> > */
static void G__setup_memvarvectorlEstringcOallocatorlEstringgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   { vector<string,allocator<string> > *p; p=(vector<string,allocator<string> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncvhtmcLcLCandidate(void) {
   /* vhtm::Candidate */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_vhtmcLcLCandidate));
   G__memfunc_setup("Candidate",893,G__Dict_404_0_1, 105, G__get_linked_tagnum(&G__DictLN_vhtmcLcLCandidate), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Candidate",893,G__Dict_404_0_2, 105, G__get_linked_tagnum(&G__DictLN_vhtmcLcLCandidate), -1, 0, 3, 1, 1, 0, 
"f - - 0 - pt f - - 0 - eta "
"f - - 0 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dict_404_0_3, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&vhtm::Candidate::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dict_404_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&vhtm::Candidate::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dict_404_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&vhtm::Candidate::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dict_404_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&vhtm::Candidate::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dict_404_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dict_404_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&vhtm::Candidate::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dict_404_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&vhtm::Candidate::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dict_404_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&vhtm::Candidate::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dict_404_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&vhtm::Candidate::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Candidate", 893, G__Dict_404_0_15, (int) ('i'), G__get_linked_tagnum(&G__DictLN_vhtmcLcLCandidate), -1, 0, 1, 1, 1, 0, "u 'vhtm::Candidate' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Candidate", 1019, G__Dict_404_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_404_0_17, (int) ('u'), G__get_linked_tagnum(&G__DictLN_vhtmcLcLCandidate), -1, 1, 1, 1, 1, 0, "u 'vhtm::Candidate' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvhtmcLcLEvent(void) {
   /* vhtm::Event */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_vhtmcLcLEvent));
   G__memfunc_setup("Event",514,G__Dict_405_0_1, 105, G__get_linked_tagnum(&G__DictLN_vhtmcLcLEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dict_405_0_2, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&vhtm::Event::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dict_405_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&vhtm::Event::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dict_405_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&vhtm::Event::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dict_405_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&vhtm::Event::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dict_405_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dict_405_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&vhtm::Event::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dict_405_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&vhtm::Event::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dict_405_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&vhtm::Event::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dict_405_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&vhtm::Event::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Event", 514, G__Dict_405_0_14, (int) ('i'), G__get_linked_tagnum(&G__DictLN_vhtmcLcLEvent), -1, 0, 1, 1, 1, 0, "u 'vhtm::Event' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Event", 640, G__Dict_405_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_405_0_16, (int) ('u'), G__get_linked_tagnum(&G__DictLN_vhtmcLcLEvent), -1, 1, 1, 1, 1, 0, "u 'vhtm::Event' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvhtmcLcLGenEvent(void) {
   /* vhtm::GenEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenEvent));
   G__memfunc_setup("GenEvent",796,G__Dict_410_0_1, 105, G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dict_410_0_2, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&vhtm::GenEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dict_410_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&vhtm::GenEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dict_410_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&vhtm::GenEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dict_410_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&vhtm::GenEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dict_410_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dict_410_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&vhtm::GenEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dict_410_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&vhtm::GenEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dict_410_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&vhtm::GenEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dict_410_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&vhtm::GenEvent::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("GenEvent", 796, G__Dict_410_0_14, (int) ('i'), G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenEvent), -1, 0, 1, 1, 1, 0, "u 'vhtm::GenEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~GenEvent", 922, G__Dict_410_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_410_0_16, (int) ('u'), G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenEvent), -1, 1, 1, 1, 1, 0, "u 'vhtm::GenEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvhtmcLcLElectron(void) {
   /* vhtm::Electron */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_vhtmcLcLElectron));
   G__memfunc_setup("Electron",828,G__Dict_411_0_1, 105, G__get_linked_tagnum(&G__DictLN_vhtmcLcLElectron), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dict_411_0_2, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&vhtm::Electron::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dict_411_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&vhtm::Electron::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dict_411_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&vhtm::Electron::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dict_411_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&vhtm::Electron::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dict_411_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dict_411_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&vhtm::Electron::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dict_411_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&vhtm::Electron::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dict_411_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&vhtm::Electron::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dict_411_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&vhtm::Electron::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Electron", 828, G__Dict_411_0_14, (int) ('i'), G__get_linked_tagnum(&G__DictLN_vhtmcLcLElectron), -1, 0, 1, 1, 1, 0, "u 'vhtm::Electron' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Electron", 954, G__Dict_411_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_411_0_16, (int) ('u'), G__get_linked_tagnum(&G__DictLN_vhtmcLcLElectron), -1, 1, 1, 1, 1, 0, "u 'vhtm::Electron' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvhtmcLcLGenParticle(void) {
   /* vhtm::GenParticle */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenParticle));
   G__memfunc_setup("GenParticle",1102,G__Dict_412_0_1, 105, G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenParticle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dict_412_0_2, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&vhtm::GenParticle::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dict_412_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&vhtm::GenParticle::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dict_412_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&vhtm::GenParticle::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dict_412_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&vhtm::GenParticle::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dict_412_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dict_412_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&vhtm::GenParticle::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dict_412_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&vhtm::GenParticle::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dict_412_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&vhtm::GenParticle::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dict_412_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&vhtm::GenParticle::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("GenParticle", 1102, G__Dict_412_0_14, (int) ('i'), G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenParticle), -1, 0, 1, 1, 1, 0, "u 'vhtm::GenParticle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~GenParticle", 1228, G__Dict_412_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_412_0_16, (int) ('u'), G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenParticle), -1, 1, 1, 1, 1, 0, "u 'vhtm::GenParticle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvhtmcLcLGenJet(void) {
   /* vhtm::GenJet */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenJet));
   G__memfunc_setup("GenJet",573,G__Dict_413_0_1, 105, G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenJet), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dict_413_0_2, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&vhtm::GenJet::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dict_413_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&vhtm::GenJet::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dict_413_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&vhtm::GenJet::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dict_413_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&vhtm::GenJet::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dict_413_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dict_413_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&vhtm::GenJet::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dict_413_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&vhtm::GenJet::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dict_413_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&vhtm::GenJet::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dict_413_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&vhtm::GenJet::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("GenJet", 573, G__Dict_413_0_14, (int) ('i'), G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenJet), -1, 0, 1, 1, 1, 0, "u 'vhtm::GenJet' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~GenJet", 699, G__Dict_413_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_413_0_16, (int) ('u'), G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenJet), -1, 1, 1, 1, 1, 0, "u 'vhtm::GenJet' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvhtmcLcLMET(void) {
   /* vhtm::MET */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_vhtmcLcLMET));
   G__memfunc_setup("MET",230,G__Dict_414_0_1, 105, G__get_linked_tagnum(&G__DictLN_vhtmcLcLMET), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dict_414_0_2, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&vhtm::MET::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dict_414_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&vhtm::MET::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dict_414_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&vhtm::MET::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dict_414_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&vhtm::MET::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dict_414_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dict_414_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&vhtm::MET::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dict_414_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&vhtm::MET::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dict_414_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&vhtm::MET::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dict_414_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&vhtm::MET::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MET", 230, G__Dict_414_0_14, (int) ('i'), G__get_linked_tagnum(&G__DictLN_vhtmcLcLMET), -1, 0, 1, 1, 1, 0, "u 'vhtm::MET' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MET", 356, G__Dict_414_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_414_0_16, (int) ('u'), G__get_linked_tagnum(&G__DictLN_vhtmcLcLMET), -1, 1, 1, 1, 1, 0, "u 'vhtm::MET' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvhtmcLcLTau(void) {
   /* vhtm::Tau */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_vhtmcLcLTau));
   G__memfunc_setup("Tau",298,G__Dict_415_0_1, 105, G__get_linked_tagnum(&G__DictLN_vhtmcLcLTau), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dict_415_0_2, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&vhtm::Tau::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dict_415_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&vhtm::Tau::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dict_415_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&vhtm::Tau::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dict_415_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&vhtm::Tau::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dict_415_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dict_415_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&vhtm::Tau::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dict_415_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&vhtm::Tau::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dict_415_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&vhtm::Tau::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dict_415_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&vhtm::Tau::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Tau", 298, G__Dict_415_0_14, (int) ('i'), G__get_linked_tagnum(&G__DictLN_vhtmcLcLTau), -1, 0, 1, 1, 1, 0, "u 'vhtm::Tau' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Tau", 424, G__Dict_415_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_415_0_16, (int) ('u'), G__get_linked_tagnum(&G__DictLN_vhtmcLcLTau), -1, 1, 1, 1, 1, 0, "u 'vhtm::Tau' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEvhtmcLcLCandidatecOallocatorlEvhtmcLcLCandidategRsPgR(void) {
   /* vector<vhtm::Candidate,allocator<vhtm::Candidate> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLCandidatecOallocatorlEvhtmcLcLCandidategRsPgR));
   G__memfunc_setup("at",213,G__Dict_417_0_1, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLCandidate), G__defined_typename("vector<vhtm::Candidate,allocator<vhtm::Candidate> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vhtm::Candidate,allocator<vhtm::Candidate> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__Dict_417_0_2, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLCandidate), G__defined_typename("vector<vhtm::Candidate,allocator<vhtm::Candidate> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vhtm::Candidate,allocator<vhtm::Candidate> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__Dict_417_0_3, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLCandidatecOallocatorlEvhtmcLcLCandidategRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__Dict_417_0_4, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLCandidatecOallocatorlEvhtmcLcLCandidategRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__Dict_417_0_5, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLCandidatecOallocatorlEvhtmcLcLCandidategRsPgRcLcLiteratorgR), G__defined_typename("vector<vhtm::Candidate,allocator<vhtm::Candidate> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__Dict_417_0_6, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLCandidatecOallocatorlEvhtmcLcLCandidategRsPgRcLcLiteratorgR), G__defined_typename("vector<vhtm::Candidate,allocator<vhtm::Candidate> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__Dict_417_0_7, 107, -1, G__defined_typename("vector<vhtm::Candidate,allocator<vhtm::Candidate> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__Dict_417_0_8, 107, -1, G__defined_typename("vector<vhtm::Candidate,allocator<vhtm::Candidate> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_417_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vhtm::Candidate,allocator<vhtm::Candidate> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_417_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<vhtm::Candidate,allocator<vhtm::Candidate> >::size_type' 0 - sz u 'vhtm::Candidate' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__Dict_417_0_11, 107, -1, G__defined_typename("vector<vhtm::Candidate,allocator<vhtm::Candidate> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__Dict_417_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_417_0_13, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLCandidate), G__defined_typename("vector<vhtm::Candidate,allocator<vhtm::Candidate> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vhtm::Candidate,allocator<vhtm::Candidate> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_417_0_14, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLCandidate), G__defined_typename("vector<vhtm::Candidate,allocator<vhtm::Candidate> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vhtm::Candidate,allocator<vhtm::Candidate> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vhtm::Candidate,allocator<vhtm::Candidate> >",4852,G__Dict_417_0_15, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLCandidatecOallocatorlEvhtmcLcLCandidategRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vhtm::Candidate,allocator<vhtm::Candidate> >",4852,G__Dict_417_0_16, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLCandidatecOallocatorlEvhtmcLcLCandidategRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<vhtm::Candidate,allocator<vhtm::Candidate> >::size_type' 0 - n u 'vhtm::Candidate' - 11 'vhtm::Candidate()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vhtm::Candidate,allocator<vhtm::Candidate> >",4852,G__Dict_417_0_17, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLCandidatecOallocatorlEvhtmcLcLCandidategRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<vhtm::Candidate,allocator<vhtm::Candidate> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vhtm::Candidate,allocator<vhtm::Candidate> >",4852,G__Dict_417_0_18, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLCandidatecOallocatorlEvhtmcLcLCandidategRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<vhtm::Candidate,allocator<vhtm::Candidate> >::iterator' 'vector<vhtm::Candidate,allocator<vhtm::Candidate> >::const_iterator' 10 - first u 'vector<vhtm::Candidate,allocator<vhtm::Candidate> >::iterator' 'vector<vhtm::Candidate,allocator<vhtm::Candidate> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__Dict_417_0_19, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLCandidatecOallocatorlEvhtmcLcLCandidategRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<vhtm::Candidate,allocator<vhtm::Candidate> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__Dict_417_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vhtm::Candidate,allocator<vhtm::Candidate> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__Dict_417_0_21, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLCandidate), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__Dict_417_0_22, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLCandidate), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__Dict_417_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vhtm::Candidate' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__Dict_417_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vhtm::Candidate,allocator<vhtm::Candidate> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_417_0_25, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLCandidatecOallocatorlEvhtmcLcLCandidategRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<vhtm::Candidate,allocator<vhtm::Candidate> >::iterator' - 0 - position u 'vhtm::Candidate' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_417_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vhtm::Candidate,allocator<vhtm::Candidate> >::iterator' - 0 - position u 'vector<vhtm::Candidate,allocator<vhtm::Candidate> >::iterator' 'vector<vhtm::Candidate,allocator<vhtm::Candidate> >::const_iterator' 10 - first "
"u 'vector<vhtm::Candidate,allocator<vhtm::Candidate> >::iterator' 'vector<vhtm::Candidate,allocator<vhtm::Candidate> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_417_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vhtm::Candidate,allocator<vhtm::Candidate> >::iterator' - 0 - position k - 'vector<vhtm::Candidate,allocator<vhtm::Candidate> >::size_type' 0 - n "
"u 'vhtm::Candidate' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__Dict_417_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_417_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vhtm::Candidate,allocator<vhtm::Candidate> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_417_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<vhtm::Candidate,allocator<vhtm::Candidate> >::iterator' - 0 - first u 'vector<vhtm::Candidate,allocator<vhtm::Candidate> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__Dict_417_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<vhtm::Candidate,allocator<vhtm::Candidate> >", 4978, G__Dict_417_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvhtmcLcLMuon(void) {
   /* vhtm::Muon */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_vhtmcLcLMuon));
   G__memfunc_setup("Muon",415,G__Dict_420_0_1, 105, G__get_linked_tagnum(&G__DictLN_vhtmcLcLMuon), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dict_420_0_2, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&vhtm::Muon::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dict_420_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&vhtm::Muon::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dict_420_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&vhtm::Muon::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dict_420_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&vhtm::Muon::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dict_420_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dict_420_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&vhtm::Muon::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dict_420_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&vhtm::Muon::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dict_420_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&vhtm::Muon::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dict_420_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&vhtm::Muon::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Muon", 415, G__Dict_420_0_14, (int) ('i'), G__get_linked_tagnum(&G__DictLN_vhtmcLcLMuon), -1, 0, 1, 1, 1, 0, "u 'vhtm::Muon' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Muon", 541, G__Dict_420_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_420_0_16, (int) ('u'), G__get_linked_tagnum(&G__DictLN_vhtmcLcLMuon), -1, 1, 1, 1, 1, 0, "u 'vhtm::Muon' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncmaplEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR(void) {
   /* map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_maplEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR));
   G__memfunc_setup("map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >",11814,G__Dict_423_0_1, 105, G__get_linked_tagnum(&G__DictLN_maplEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >",11814,G__Dict_423_0_2, 105, G__get_linked_tagnum(&G__DictLN_maplEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::iterator' - 0 - first u 'map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >",11814,G__Dict_423_0_3, 105, G__get_linked_tagnum(&G__DictLN_maplEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::reverse_iterator' - 0 - first u 'map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::reverse_iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >",11814,G__Dict_423_0_4, 105, G__get_linked_tagnum(&G__DictLN_maplEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__Dict_423_0_5, 117, G__get_linked_tagnum(&G__DictLN_maplEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__Dict_423_0_6, 117, G__get_linked_tagnum(&G__DictLN_maplEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__Dict_423_0_7, 117, G__get_linked_tagnum(&G__DictLN_maplEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__Dict_423_0_8, 117, G__get_linked_tagnum(&G__DictLN_maplEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__Dict_423_0_9, 117, G__get_linked_tagnum(&G__DictLN_maplEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__Dict_423_0_10, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__Dict_423_0_11, 107, -1, G__defined_typename("map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__Dict_423_0_12, 107, -1, G__defined_typename("map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_423_0_13, 117, G__get_linked_tagnum(&G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), -1, 1, 1, 1, 1, 0, "d - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_423_0_14, 117, G__get_linked_tagnum(&G__DictLN_pairlEmaplEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRcLcLiteratorcOboolgR), -1, 0, 1, 1, 1, 0, "u 'pair<double,vector<double,allocator<double> > >' 'map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::value_type' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_423_0_15, 117, G__get_linked_tagnum(&G__DictLN_maplEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::iterator' - 0 - position u 'pair<double,vector<double,allocator<double> > >' 'map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::value_type' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_423_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::iterator' - 0 - first u 'map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_423_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::reverse_iterator' - 0 - first u 'map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::reverse_iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_423_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_423_0_19, 107, -1, G__defined_typename("map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::size_type"), 0, 1, 1, 1, 0, "d - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_423_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::iterator' - 0 - first u 'map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__Dict_423_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__Dict_423_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find",417,G__Dict_423_0_23, 117, G__get_linked_tagnum(&G__DictLN_maplEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "d - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("count",553,G__Dict_423_0_24, 107, -1, G__defined_typename("map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::size_type"), 0, 1, 1, 1, 8, "d - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lower_bound",1184,G__Dict_423_0_25, 117, G__get_linked_tagnum(&G__DictLN_maplEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "d - - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("upper_bound",1187,G__Dict_423_0_26, 117, G__get_linked_tagnum(&G__DictLN_maplEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "d - - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >", 11940, G__Dict_423_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvhtmcLcLJet(void) {
   /* vhtm::Jet */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_vhtmcLcLJet));
   G__memfunc_setup("Jet",291,G__Dict_428_0_1, 105, G__get_linked_tagnum(&G__DictLN_vhtmcLcLJet), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dict_428_0_2, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&vhtm::Jet::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dict_428_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&vhtm::Jet::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dict_428_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&vhtm::Jet::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dict_428_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&vhtm::Jet::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dict_428_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dict_428_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&vhtm::Jet::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dict_428_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&vhtm::Jet::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dict_428_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&vhtm::Jet::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dict_428_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&vhtm::Jet::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Jet", 291, G__Dict_428_0_14, (int) ('i'), G__get_linked_tagnum(&G__DictLN_vhtmcLcLJet), -1, 0, 1, 1, 1, 0, "u 'vhtm::Jet' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Jet", 417, G__Dict_428_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_428_0_16, (int) ('u'), G__get_linked_tagnum(&G__DictLN_vhtmcLcLJet), -1, 1, 1, 1, 1, 0, "u 'vhtm::Jet' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvhtmcLcLVertex(void) {
   /* vhtm::Vertex */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_vhtmcLcLVertex));
   G__memfunc_setup("Vertex",638,G__Dict_429_0_1, 105, G__get_linked_tagnum(&G__DictLN_vhtmcLcLVertex), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dict_429_0_2, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&vhtm::Vertex::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dict_429_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&vhtm::Vertex::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dict_429_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&vhtm::Vertex::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dict_429_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&vhtm::Vertex::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dict_429_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dict_429_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&vhtm::Vertex::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dict_429_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&vhtm::Vertex::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dict_429_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&vhtm::Vertex::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dict_429_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&vhtm::Vertex::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Vertex", 638, G__Dict_429_0_14, (int) ('i'), G__get_linked_tagnum(&G__DictLN_vhtmcLcLVertex), -1, 0, 1, 1, 1, 0, "u 'vhtm::Vertex' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Vertex", 764, G__Dict_429_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_429_0_16, (int) ('u'), G__get_linked_tagnum(&G__DictLN_vhtmcLcLVertex), -1, 1, 1, 1, 1, 0, "u 'vhtm::Vertex' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvhtmcLcLGenMET(void) {
   /* vhtm::GenMET */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenMET));
   G__memfunc_setup("GenMET",512,G__Dict_430_0_1, 105, G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenMET), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dict_430_0_2, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&vhtm::GenMET::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dict_430_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&vhtm::GenMET::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dict_430_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&vhtm::GenMET::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dict_430_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&vhtm::GenMET::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dict_430_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dict_430_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&vhtm::GenMET::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dict_430_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&vhtm::GenMET::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dict_430_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&vhtm::GenMET::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dict_430_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&vhtm::GenMET::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("GenMET", 512, G__Dict_430_0_14, (int) ('i'), G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenMET), -1, 0, 1, 1, 1, 0, "u 'vhtm::GenMET' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~GenMET", 638, G__Dict_430_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_430_0_16, (int) ('u'), G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenMET), -1, 1, 1, 1, 1, 0, "u 'vhtm::GenMET' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvhtmcLcLTriggerObject(void) {
   /* vhtm::TriggerObject */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_vhtmcLcLTriggerObject));
   G__memfunc_setup("TriggerObject",1323,G__Dict_431_0_1, 105, G__get_linked_tagnum(&G__DictLN_vhtmcLcLTriggerObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dict_431_0_2, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&vhtm::TriggerObject::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dict_431_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&vhtm::TriggerObject::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dict_431_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&vhtm::TriggerObject::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dict_431_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&vhtm::TriggerObject::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dict_431_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dict_431_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&vhtm::TriggerObject::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dict_431_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&vhtm::TriggerObject::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dict_431_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&vhtm::TriggerObject::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dict_431_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&vhtm::TriggerObject::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TriggerObject", 1323, G__Dict_431_0_14, (int) ('i'), G__get_linked_tagnum(&G__DictLN_vhtmcLcLTriggerObject), -1, 0, 1, 1, 1, 0, "u 'vhtm::TriggerObject' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TriggerObject", 1449, G__Dict_431_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_431_0_16, (int) ('u'), G__get_linked_tagnum(&G__DictLN_vhtmcLcLTriggerObject), -1, 1, 1, 1, 1, 0, "u 'vhtm::TriggerObject' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncmaplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgR(void) {
   /* map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgR));
   G__memfunc_setup("map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >",7894,G__Dict_434_0_1, 105, G__get_linked_tagnum(&G__DictLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >",7894,G__Dict_434_0_2, 105, G__get_linked_tagnum(&G__DictLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::iterator' - 0 - first u 'map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >",7894,G__Dict_434_0_3, 105, G__get_linked_tagnum(&G__DictLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::reverse_iterator' - 0 - first u 'map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::reverse_iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >",7894,G__Dict_434_0_4, 105, G__get_linked_tagnum(&G__DictLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__Dict_434_0_5, 117, G__get_linked_tagnum(&G__DictLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__Dict_434_0_6, 117, G__get_linked_tagnum(&G__DictLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__Dict_434_0_7, 117, G__get_linked_tagnum(&G__DictLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__Dict_434_0_8, 117, G__get_linked_tagnum(&G__DictLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__Dict_434_0_9, 117, G__get_linked_tagnum(&G__DictLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__Dict_434_0_10, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__Dict_434_0_11, 107, -1, G__defined_typename("map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__Dict_434_0_12, 107, -1, G__defined_typename("map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_434_0_13, 104, -1, -1, 1, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_434_0_14, 117, G__get_linked_tagnum(&G__DictLN_pairlEmaplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgRcLcLiteratorcOboolgR), -1, 0, 1, 1, 1, 0, "u 'pair<string,unsigned int>' 'map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::value_type' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_434_0_15, 117, G__get_linked_tagnum(&G__DictLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::iterator' - 0 - position u 'pair<string,unsigned int>' 'map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::value_type' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_434_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::iterator' - 0 - first u 'map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_434_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::reverse_iterator' - 0 - first u 'map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::reverse_iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_434_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_434_0_19, 107, -1, G__defined_typename("map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::size_type"), 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_434_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::iterator' - 0 - first u 'map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__Dict_434_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__Dict_434_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find",417,G__Dict_434_0_23, 117, G__get_linked_tagnum(&G__DictLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("count",553,G__Dict_434_0_24, 107, -1, G__defined_typename("map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::size_type"), 0, 1, 1, 1, 8, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lower_bound",1184,G__Dict_434_0_25, 117, G__get_linked_tagnum(&G__DictLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("upper_bound",1187,G__Dict_434_0_26, 117, G__get_linked_tagnum(&G__DictLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >", 8020, G__Dict_434_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncpairlEstringcOunsignedsPintgR(void) {
   /* pair<string,unsigned int> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_pairlEstringcOunsignedsPintgR));
   G__memfunc_setup("pair<string,unsigned int>",2481,G__Dict_435_0_1, 105, G__get_linked_tagnum(&G__DictLN_pairlEstringcOunsignedsPintgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pair<string,unsigned int>",2481,G__Dict_435_0_2, 105, G__get_linked_tagnum(&G__DictLN_pairlEstringcOunsignedsPintgR), -1, 0, 2, 1, 1, 0, 
"u 'string' - 11 - a h - - 11 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__DictLN_pairlEstringcOunsignedsPintgR), -1, 1, 1, 1, 4, 0, "u 'pair<string,unsigned int>' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("pair<string,unsigned int>", 2481, G__Dict_435_0_4, (int) ('i'), 
G__get_linked_tagnum(&G__DictLN_pairlEstringcOunsignedsPintgR), -1, 0, 1, 1, 1, 0, "u 'pair<string,unsigned int>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~pair<string,unsigned int>", 2607, G__Dict_435_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvhtmcLcLPhoton(void) {
   /* vhtm::Photon */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_vhtmcLcLPhoton));
   G__memfunc_setup("Photon",632,G__Dict_439_0_1, 105, G__get_linked_tagnum(&G__DictLN_vhtmcLcLPhoton), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dict_439_0_2, 85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&vhtm::Photon::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dict_439_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&vhtm::Photon::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dict_439_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&vhtm::Photon::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dict_439_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&vhtm::Photon::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dict_439_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dict_439_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&vhtm::Photon::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dict_439_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&vhtm::Photon::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dict_439_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&vhtm::Photon::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dict_439_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&vhtm::Photon::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Photon", 632, G__Dict_439_0_14, (int) ('i'), G__get_linked_tagnum(&G__DictLN_vhtmcLcLPhoton), -1, 0, 1, 1, 1, 0, "u 'vhtm::Photon' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Photon", 758, G__Dict_439_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dict_439_0_16, (int) ('u'), G__get_linked_tagnum(&G__DictLN_vhtmcLcLPhoton), -1, 1, 1, 1, 1, 0, "u 'vhtm::Photon' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEvhtmcLcLEventcOallocatorlEvhtmcLcLEventgRsPgR(void) {
   /* vector<vhtm::Event,allocator<vhtm::Event> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLEventcOallocatorlEvhtmcLcLEventgRsPgR));
   G__memfunc_setup("at",213,G__Dict_441_0_1, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLEvent), G__defined_typename("vector<vhtm::Event,allocator<vhtm::Event> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vhtm::Event,allocator<vhtm::Event> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__Dict_441_0_2, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLEvent), G__defined_typename("vector<vhtm::Event,allocator<vhtm::Event> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vhtm::Event,allocator<vhtm::Event> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__Dict_441_0_3, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLEventcOallocatorlEvhtmcLcLEventgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__Dict_441_0_4, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLEventcOallocatorlEvhtmcLcLEventgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__Dict_441_0_5, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLEventcOallocatorlEvhtmcLcLEventgRsPgRcLcLiteratorgR), G__defined_typename("vector<vhtm::Event,allocator<vhtm::Event> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__Dict_441_0_6, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLEventcOallocatorlEvhtmcLcLEventgRsPgRcLcLiteratorgR), G__defined_typename("vector<vhtm::Event,allocator<vhtm::Event> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__Dict_441_0_7, 107, -1, G__defined_typename("vector<vhtm::Event,allocator<vhtm::Event> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__Dict_441_0_8, 107, -1, G__defined_typename("vector<vhtm::Event,allocator<vhtm::Event> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_441_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vhtm::Event,allocator<vhtm::Event> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_441_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<vhtm::Event,allocator<vhtm::Event> >::size_type' 0 - sz u 'vhtm::Event' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__Dict_441_0_11, 107, -1, G__defined_typename("vector<vhtm::Event,allocator<vhtm::Event> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__Dict_441_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_441_0_13, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLEvent), G__defined_typename("vector<vhtm::Event,allocator<vhtm::Event> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vhtm::Event,allocator<vhtm::Event> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_441_0_14, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLEvent), G__defined_typename("vector<vhtm::Event,allocator<vhtm::Event> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vhtm::Event,allocator<vhtm::Event> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vhtm::Event,allocator<vhtm::Event> >",4094,G__Dict_441_0_15, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLEventcOallocatorlEvhtmcLcLEventgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vhtm::Event,allocator<vhtm::Event> >",4094,G__Dict_441_0_16, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLEventcOallocatorlEvhtmcLcLEventgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<vhtm::Event,allocator<vhtm::Event> >::size_type' 0 - n u 'vhtm::Event' - 11 'vhtm::Event()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vhtm::Event,allocator<vhtm::Event> >",4094,G__Dict_441_0_17, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLEventcOallocatorlEvhtmcLcLEventgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<vhtm::Event,allocator<vhtm::Event> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vhtm::Event,allocator<vhtm::Event> >",4094,G__Dict_441_0_18, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLEventcOallocatorlEvhtmcLcLEventgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<vhtm::Event,allocator<vhtm::Event> >::iterator' 'vector<vhtm::Event,allocator<vhtm::Event> >::const_iterator' 10 - first u 'vector<vhtm::Event,allocator<vhtm::Event> >::iterator' 'vector<vhtm::Event,allocator<vhtm::Event> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__Dict_441_0_19, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLEventcOallocatorlEvhtmcLcLEventgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<vhtm::Event,allocator<vhtm::Event> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__Dict_441_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vhtm::Event,allocator<vhtm::Event> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__Dict_441_0_21, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLEvent), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__Dict_441_0_22, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLEvent), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__Dict_441_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vhtm::Event' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__Dict_441_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vhtm::Event,allocator<vhtm::Event> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_441_0_25, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLEventcOallocatorlEvhtmcLcLEventgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<vhtm::Event,allocator<vhtm::Event> >::iterator' - 0 - position u 'vhtm::Event' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_441_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vhtm::Event,allocator<vhtm::Event> >::iterator' - 0 - position u 'vector<vhtm::Event,allocator<vhtm::Event> >::iterator' 'vector<vhtm::Event,allocator<vhtm::Event> >::const_iterator' 10 - first "
"u 'vector<vhtm::Event,allocator<vhtm::Event> >::iterator' 'vector<vhtm::Event,allocator<vhtm::Event> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_441_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vhtm::Event,allocator<vhtm::Event> >::iterator' - 0 - position k - 'vector<vhtm::Event,allocator<vhtm::Event> >::size_type' 0 - n "
"u 'vhtm::Event' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__Dict_441_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_441_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vhtm::Event,allocator<vhtm::Event> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_441_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<vhtm::Event,allocator<vhtm::Event> >::iterator' - 0 - first u 'vector<vhtm::Event,allocator<vhtm::Event> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__Dict_441_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<vhtm::Event,allocator<vhtm::Event> >", 4220, G__Dict_441_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEvhtmcLcLGenEventcOallocatorlEvhtmcLcLGenEventgRsPgR(void) {
   /* vector<vhtm::GenEvent,allocator<vhtm::GenEvent> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenEventcOallocatorlEvhtmcLcLGenEventgRsPgR));
   G__memfunc_setup("at",213,G__Dict_445_0_1, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenEvent), G__defined_typename("vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__Dict_445_0_2, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenEvent), G__defined_typename("vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__Dict_445_0_3, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenEventcOallocatorlEvhtmcLcLGenEventgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__Dict_445_0_4, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenEventcOallocatorlEvhtmcLcLGenEventgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__Dict_445_0_5, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLGenEventcOallocatorlEvhtmcLcLGenEventgRsPgRcLcLiteratorgR), G__defined_typename("vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__Dict_445_0_6, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLGenEventcOallocatorlEvhtmcLcLGenEventgRsPgRcLcLiteratorgR), G__defined_typename("vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__Dict_445_0_7, 107, -1, G__defined_typename("vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__Dict_445_0_8, 107, -1, G__defined_typename("vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_445_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_445_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::size_type' 0 - sz u 'vhtm::GenEvent' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__Dict_445_0_11, 107, -1, G__defined_typename("vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__Dict_445_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_445_0_13, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenEvent), G__defined_typename("vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_445_0_14, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenEvent), G__defined_typename("vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >",4658,G__Dict_445_0_15, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenEventcOallocatorlEvhtmcLcLGenEventgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >",4658,G__Dict_445_0_16, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenEventcOallocatorlEvhtmcLcLGenEventgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::size_type' 0 - n u 'vhtm::GenEvent' - 11 'vhtm::GenEvent()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >",4658,G__Dict_445_0_17, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenEventcOallocatorlEvhtmcLcLGenEventgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >",4658,G__Dict_445_0_18, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenEventcOallocatorlEvhtmcLcLGenEventgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::iterator' 'vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::const_iterator' 10 - first u 'vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::iterator' 'vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__Dict_445_0_19, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenEventcOallocatorlEvhtmcLcLGenEventgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__Dict_445_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__Dict_445_0_21, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenEvent), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__Dict_445_0_22, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenEvent), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__Dict_445_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vhtm::GenEvent' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__Dict_445_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_445_0_25, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenEventcOallocatorlEvhtmcLcLGenEventgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::iterator' - 0 - position u 'vhtm::GenEvent' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_445_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::iterator' - 0 - position u 'vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::iterator' 'vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::const_iterator' 10 - first "
"u 'vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::iterator' 'vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_445_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::iterator' - 0 - position k - 'vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::size_type' 0 - n "
"u 'vhtm::GenEvent' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__Dict_445_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_445_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_445_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::iterator' - 0 - first u 'vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__Dict_445_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >", 4784, G__Dict_445_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEvhtmcLcLElectroncOallocatorlEvhtmcLcLElectrongRsPgR(void) {
   /* vector<vhtm::Electron,allocator<vhtm::Electron> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLElectroncOallocatorlEvhtmcLcLElectrongRsPgR));
   G__memfunc_setup("at",213,G__Dict_449_0_1, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLElectron), G__defined_typename("vector<vhtm::Electron,allocator<vhtm::Electron> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vhtm::Electron,allocator<vhtm::Electron> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__Dict_449_0_2, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLElectron), G__defined_typename("vector<vhtm::Electron,allocator<vhtm::Electron> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vhtm::Electron,allocator<vhtm::Electron> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__Dict_449_0_3, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLElectroncOallocatorlEvhtmcLcLElectrongRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__Dict_449_0_4, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLElectroncOallocatorlEvhtmcLcLElectrongRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__Dict_449_0_5, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLElectroncOallocatorlEvhtmcLcLElectrongRsPgRcLcLiteratorgR), G__defined_typename("vector<vhtm::Electron,allocator<vhtm::Electron> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__Dict_449_0_6, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLElectroncOallocatorlEvhtmcLcLElectrongRsPgRcLcLiteratorgR), G__defined_typename("vector<vhtm::Electron,allocator<vhtm::Electron> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__Dict_449_0_7, 107, -1, G__defined_typename("vector<vhtm::Electron,allocator<vhtm::Electron> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__Dict_449_0_8, 107, -1, G__defined_typename("vector<vhtm::Electron,allocator<vhtm::Electron> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_449_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vhtm::Electron,allocator<vhtm::Electron> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_449_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<vhtm::Electron,allocator<vhtm::Electron> >::size_type' 0 - sz u 'vhtm::Electron' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__Dict_449_0_11, 107, -1, G__defined_typename("vector<vhtm::Electron,allocator<vhtm::Electron> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__Dict_449_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_449_0_13, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLElectron), G__defined_typename("vector<vhtm::Electron,allocator<vhtm::Electron> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vhtm::Electron,allocator<vhtm::Electron> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_449_0_14, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLElectron), G__defined_typename("vector<vhtm::Electron,allocator<vhtm::Electron> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vhtm::Electron,allocator<vhtm::Electron> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vhtm::Electron,allocator<vhtm::Electron> >",4722,G__Dict_449_0_15, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLElectroncOallocatorlEvhtmcLcLElectrongRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vhtm::Electron,allocator<vhtm::Electron> >",4722,G__Dict_449_0_16, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLElectroncOallocatorlEvhtmcLcLElectrongRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<vhtm::Electron,allocator<vhtm::Electron> >::size_type' 0 - n u 'vhtm::Electron' - 11 'vhtm::Electron()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vhtm::Electron,allocator<vhtm::Electron> >",4722,G__Dict_449_0_17, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLElectroncOallocatorlEvhtmcLcLElectrongRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<vhtm::Electron,allocator<vhtm::Electron> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vhtm::Electron,allocator<vhtm::Electron> >",4722,G__Dict_449_0_18, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLElectroncOallocatorlEvhtmcLcLElectrongRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<vhtm::Electron,allocator<vhtm::Electron> >::iterator' 'vector<vhtm::Electron,allocator<vhtm::Electron> >::const_iterator' 10 - first u 'vector<vhtm::Electron,allocator<vhtm::Electron> >::iterator' 'vector<vhtm::Electron,allocator<vhtm::Electron> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__Dict_449_0_19, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLElectroncOallocatorlEvhtmcLcLElectrongRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<vhtm::Electron,allocator<vhtm::Electron> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__Dict_449_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vhtm::Electron,allocator<vhtm::Electron> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__Dict_449_0_21, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLElectron), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__Dict_449_0_22, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLElectron), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__Dict_449_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vhtm::Electron' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__Dict_449_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vhtm::Electron,allocator<vhtm::Electron> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_449_0_25, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLElectroncOallocatorlEvhtmcLcLElectrongRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<vhtm::Electron,allocator<vhtm::Electron> >::iterator' - 0 - position u 'vhtm::Electron' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_449_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vhtm::Electron,allocator<vhtm::Electron> >::iterator' - 0 - position u 'vector<vhtm::Electron,allocator<vhtm::Electron> >::iterator' 'vector<vhtm::Electron,allocator<vhtm::Electron> >::const_iterator' 10 - first "
"u 'vector<vhtm::Electron,allocator<vhtm::Electron> >::iterator' 'vector<vhtm::Electron,allocator<vhtm::Electron> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_449_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vhtm::Electron,allocator<vhtm::Electron> >::iterator' - 0 - position k - 'vector<vhtm::Electron,allocator<vhtm::Electron> >::size_type' 0 - n "
"u 'vhtm::Electron' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__Dict_449_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_449_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vhtm::Electron,allocator<vhtm::Electron> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_449_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<vhtm::Electron,allocator<vhtm::Electron> >::iterator' - 0 - first u 'vector<vhtm::Electron,allocator<vhtm::Electron> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__Dict_449_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<vhtm::Electron,allocator<vhtm::Electron> >", 4848, G__Dict_449_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEvhtmcLcLGenParticlecOallocatorlEvhtmcLcLGenParticlegRsPgR(void) {
   /* vector<vhtm::GenParticle,allocator<vhtm::GenParticle> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenParticlecOallocatorlEvhtmcLcLGenParticlegRsPgR));
   G__memfunc_setup("at",213,G__Dict_453_0_1, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenParticle), G__defined_typename("vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__Dict_453_0_2, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenParticle), G__defined_typename("vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__Dict_453_0_3, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenParticlecOallocatorlEvhtmcLcLGenParticlegRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__Dict_453_0_4, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenParticlecOallocatorlEvhtmcLcLGenParticlegRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__Dict_453_0_5, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLGenParticlecOallocatorlEvhtmcLcLGenParticlegRsPgRcLcLiteratorgR), G__defined_typename("vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__Dict_453_0_6, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLGenParticlecOallocatorlEvhtmcLcLGenParticlegRsPgRcLcLiteratorgR), G__defined_typename("vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__Dict_453_0_7, 107, -1, G__defined_typename("vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__Dict_453_0_8, 107, -1, G__defined_typename("vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_453_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_453_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::size_type' 0 - sz u 'vhtm::GenParticle' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__Dict_453_0_11, 107, -1, G__defined_typename("vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__Dict_453_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_453_0_13, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenParticle), G__defined_typename("vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_453_0_14, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenParticle), G__defined_typename("vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >",5270,G__Dict_453_0_15, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenParticlecOallocatorlEvhtmcLcLGenParticlegRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >",5270,G__Dict_453_0_16, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenParticlecOallocatorlEvhtmcLcLGenParticlegRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::size_type' 0 - n u 'vhtm::GenParticle' - 11 'vhtm::GenParticle()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >",5270,G__Dict_453_0_17, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenParticlecOallocatorlEvhtmcLcLGenParticlegRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >",5270,G__Dict_453_0_18, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenParticlecOallocatorlEvhtmcLcLGenParticlegRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::iterator' 'vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::const_iterator' 10 - first u 'vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::iterator' 'vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__Dict_453_0_19, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenParticlecOallocatorlEvhtmcLcLGenParticlegRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__Dict_453_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__Dict_453_0_21, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenParticle), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__Dict_453_0_22, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenParticle), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__Dict_453_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vhtm::GenParticle' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__Dict_453_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_453_0_25, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenParticlecOallocatorlEvhtmcLcLGenParticlegRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::iterator' - 0 - position u 'vhtm::GenParticle' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_453_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::iterator' - 0 - position u 'vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::iterator' 'vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::const_iterator' 10 - first "
"u 'vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::iterator' 'vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_453_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::iterator' - 0 - position k - 'vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::size_type' 0 - n "
"u 'vhtm::GenParticle' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__Dict_453_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_453_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_453_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::iterator' - 0 - first u 'vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__Dict_453_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >", 5396, G__Dict_453_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEvhtmcLcLGenJetcOallocatorlEvhtmcLcLGenJetgRsPgR(void) {
   /* vector<vhtm::GenJet,allocator<vhtm::GenJet> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenJetcOallocatorlEvhtmcLcLGenJetgRsPgR));
   G__memfunc_setup("at",213,G__Dict_457_0_1, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenJet), G__defined_typename("vector<vhtm::GenJet,allocator<vhtm::GenJet> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vhtm::GenJet,allocator<vhtm::GenJet> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__Dict_457_0_2, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenJet), G__defined_typename("vector<vhtm::GenJet,allocator<vhtm::GenJet> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vhtm::GenJet,allocator<vhtm::GenJet> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__Dict_457_0_3, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenJetcOallocatorlEvhtmcLcLGenJetgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__Dict_457_0_4, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenJetcOallocatorlEvhtmcLcLGenJetgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__Dict_457_0_5, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLGenJetcOallocatorlEvhtmcLcLGenJetgRsPgRcLcLiteratorgR), G__defined_typename("vector<vhtm::GenJet,allocator<vhtm::GenJet> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__Dict_457_0_6, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLGenJetcOallocatorlEvhtmcLcLGenJetgRsPgRcLcLiteratorgR), G__defined_typename("vector<vhtm::GenJet,allocator<vhtm::GenJet> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__Dict_457_0_7, 107, -1, G__defined_typename("vector<vhtm::GenJet,allocator<vhtm::GenJet> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__Dict_457_0_8, 107, -1, G__defined_typename("vector<vhtm::GenJet,allocator<vhtm::GenJet> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_457_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vhtm::GenJet,allocator<vhtm::GenJet> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_457_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<vhtm::GenJet,allocator<vhtm::GenJet> >::size_type' 0 - sz u 'vhtm::GenJet' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__Dict_457_0_11, 107, -1, G__defined_typename("vector<vhtm::GenJet,allocator<vhtm::GenJet> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__Dict_457_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_457_0_13, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenJet), G__defined_typename("vector<vhtm::GenJet,allocator<vhtm::GenJet> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vhtm::GenJet,allocator<vhtm::GenJet> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_457_0_14, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenJet), G__defined_typename("vector<vhtm::GenJet,allocator<vhtm::GenJet> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vhtm::GenJet,allocator<vhtm::GenJet> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vhtm::GenJet,allocator<vhtm::GenJet> >",4212,G__Dict_457_0_15, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenJetcOallocatorlEvhtmcLcLGenJetgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vhtm::GenJet,allocator<vhtm::GenJet> >",4212,G__Dict_457_0_16, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenJetcOallocatorlEvhtmcLcLGenJetgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<vhtm::GenJet,allocator<vhtm::GenJet> >::size_type' 0 - n u 'vhtm::GenJet' - 11 'vhtm::GenJet()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vhtm::GenJet,allocator<vhtm::GenJet> >",4212,G__Dict_457_0_17, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenJetcOallocatorlEvhtmcLcLGenJetgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<vhtm::GenJet,allocator<vhtm::GenJet> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vhtm::GenJet,allocator<vhtm::GenJet> >",4212,G__Dict_457_0_18, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenJetcOallocatorlEvhtmcLcLGenJetgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<vhtm::GenJet,allocator<vhtm::GenJet> >::iterator' 'vector<vhtm::GenJet,allocator<vhtm::GenJet> >::const_iterator' 10 - first u 'vector<vhtm::GenJet,allocator<vhtm::GenJet> >::iterator' 'vector<vhtm::GenJet,allocator<vhtm::GenJet> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__Dict_457_0_19, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenJetcOallocatorlEvhtmcLcLGenJetgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<vhtm::GenJet,allocator<vhtm::GenJet> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__Dict_457_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vhtm::GenJet,allocator<vhtm::GenJet> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__Dict_457_0_21, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenJet), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__Dict_457_0_22, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenJet), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__Dict_457_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vhtm::GenJet' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__Dict_457_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vhtm::GenJet,allocator<vhtm::GenJet> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_457_0_25, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenJetcOallocatorlEvhtmcLcLGenJetgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<vhtm::GenJet,allocator<vhtm::GenJet> >::iterator' - 0 - position u 'vhtm::GenJet' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_457_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vhtm::GenJet,allocator<vhtm::GenJet> >::iterator' - 0 - position u 'vector<vhtm::GenJet,allocator<vhtm::GenJet> >::iterator' 'vector<vhtm::GenJet,allocator<vhtm::GenJet> >::const_iterator' 10 - first "
"u 'vector<vhtm::GenJet,allocator<vhtm::GenJet> >::iterator' 'vector<vhtm::GenJet,allocator<vhtm::GenJet> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_457_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vhtm::GenJet,allocator<vhtm::GenJet> >::iterator' - 0 - position k - 'vector<vhtm::GenJet,allocator<vhtm::GenJet> >::size_type' 0 - n "
"u 'vhtm::GenJet' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__Dict_457_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_457_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vhtm::GenJet,allocator<vhtm::GenJet> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_457_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<vhtm::GenJet,allocator<vhtm::GenJet> >::iterator' - 0 - first u 'vector<vhtm::GenJet,allocator<vhtm::GenJet> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__Dict_457_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<vhtm::GenJet,allocator<vhtm::GenJet> >", 4338, G__Dict_457_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEvhtmcLcLGenMETcOallocatorlEvhtmcLcLGenMETgRsPgR(void) {
   /* vector<vhtm::GenMET,allocator<vhtm::GenMET> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenMETcOallocatorlEvhtmcLcLGenMETgRsPgR));
   G__memfunc_setup("at",213,G__Dict_461_0_1, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenMET), G__defined_typename("vector<vhtm::GenMET,allocator<vhtm::GenMET> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vhtm::GenMET,allocator<vhtm::GenMET> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__Dict_461_0_2, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenMET), G__defined_typename("vector<vhtm::GenMET,allocator<vhtm::GenMET> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vhtm::GenMET,allocator<vhtm::GenMET> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__Dict_461_0_3, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenMETcOallocatorlEvhtmcLcLGenMETgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__Dict_461_0_4, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenMETcOallocatorlEvhtmcLcLGenMETgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__Dict_461_0_5, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLGenMETcOallocatorlEvhtmcLcLGenMETgRsPgRcLcLiteratorgR), G__defined_typename("vector<vhtm::GenMET,allocator<vhtm::GenMET> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__Dict_461_0_6, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLGenMETcOallocatorlEvhtmcLcLGenMETgRsPgRcLcLiteratorgR), G__defined_typename("vector<vhtm::GenMET,allocator<vhtm::GenMET> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__Dict_461_0_7, 107, -1, G__defined_typename("vector<vhtm::GenMET,allocator<vhtm::GenMET> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__Dict_461_0_8, 107, -1, G__defined_typename("vector<vhtm::GenMET,allocator<vhtm::GenMET> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_461_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vhtm::GenMET,allocator<vhtm::GenMET> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_461_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<vhtm::GenMET,allocator<vhtm::GenMET> >::size_type' 0 - sz u 'vhtm::GenMET' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__Dict_461_0_11, 107, -1, G__defined_typename("vector<vhtm::GenMET,allocator<vhtm::GenMET> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__Dict_461_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_461_0_13, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenMET), G__defined_typename("vector<vhtm::GenMET,allocator<vhtm::GenMET> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vhtm::GenMET,allocator<vhtm::GenMET> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_461_0_14, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenMET), G__defined_typename("vector<vhtm::GenMET,allocator<vhtm::GenMET> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vhtm::GenMET,allocator<vhtm::GenMET> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vhtm::GenMET,allocator<vhtm::GenMET> >",4090,G__Dict_461_0_15, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenMETcOallocatorlEvhtmcLcLGenMETgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vhtm::GenMET,allocator<vhtm::GenMET> >",4090,G__Dict_461_0_16, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenMETcOallocatorlEvhtmcLcLGenMETgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<vhtm::GenMET,allocator<vhtm::GenMET> >::size_type' 0 - n u 'vhtm::GenMET' - 11 'vhtm::GenMET()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vhtm::GenMET,allocator<vhtm::GenMET> >",4090,G__Dict_461_0_17, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenMETcOallocatorlEvhtmcLcLGenMETgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<vhtm::GenMET,allocator<vhtm::GenMET> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vhtm::GenMET,allocator<vhtm::GenMET> >",4090,G__Dict_461_0_18, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenMETcOallocatorlEvhtmcLcLGenMETgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<vhtm::GenMET,allocator<vhtm::GenMET> >::iterator' 'vector<vhtm::GenMET,allocator<vhtm::GenMET> >::const_iterator' 10 - first u 'vector<vhtm::GenMET,allocator<vhtm::GenMET> >::iterator' 'vector<vhtm::GenMET,allocator<vhtm::GenMET> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__Dict_461_0_19, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenMETcOallocatorlEvhtmcLcLGenMETgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<vhtm::GenMET,allocator<vhtm::GenMET> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__Dict_461_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vhtm::GenMET,allocator<vhtm::GenMET> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__Dict_461_0_21, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenMET), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__Dict_461_0_22, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLGenMET), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__Dict_461_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vhtm::GenMET' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__Dict_461_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vhtm::GenMET,allocator<vhtm::GenMET> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_461_0_25, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLGenMETcOallocatorlEvhtmcLcLGenMETgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<vhtm::GenMET,allocator<vhtm::GenMET> >::iterator' - 0 - position u 'vhtm::GenMET' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_461_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vhtm::GenMET,allocator<vhtm::GenMET> >::iterator' - 0 - position u 'vector<vhtm::GenMET,allocator<vhtm::GenMET> >::iterator' 'vector<vhtm::GenMET,allocator<vhtm::GenMET> >::const_iterator' 10 - first "
"u 'vector<vhtm::GenMET,allocator<vhtm::GenMET> >::iterator' 'vector<vhtm::GenMET,allocator<vhtm::GenMET> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_461_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vhtm::GenMET,allocator<vhtm::GenMET> >::iterator' - 0 - position k - 'vector<vhtm::GenMET,allocator<vhtm::GenMET> >::size_type' 0 - n "
"u 'vhtm::GenMET' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__Dict_461_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_461_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vhtm::GenMET,allocator<vhtm::GenMET> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_461_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<vhtm::GenMET,allocator<vhtm::GenMET> >::iterator' - 0 - first u 'vector<vhtm::GenMET,allocator<vhtm::GenMET> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__Dict_461_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<vhtm::GenMET,allocator<vhtm::GenMET> >", 4216, G__Dict_461_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEvhtmcLcLMETcOallocatorlEvhtmcLcLMETgRsPgR(void) {
   /* vector<vhtm::MET,allocator<vhtm::MET> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLMETcOallocatorlEvhtmcLcLMETgRsPgR));
   G__memfunc_setup("at",213,G__Dict_465_0_1, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLMET), G__defined_typename("vector<vhtm::MET,allocator<vhtm::MET> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vhtm::MET,allocator<vhtm::MET> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__Dict_465_0_2, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLMET), G__defined_typename("vector<vhtm::MET,allocator<vhtm::MET> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vhtm::MET,allocator<vhtm::MET> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__Dict_465_0_3, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLMETcOallocatorlEvhtmcLcLMETgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__Dict_465_0_4, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLMETcOallocatorlEvhtmcLcLMETgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__Dict_465_0_5, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLMETcOallocatorlEvhtmcLcLMETgRsPgRcLcLiteratorgR), G__defined_typename("vector<vhtm::MET,allocator<vhtm::MET> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__Dict_465_0_6, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLMETcOallocatorlEvhtmcLcLMETgRsPgRcLcLiteratorgR), G__defined_typename("vector<vhtm::MET,allocator<vhtm::MET> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__Dict_465_0_7, 107, -1, G__defined_typename("vector<vhtm::MET,allocator<vhtm::MET> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__Dict_465_0_8, 107, -1, G__defined_typename("vector<vhtm::MET,allocator<vhtm::MET> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_465_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vhtm::MET,allocator<vhtm::MET> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_465_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<vhtm::MET,allocator<vhtm::MET> >::size_type' 0 - sz u 'vhtm::MET' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__Dict_465_0_11, 107, -1, G__defined_typename("vector<vhtm::MET,allocator<vhtm::MET> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__Dict_465_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_465_0_13, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLMET), G__defined_typename("vector<vhtm::MET,allocator<vhtm::MET> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vhtm::MET,allocator<vhtm::MET> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_465_0_14, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLMET), G__defined_typename("vector<vhtm::MET,allocator<vhtm::MET> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vhtm::MET,allocator<vhtm::MET> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vhtm::MET,allocator<vhtm::MET> >",3526,G__Dict_465_0_15, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLMETcOallocatorlEvhtmcLcLMETgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vhtm::MET,allocator<vhtm::MET> >",3526,G__Dict_465_0_16, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLMETcOallocatorlEvhtmcLcLMETgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<vhtm::MET,allocator<vhtm::MET> >::size_type' 0 - n u 'vhtm::MET' - 11 'vhtm::MET()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vhtm::MET,allocator<vhtm::MET> >",3526,G__Dict_465_0_17, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLMETcOallocatorlEvhtmcLcLMETgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<vhtm::MET,allocator<vhtm::MET> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vhtm::MET,allocator<vhtm::MET> >",3526,G__Dict_465_0_18, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLMETcOallocatorlEvhtmcLcLMETgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<vhtm::MET,allocator<vhtm::MET> >::iterator' 'vector<vhtm::MET,allocator<vhtm::MET> >::const_iterator' 10 - first u 'vector<vhtm::MET,allocator<vhtm::MET> >::iterator' 'vector<vhtm::MET,allocator<vhtm::MET> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__Dict_465_0_19, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLMETcOallocatorlEvhtmcLcLMETgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<vhtm::MET,allocator<vhtm::MET> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__Dict_465_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vhtm::MET,allocator<vhtm::MET> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__Dict_465_0_21, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLMET), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__Dict_465_0_22, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLMET), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__Dict_465_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vhtm::MET' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__Dict_465_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vhtm::MET,allocator<vhtm::MET> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_465_0_25, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLMETcOallocatorlEvhtmcLcLMETgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<vhtm::MET,allocator<vhtm::MET> >::iterator' - 0 - position u 'vhtm::MET' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_465_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vhtm::MET,allocator<vhtm::MET> >::iterator' - 0 - position u 'vector<vhtm::MET,allocator<vhtm::MET> >::iterator' 'vector<vhtm::MET,allocator<vhtm::MET> >::const_iterator' 10 - first "
"u 'vector<vhtm::MET,allocator<vhtm::MET> >::iterator' 'vector<vhtm::MET,allocator<vhtm::MET> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_465_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vhtm::MET,allocator<vhtm::MET> >::iterator' - 0 - position k - 'vector<vhtm::MET,allocator<vhtm::MET> >::size_type' 0 - n "
"u 'vhtm::MET' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__Dict_465_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_465_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vhtm::MET,allocator<vhtm::MET> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_465_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<vhtm::MET,allocator<vhtm::MET> >::iterator' - 0 - first u 'vector<vhtm::MET,allocator<vhtm::MET> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__Dict_465_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<vhtm::MET,allocator<vhtm::MET> >", 3652, G__Dict_465_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEvhtmcLcLTaucOallocatorlEvhtmcLcLTaugRsPgR(void) {
   /* vector<vhtm::Tau,allocator<vhtm::Tau> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLTaucOallocatorlEvhtmcLcLTaugRsPgR));
   G__memfunc_setup("at",213,G__Dict_469_0_1, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLTau), G__defined_typename("vector<vhtm::Tau,allocator<vhtm::Tau> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vhtm::Tau,allocator<vhtm::Tau> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__Dict_469_0_2, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLTau), G__defined_typename("vector<vhtm::Tau,allocator<vhtm::Tau> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vhtm::Tau,allocator<vhtm::Tau> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__Dict_469_0_3, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLTaucOallocatorlEvhtmcLcLTaugRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__Dict_469_0_4, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLTaucOallocatorlEvhtmcLcLTaugRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__Dict_469_0_5, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLTaucOallocatorlEvhtmcLcLTaugRsPgRcLcLiteratorgR), G__defined_typename("vector<vhtm::Tau,allocator<vhtm::Tau> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__Dict_469_0_6, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLTaucOallocatorlEvhtmcLcLTaugRsPgRcLcLiteratorgR), G__defined_typename("vector<vhtm::Tau,allocator<vhtm::Tau> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__Dict_469_0_7, 107, -1, G__defined_typename("vector<vhtm::Tau,allocator<vhtm::Tau> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__Dict_469_0_8, 107, -1, G__defined_typename("vector<vhtm::Tau,allocator<vhtm::Tau> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_469_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vhtm::Tau,allocator<vhtm::Tau> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_469_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<vhtm::Tau,allocator<vhtm::Tau> >::size_type' 0 - sz u 'vhtm::Tau' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__Dict_469_0_11, 107, -1, G__defined_typename("vector<vhtm::Tau,allocator<vhtm::Tau> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__Dict_469_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_469_0_13, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLTau), G__defined_typename("vector<vhtm::Tau,allocator<vhtm::Tau> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vhtm::Tau,allocator<vhtm::Tau> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_469_0_14, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLTau), G__defined_typename("vector<vhtm::Tau,allocator<vhtm::Tau> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vhtm::Tau,allocator<vhtm::Tau> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vhtm::Tau,allocator<vhtm::Tau> >",3662,G__Dict_469_0_15, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLTaucOallocatorlEvhtmcLcLTaugRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vhtm::Tau,allocator<vhtm::Tau> >",3662,G__Dict_469_0_16, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLTaucOallocatorlEvhtmcLcLTaugRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<vhtm::Tau,allocator<vhtm::Tau> >::size_type' 0 - n u 'vhtm::Tau' - 11 'vhtm::Tau()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vhtm::Tau,allocator<vhtm::Tau> >",3662,G__Dict_469_0_17, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLTaucOallocatorlEvhtmcLcLTaugRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<vhtm::Tau,allocator<vhtm::Tau> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vhtm::Tau,allocator<vhtm::Tau> >",3662,G__Dict_469_0_18, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLTaucOallocatorlEvhtmcLcLTaugRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<vhtm::Tau,allocator<vhtm::Tau> >::iterator' 'vector<vhtm::Tau,allocator<vhtm::Tau> >::const_iterator' 10 - first u 'vector<vhtm::Tau,allocator<vhtm::Tau> >::iterator' 'vector<vhtm::Tau,allocator<vhtm::Tau> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__Dict_469_0_19, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLTaucOallocatorlEvhtmcLcLTaugRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<vhtm::Tau,allocator<vhtm::Tau> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__Dict_469_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vhtm::Tau,allocator<vhtm::Tau> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__Dict_469_0_21, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLTau), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__Dict_469_0_22, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLTau), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__Dict_469_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vhtm::Tau' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__Dict_469_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vhtm::Tau,allocator<vhtm::Tau> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_469_0_25, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLTaucOallocatorlEvhtmcLcLTaugRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<vhtm::Tau,allocator<vhtm::Tau> >::iterator' - 0 - position u 'vhtm::Tau' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_469_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vhtm::Tau,allocator<vhtm::Tau> >::iterator' - 0 - position u 'vector<vhtm::Tau,allocator<vhtm::Tau> >::iterator' 'vector<vhtm::Tau,allocator<vhtm::Tau> >::const_iterator' 10 - first "
"u 'vector<vhtm::Tau,allocator<vhtm::Tau> >::iterator' 'vector<vhtm::Tau,allocator<vhtm::Tau> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_469_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vhtm::Tau,allocator<vhtm::Tau> >::iterator' - 0 - position k - 'vector<vhtm::Tau,allocator<vhtm::Tau> >::size_type' 0 - n "
"u 'vhtm::Tau' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__Dict_469_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_469_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vhtm::Tau,allocator<vhtm::Tau> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_469_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<vhtm::Tau,allocator<vhtm::Tau> >::iterator' - 0 - first u 'vector<vhtm::Tau,allocator<vhtm::Tau> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__Dict_469_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<vhtm::Tau,allocator<vhtm::Tau> >", 3788, G__Dict_469_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEvhtmcLcLMuoncOallocatorlEvhtmcLcLMuongRsPgR(void) {
   /* vector<vhtm::Muon,allocator<vhtm::Muon> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLMuoncOallocatorlEvhtmcLcLMuongRsPgR));
   G__memfunc_setup("at",213,G__Dict_473_0_1, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLMuon), G__defined_typename("vector<vhtm::Muon,allocator<vhtm::Muon> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vhtm::Muon,allocator<vhtm::Muon> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__Dict_473_0_2, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLMuon), G__defined_typename("vector<vhtm::Muon,allocator<vhtm::Muon> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vhtm::Muon,allocator<vhtm::Muon> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__Dict_473_0_3, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLMuoncOallocatorlEvhtmcLcLMuongRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__Dict_473_0_4, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLMuoncOallocatorlEvhtmcLcLMuongRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__Dict_473_0_5, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLMuoncOallocatorlEvhtmcLcLMuongRsPgRcLcLiteratorgR), G__defined_typename("vector<vhtm::Muon,allocator<vhtm::Muon> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__Dict_473_0_6, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLMuoncOallocatorlEvhtmcLcLMuongRsPgRcLcLiteratorgR), G__defined_typename("vector<vhtm::Muon,allocator<vhtm::Muon> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__Dict_473_0_7, 107, -1, G__defined_typename("vector<vhtm::Muon,allocator<vhtm::Muon> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__Dict_473_0_8, 107, -1, G__defined_typename("vector<vhtm::Muon,allocator<vhtm::Muon> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_473_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vhtm::Muon,allocator<vhtm::Muon> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_473_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<vhtm::Muon,allocator<vhtm::Muon> >::size_type' 0 - sz u 'vhtm::Muon' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__Dict_473_0_11, 107, -1, G__defined_typename("vector<vhtm::Muon,allocator<vhtm::Muon> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__Dict_473_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_473_0_13, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLMuon), G__defined_typename("vector<vhtm::Muon,allocator<vhtm::Muon> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vhtm::Muon,allocator<vhtm::Muon> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_473_0_14, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLMuon), G__defined_typename("vector<vhtm::Muon,allocator<vhtm::Muon> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vhtm::Muon,allocator<vhtm::Muon> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vhtm::Muon,allocator<vhtm::Muon> >",3896,G__Dict_473_0_15, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLMuoncOallocatorlEvhtmcLcLMuongRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vhtm::Muon,allocator<vhtm::Muon> >",3896,G__Dict_473_0_16, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLMuoncOallocatorlEvhtmcLcLMuongRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<vhtm::Muon,allocator<vhtm::Muon> >::size_type' 0 - n u 'vhtm::Muon' - 11 'vhtm::Muon()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vhtm::Muon,allocator<vhtm::Muon> >",3896,G__Dict_473_0_17, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLMuoncOallocatorlEvhtmcLcLMuongRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<vhtm::Muon,allocator<vhtm::Muon> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vhtm::Muon,allocator<vhtm::Muon> >",3896,G__Dict_473_0_18, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLMuoncOallocatorlEvhtmcLcLMuongRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<vhtm::Muon,allocator<vhtm::Muon> >::iterator' 'vector<vhtm::Muon,allocator<vhtm::Muon> >::const_iterator' 10 - first u 'vector<vhtm::Muon,allocator<vhtm::Muon> >::iterator' 'vector<vhtm::Muon,allocator<vhtm::Muon> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__Dict_473_0_19, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLMuoncOallocatorlEvhtmcLcLMuongRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<vhtm::Muon,allocator<vhtm::Muon> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__Dict_473_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vhtm::Muon,allocator<vhtm::Muon> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__Dict_473_0_21, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLMuon), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__Dict_473_0_22, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLMuon), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__Dict_473_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vhtm::Muon' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__Dict_473_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vhtm::Muon,allocator<vhtm::Muon> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_473_0_25, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLMuoncOallocatorlEvhtmcLcLMuongRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<vhtm::Muon,allocator<vhtm::Muon> >::iterator' - 0 - position u 'vhtm::Muon' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_473_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vhtm::Muon,allocator<vhtm::Muon> >::iterator' - 0 - position u 'vector<vhtm::Muon,allocator<vhtm::Muon> >::iterator' 'vector<vhtm::Muon,allocator<vhtm::Muon> >::const_iterator' 10 - first "
"u 'vector<vhtm::Muon,allocator<vhtm::Muon> >::iterator' 'vector<vhtm::Muon,allocator<vhtm::Muon> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_473_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vhtm::Muon,allocator<vhtm::Muon> >::iterator' - 0 - position k - 'vector<vhtm::Muon,allocator<vhtm::Muon> >::size_type' 0 - n "
"u 'vhtm::Muon' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__Dict_473_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_473_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vhtm::Muon,allocator<vhtm::Muon> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_473_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<vhtm::Muon,allocator<vhtm::Muon> >::iterator' - 0 - first u 'vector<vhtm::Muon,allocator<vhtm::Muon> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__Dict_473_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<vhtm::Muon,allocator<vhtm::Muon> >", 4022, G__Dict_473_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEvhtmcLcLJetcOallocatorlEvhtmcLcLJetgRsPgR(void) {
   /* vector<vhtm::Jet,allocator<vhtm::Jet> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLJetcOallocatorlEvhtmcLcLJetgRsPgR));
   G__memfunc_setup("at",213,G__Dict_477_0_1, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLJet), G__defined_typename("vector<vhtm::Jet,allocator<vhtm::Jet> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vhtm::Jet,allocator<vhtm::Jet> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__Dict_477_0_2, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLJet), G__defined_typename("vector<vhtm::Jet,allocator<vhtm::Jet> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vhtm::Jet,allocator<vhtm::Jet> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__Dict_477_0_3, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLJetcOallocatorlEvhtmcLcLJetgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__Dict_477_0_4, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLJetcOallocatorlEvhtmcLcLJetgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__Dict_477_0_5, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLJetcOallocatorlEvhtmcLcLJetgRsPgRcLcLiteratorgR), G__defined_typename("vector<vhtm::Jet,allocator<vhtm::Jet> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__Dict_477_0_6, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLJetcOallocatorlEvhtmcLcLJetgRsPgRcLcLiteratorgR), G__defined_typename("vector<vhtm::Jet,allocator<vhtm::Jet> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__Dict_477_0_7, 107, -1, G__defined_typename("vector<vhtm::Jet,allocator<vhtm::Jet> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__Dict_477_0_8, 107, -1, G__defined_typename("vector<vhtm::Jet,allocator<vhtm::Jet> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_477_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vhtm::Jet,allocator<vhtm::Jet> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_477_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<vhtm::Jet,allocator<vhtm::Jet> >::size_type' 0 - sz u 'vhtm::Jet' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__Dict_477_0_11, 107, -1, G__defined_typename("vector<vhtm::Jet,allocator<vhtm::Jet> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__Dict_477_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_477_0_13, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLJet), G__defined_typename("vector<vhtm::Jet,allocator<vhtm::Jet> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vhtm::Jet,allocator<vhtm::Jet> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_477_0_14, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLJet), G__defined_typename("vector<vhtm::Jet,allocator<vhtm::Jet> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vhtm::Jet,allocator<vhtm::Jet> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vhtm::Jet,allocator<vhtm::Jet> >",3648,G__Dict_477_0_15, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLJetcOallocatorlEvhtmcLcLJetgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vhtm::Jet,allocator<vhtm::Jet> >",3648,G__Dict_477_0_16, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLJetcOallocatorlEvhtmcLcLJetgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<vhtm::Jet,allocator<vhtm::Jet> >::size_type' 0 - n u 'vhtm::Jet' - 11 'vhtm::Jet()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vhtm::Jet,allocator<vhtm::Jet> >",3648,G__Dict_477_0_17, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLJetcOallocatorlEvhtmcLcLJetgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<vhtm::Jet,allocator<vhtm::Jet> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vhtm::Jet,allocator<vhtm::Jet> >",3648,G__Dict_477_0_18, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLJetcOallocatorlEvhtmcLcLJetgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<vhtm::Jet,allocator<vhtm::Jet> >::iterator' 'vector<vhtm::Jet,allocator<vhtm::Jet> >::const_iterator' 10 - first u 'vector<vhtm::Jet,allocator<vhtm::Jet> >::iterator' 'vector<vhtm::Jet,allocator<vhtm::Jet> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__Dict_477_0_19, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLJetcOallocatorlEvhtmcLcLJetgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<vhtm::Jet,allocator<vhtm::Jet> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__Dict_477_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vhtm::Jet,allocator<vhtm::Jet> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__Dict_477_0_21, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLJet), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__Dict_477_0_22, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLJet), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__Dict_477_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vhtm::Jet' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__Dict_477_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vhtm::Jet,allocator<vhtm::Jet> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_477_0_25, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLJetcOallocatorlEvhtmcLcLJetgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<vhtm::Jet,allocator<vhtm::Jet> >::iterator' - 0 - position u 'vhtm::Jet' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_477_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vhtm::Jet,allocator<vhtm::Jet> >::iterator' - 0 - position u 'vector<vhtm::Jet,allocator<vhtm::Jet> >::iterator' 'vector<vhtm::Jet,allocator<vhtm::Jet> >::const_iterator' 10 - first "
"u 'vector<vhtm::Jet,allocator<vhtm::Jet> >::iterator' 'vector<vhtm::Jet,allocator<vhtm::Jet> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_477_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vhtm::Jet,allocator<vhtm::Jet> >::iterator' - 0 - position k - 'vector<vhtm::Jet,allocator<vhtm::Jet> >::size_type' 0 - n "
"u 'vhtm::Jet' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__Dict_477_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_477_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vhtm::Jet,allocator<vhtm::Jet> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_477_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<vhtm::Jet,allocator<vhtm::Jet> >::iterator' - 0 - first u 'vector<vhtm::Jet,allocator<vhtm::Jet> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__Dict_477_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<vhtm::Jet,allocator<vhtm::Jet> >", 3774, G__Dict_477_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEvhtmcLcLVertexcOallocatorlEvhtmcLcLVertexgRsPgR(void) {
   /* vector<vhtm::Vertex,allocator<vhtm::Vertex> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLVertexcOallocatorlEvhtmcLcLVertexgRsPgR));
   G__memfunc_setup("at",213,G__Dict_481_0_1, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLVertex), G__defined_typename("vector<vhtm::Vertex,allocator<vhtm::Vertex> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vhtm::Vertex,allocator<vhtm::Vertex> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__Dict_481_0_2, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLVertex), G__defined_typename("vector<vhtm::Vertex,allocator<vhtm::Vertex> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vhtm::Vertex,allocator<vhtm::Vertex> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__Dict_481_0_3, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLVertexcOallocatorlEvhtmcLcLVertexgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__Dict_481_0_4, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLVertexcOallocatorlEvhtmcLcLVertexgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__Dict_481_0_5, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLVertexcOallocatorlEvhtmcLcLVertexgRsPgRcLcLiteratorgR), G__defined_typename("vector<vhtm::Vertex,allocator<vhtm::Vertex> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__Dict_481_0_6, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLVertexcOallocatorlEvhtmcLcLVertexgRsPgRcLcLiteratorgR), G__defined_typename("vector<vhtm::Vertex,allocator<vhtm::Vertex> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__Dict_481_0_7, 107, -1, G__defined_typename("vector<vhtm::Vertex,allocator<vhtm::Vertex> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__Dict_481_0_8, 107, -1, G__defined_typename("vector<vhtm::Vertex,allocator<vhtm::Vertex> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_481_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vhtm::Vertex,allocator<vhtm::Vertex> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_481_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<vhtm::Vertex,allocator<vhtm::Vertex> >::size_type' 0 - sz u 'vhtm::Vertex' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__Dict_481_0_11, 107, -1, G__defined_typename("vector<vhtm::Vertex,allocator<vhtm::Vertex> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__Dict_481_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_481_0_13, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLVertex), G__defined_typename("vector<vhtm::Vertex,allocator<vhtm::Vertex> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vhtm::Vertex,allocator<vhtm::Vertex> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_481_0_14, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLVertex), G__defined_typename("vector<vhtm::Vertex,allocator<vhtm::Vertex> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vhtm::Vertex,allocator<vhtm::Vertex> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vhtm::Vertex,allocator<vhtm::Vertex> >",4342,G__Dict_481_0_15, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLVertexcOallocatorlEvhtmcLcLVertexgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vhtm::Vertex,allocator<vhtm::Vertex> >",4342,G__Dict_481_0_16, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLVertexcOallocatorlEvhtmcLcLVertexgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<vhtm::Vertex,allocator<vhtm::Vertex> >::size_type' 0 - n u 'vhtm::Vertex' - 11 'vhtm::Vertex()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vhtm::Vertex,allocator<vhtm::Vertex> >",4342,G__Dict_481_0_17, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLVertexcOallocatorlEvhtmcLcLVertexgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<vhtm::Vertex,allocator<vhtm::Vertex> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vhtm::Vertex,allocator<vhtm::Vertex> >",4342,G__Dict_481_0_18, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLVertexcOallocatorlEvhtmcLcLVertexgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<vhtm::Vertex,allocator<vhtm::Vertex> >::iterator' 'vector<vhtm::Vertex,allocator<vhtm::Vertex> >::const_iterator' 10 - first u 'vector<vhtm::Vertex,allocator<vhtm::Vertex> >::iterator' 'vector<vhtm::Vertex,allocator<vhtm::Vertex> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__Dict_481_0_19, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLVertexcOallocatorlEvhtmcLcLVertexgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<vhtm::Vertex,allocator<vhtm::Vertex> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__Dict_481_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vhtm::Vertex,allocator<vhtm::Vertex> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__Dict_481_0_21, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLVertex), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__Dict_481_0_22, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLVertex), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__Dict_481_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vhtm::Vertex' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__Dict_481_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vhtm::Vertex,allocator<vhtm::Vertex> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_481_0_25, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLVertexcOallocatorlEvhtmcLcLVertexgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<vhtm::Vertex,allocator<vhtm::Vertex> >::iterator' - 0 - position u 'vhtm::Vertex' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_481_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vhtm::Vertex,allocator<vhtm::Vertex> >::iterator' - 0 - position u 'vector<vhtm::Vertex,allocator<vhtm::Vertex> >::iterator' 'vector<vhtm::Vertex,allocator<vhtm::Vertex> >::const_iterator' 10 - first "
"u 'vector<vhtm::Vertex,allocator<vhtm::Vertex> >::iterator' 'vector<vhtm::Vertex,allocator<vhtm::Vertex> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_481_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vhtm::Vertex,allocator<vhtm::Vertex> >::iterator' - 0 - position k - 'vector<vhtm::Vertex,allocator<vhtm::Vertex> >::size_type' 0 - n "
"u 'vhtm::Vertex' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__Dict_481_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_481_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vhtm::Vertex,allocator<vhtm::Vertex> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_481_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<vhtm::Vertex,allocator<vhtm::Vertex> >::iterator' - 0 - first u 'vector<vhtm::Vertex,allocator<vhtm::Vertex> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__Dict_481_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<vhtm::Vertex,allocator<vhtm::Vertex> >", 4468, G__Dict_481_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEvhtmcLcLPhotoncOallocatorlEvhtmcLcLPhotongRsPgR(void) {
   /* vector<vhtm::Photon,allocator<vhtm::Photon> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLPhotoncOallocatorlEvhtmcLcLPhotongRsPgR));
   G__memfunc_setup("at",213,G__Dict_485_0_1, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLPhoton), G__defined_typename("vector<vhtm::Photon,allocator<vhtm::Photon> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vhtm::Photon,allocator<vhtm::Photon> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__Dict_485_0_2, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLPhoton), G__defined_typename("vector<vhtm::Photon,allocator<vhtm::Photon> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vhtm::Photon,allocator<vhtm::Photon> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__Dict_485_0_3, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLPhotoncOallocatorlEvhtmcLcLPhotongRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__Dict_485_0_4, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLPhotoncOallocatorlEvhtmcLcLPhotongRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__Dict_485_0_5, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLPhotoncOallocatorlEvhtmcLcLPhotongRsPgRcLcLiteratorgR), G__defined_typename("vector<vhtm::Photon,allocator<vhtm::Photon> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__Dict_485_0_6, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLPhotoncOallocatorlEvhtmcLcLPhotongRsPgRcLcLiteratorgR), G__defined_typename("vector<vhtm::Photon,allocator<vhtm::Photon> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__Dict_485_0_7, 107, -1, G__defined_typename("vector<vhtm::Photon,allocator<vhtm::Photon> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__Dict_485_0_8, 107, -1, G__defined_typename("vector<vhtm::Photon,allocator<vhtm::Photon> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_485_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vhtm::Photon,allocator<vhtm::Photon> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_485_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<vhtm::Photon,allocator<vhtm::Photon> >::size_type' 0 - sz u 'vhtm::Photon' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__Dict_485_0_11, 107, -1, G__defined_typename("vector<vhtm::Photon,allocator<vhtm::Photon> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__Dict_485_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_485_0_13, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLPhoton), G__defined_typename("vector<vhtm::Photon,allocator<vhtm::Photon> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vhtm::Photon,allocator<vhtm::Photon> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_485_0_14, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLPhoton), G__defined_typename("vector<vhtm::Photon,allocator<vhtm::Photon> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vhtm::Photon,allocator<vhtm::Photon> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vhtm::Photon,allocator<vhtm::Photon> >",4330,G__Dict_485_0_15, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLPhotoncOallocatorlEvhtmcLcLPhotongRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vhtm::Photon,allocator<vhtm::Photon> >",4330,G__Dict_485_0_16, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLPhotoncOallocatorlEvhtmcLcLPhotongRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<vhtm::Photon,allocator<vhtm::Photon> >::size_type' 0 - n u 'vhtm::Photon' - 11 'vhtm::Photon()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vhtm::Photon,allocator<vhtm::Photon> >",4330,G__Dict_485_0_17, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLPhotoncOallocatorlEvhtmcLcLPhotongRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<vhtm::Photon,allocator<vhtm::Photon> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vhtm::Photon,allocator<vhtm::Photon> >",4330,G__Dict_485_0_18, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLPhotoncOallocatorlEvhtmcLcLPhotongRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<vhtm::Photon,allocator<vhtm::Photon> >::iterator' 'vector<vhtm::Photon,allocator<vhtm::Photon> >::const_iterator' 10 - first u 'vector<vhtm::Photon,allocator<vhtm::Photon> >::iterator' 'vector<vhtm::Photon,allocator<vhtm::Photon> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__Dict_485_0_19, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLPhotoncOallocatorlEvhtmcLcLPhotongRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<vhtm::Photon,allocator<vhtm::Photon> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__Dict_485_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vhtm::Photon,allocator<vhtm::Photon> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__Dict_485_0_21, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLPhoton), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__Dict_485_0_22, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLPhoton), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__Dict_485_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vhtm::Photon' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__Dict_485_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vhtm::Photon,allocator<vhtm::Photon> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_485_0_25, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLPhotoncOallocatorlEvhtmcLcLPhotongRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<vhtm::Photon,allocator<vhtm::Photon> >::iterator' - 0 - position u 'vhtm::Photon' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_485_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vhtm::Photon,allocator<vhtm::Photon> >::iterator' - 0 - position u 'vector<vhtm::Photon,allocator<vhtm::Photon> >::iterator' 'vector<vhtm::Photon,allocator<vhtm::Photon> >::const_iterator' 10 - first "
"u 'vector<vhtm::Photon,allocator<vhtm::Photon> >::iterator' 'vector<vhtm::Photon,allocator<vhtm::Photon> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_485_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vhtm::Photon,allocator<vhtm::Photon> >::iterator' - 0 - position k - 'vector<vhtm::Photon,allocator<vhtm::Photon> >::size_type' 0 - n "
"u 'vhtm::Photon' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__Dict_485_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_485_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vhtm::Photon,allocator<vhtm::Photon> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_485_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<vhtm::Photon,allocator<vhtm::Photon> >::iterator' - 0 - first u 'vector<vhtm::Photon,allocator<vhtm::Photon> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__Dict_485_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<vhtm::Photon,allocator<vhtm::Photon> >", 4456, G__Dict_485_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEvhtmcLcLTriggerObjectcOallocatorlEvhtmcLcLTriggerObjectgRsPgR(void) {
   /* vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLTriggerObjectcOallocatorlEvhtmcLcLTriggerObjectgRsPgR));
   G__memfunc_setup("at",213,G__Dict_489_0_1, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLTriggerObject), G__defined_typename("vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__Dict_489_0_2, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLTriggerObject), G__defined_typename("vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__Dict_489_0_3, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLTriggerObjectcOallocatorlEvhtmcLcLTriggerObjectgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__Dict_489_0_4, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLTriggerObjectcOallocatorlEvhtmcLcLTriggerObjectgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__Dict_489_0_5, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLTriggerObjectcOallocatorlEvhtmcLcLTriggerObjectgRsPgRcLcLiteratorgR), G__defined_typename("vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__Dict_489_0_6, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLTriggerObjectcOallocatorlEvhtmcLcLTriggerObjectgRsPgRcLcLiteratorgR), G__defined_typename("vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__Dict_489_0_7, 107, -1, G__defined_typename("vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__Dict_489_0_8, 107, -1, G__defined_typename("vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_489_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_489_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::size_type' 0 - sz u 'vhtm::TriggerObject' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__Dict_489_0_11, 107, -1, G__defined_typename("vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__Dict_489_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_489_0_13, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLTriggerObject), G__defined_typename("vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_489_0_14, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLTriggerObject), G__defined_typename("vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >",5712,G__Dict_489_0_15, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLTriggerObjectcOallocatorlEvhtmcLcLTriggerObjectgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >",5712,G__Dict_489_0_16, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLTriggerObjectcOallocatorlEvhtmcLcLTriggerObjectgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::size_type' 0 - n u 'vhtm::TriggerObject' - 11 'vhtm::TriggerObject()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >",5712,G__Dict_489_0_17, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLTriggerObjectcOallocatorlEvhtmcLcLTriggerObjectgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >",5712,G__Dict_489_0_18, 105, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLTriggerObjectcOallocatorlEvhtmcLcLTriggerObjectgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::iterator' 'vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::const_iterator' 10 - first u 'vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::iterator' 'vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__Dict_489_0_19, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLTriggerObjectcOallocatorlEvhtmcLcLTriggerObjectgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__Dict_489_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__Dict_489_0_21, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLTriggerObject), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__Dict_489_0_22, 117, G__get_linked_tagnum(&G__DictLN_vhtmcLcLTriggerObject), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__Dict_489_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vhtm::TriggerObject' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__Dict_489_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_489_0_25, 117, G__get_linked_tagnum(&G__DictLN_vectorlEvhtmcLcLTriggerObjectcOallocatorlEvhtmcLcLTriggerObjectgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::iterator' - 0 - position u 'vhtm::TriggerObject' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_489_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::iterator' - 0 - position u 'vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::iterator' 'vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::const_iterator' 10 - first "
"u 'vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::iterator' 'vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_489_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::iterator' - 0 - position k - 'vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::size_type' 0 - n "
"u 'vhtm::TriggerObject' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__Dict_489_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_489_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_489_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::iterator' - 0 - first u 'vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__Dict_489_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >", 5838, G__Dict_489_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlEstringcOallocatorlEstringgRsPgR(void) {
   /* vector<string,allocator<string> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__memfunc_setup("at",213,G__Dict_493_0_1, 117, G__get_linked_tagnum(&G__DictLN_string), G__defined_typename("vector<string,allocator<string> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<string,allocator<string> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__Dict_493_0_2, 117, G__get_linked_tagnum(&G__DictLN_string), G__defined_typename("vector<string,allocator<string> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<string,allocator<string> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__Dict_493_0_3, 117, G__get_linked_tagnum(&G__DictLN_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__Dict_493_0_4, 117, G__get_linked_tagnum(&G__DictLN_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__Dict_493_0_5, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR), G__defined_typename("vector<string,allocator<string> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__Dict_493_0_6, 117, G__get_linked_tagnum(&G__DictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR), G__defined_typename("vector<string,allocator<string> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__Dict_493_0_7, 107, -1, G__defined_typename("vector<string,allocator<string> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__Dict_493_0_8, 107, -1, G__defined_typename("vector<string,allocator<string> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_493_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<string,allocator<string> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__Dict_493_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<string,allocator<string> >::size_type' 0 - sz u 'string' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__Dict_493_0_11, 107, -1, G__defined_typename("vector<string,allocator<string> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__Dict_493_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_493_0_13, 117, G__get_linked_tagnum(&G__DictLN_string), G__defined_typename("vector<string,allocator<string> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<string,allocator<string> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__Dict_493_0_14, 117, G__get_linked_tagnum(&G__DictLN_string), G__defined_typename("vector<string,allocator<string> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<string,allocator<string> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<string,allocator<string> >",3266,G__Dict_493_0_15, 105, G__get_linked_tagnum(&G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<string,allocator<string> >",3266,G__Dict_493_0_16, 105, G__get_linked_tagnum(&G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<string,allocator<string> >::size_type' 0 - n u 'string' - 11 'string()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<string,allocator<string> >",3266,G__Dict_493_0_17, 105, G__get_linked_tagnum(&G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<string,allocator<string> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<string,allocator<string> >",3266,G__Dict_493_0_18, 105, G__get_linked_tagnum(&G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<string,allocator<string> >::iterator' 'vector<string,allocator<string> >::const_iterator' 10 - first u 'vector<string,allocator<string> >::iterator' 'vector<string,allocator<string> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__Dict_493_0_19, 117, G__get_linked_tagnum(&G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<string,allocator<string> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__Dict_493_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<string,allocator<string> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__Dict_493_0_21, 117, G__get_linked_tagnum(&G__DictLN_string), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__Dict_493_0_22, 117, G__get_linked_tagnum(&G__DictLN_string), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__Dict_493_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__Dict_493_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<string,allocator<string> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_493_0_25, 117, G__get_linked_tagnum(&G__DictLN_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<string,allocator<string> >::iterator' - 0 - position u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_493_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<string,allocator<string> >::iterator' - 0 - position u 'vector<string,allocator<string> >::iterator' 'vector<string,allocator<string> >::const_iterator' 10 - first "
"u 'vector<string,allocator<string> >::iterator' 'vector<string,allocator<string> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__Dict_493_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<string,allocator<string> >::iterator' - 0 - position k - 'vector<string,allocator<string> >::size_type' 0 - n "
"u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__Dict_493_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_493_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<string,allocator<string> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__Dict_493_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<string,allocator<string> >::iterator' - 0 - first u 'vector<string,allocator<string> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__Dict_493_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<string,allocator<string> >", 3392, G__Dict_493_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__DictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__DictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__DictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__DictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator = { "vector<double,allocator<double> >::iterator" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<double,allocator<double> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_lesslEstringgR = { "less<string>" , 115 , -1 };
G__linked_taginfo G__DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR = { "map<string,float,less<string>,allocator<pair<const string,float> > >" , 99 , -1 };
G__linked_taginfo G__DictLN_lesslEdoublegR = { "less<double>" , 115 , -1 };
G__linked_taginfo G__DictLN_vhtm = { "vhtm" , 110 , -1 };
G__linked_taginfo G__DictLN_vhtmcLcLCandidate = { "vhtm::Candidate" , 99 , -1 };
G__linked_taginfo G__DictLN_vhtmcLcLEvent = { "vhtm::Event" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vhtmcLcLGenEvent = { "vhtm::GenEvent" , 99 , -1 };
G__linked_taginfo G__DictLN_vhtmcLcLElectron = { "vhtm::Electron" , 99 , -1 };
G__linked_taginfo G__DictLN_vhtmcLcLGenParticle = { "vhtm::GenParticle" , 99 , -1 };
G__linked_taginfo G__DictLN_vhtmcLcLGenJet = { "vhtm::GenJet" , 99 , -1 };
G__linked_taginfo G__DictLN_vhtmcLcLMET = { "vhtm::MET" , 99 , -1 };
G__linked_taginfo G__DictLN_vhtmcLcLTau = { "vhtm::Tau" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvhtmcLcLCandidatecOallocatorlEvhtmcLcLCandidategRsPgR = { "vector<vhtm::Candidate,allocator<vhtm::Candidate> >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvhtmcLcLCandidatecOallocatorlEvhtmcLcLCandidategRsPgRcLcLiterator = { "vector<vhtm::Candidate,allocator<vhtm::Candidate> >::iterator" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLCandidatecOallocatorlEvhtmcLcLCandidategRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vhtm::Candidate,allocator<vhtm::Candidate> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vhtmcLcLMuon = { "vhtm::Muon" , 99 , -1 };
G__linked_taginfo G__DictLN_allocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR = { "allocator<pair<const double,vector<double,allocator<double> > > >" , 99 , -1 };
G__linked_taginfo G__DictLN_maplEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR = { "map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >" , 99 , -1 };
G__linked_taginfo G__DictLN_pairlEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgR = { "pair<double,vector<double,allocator<double> > >" , 115 , -1 };
G__linked_taginfo G__DictLN_maplEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRcLcLiterator = { "map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::iterator" , 99 , -1 };
G__linked_taginfo G__DictLN_maplEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRcLcLreverse_iterator = { "map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::reverse_iterator" , 99 , -1 };
G__linked_taginfo G__DictLN_pairlEmaplEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRcLcLiteratorcOboolgR = { "pair<map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >::iterator,bool>" , 115 , -1 };
G__linked_taginfo G__DictLN_vhtmcLcLJet = { "vhtm::Jet" , 99 , -1 };
G__linked_taginfo G__DictLN_vhtmcLcLVertex = { "vhtm::Vertex" , 99 , -1 };
G__linked_taginfo G__DictLN_vhtmcLcLGenMET = { "vhtm::GenMET" , 99 , -1 };
G__linked_taginfo G__DictLN_vhtmcLcLTriggerObject = { "vhtm::TriggerObject" , 99 , -1 };
G__linked_taginfo G__DictLN_allocatorlEpairlEconstsPstringcOunsignedsPintgRsPgR = { "allocator<pair<const string,unsigned int> >" , 99 , -1 };
G__linked_taginfo G__DictLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgR = { "map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >" , 99 , -1 };
G__linked_taginfo G__DictLN_pairlEstringcOunsignedsPintgR = { "pair<string,unsigned int>" , 115 , -1 };
G__linked_taginfo G__DictLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgRcLcLiterator = { "map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::iterator" , 99 , -1 };
G__linked_taginfo G__DictLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgRcLcLreverse_iterator = { "map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::reverse_iterator" , 99 , -1 };
G__linked_taginfo G__DictLN_pairlEmaplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgRcLcLiteratorcOboolgR = { "pair<map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >::iterator,bool>" , 115 , -1 };
G__linked_taginfo G__DictLN_vhtmcLcLPhoton = { "vhtm::Photon" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvhtmcLcLEventcOallocatorlEvhtmcLcLEventgRsPgR = { "vector<vhtm::Event,allocator<vhtm::Event> >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvhtmcLcLEventcOallocatorlEvhtmcLcLEventgRsPgRcLcLiterator = { "vector<vhtm::Event,allocator<vhtm::Event> >::iterator" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLEventcOallocatorlEvhtmcLcLEventgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vhtm::Event,allocator<vhtm::Event> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvhtmcLcLGenEventcOallocatorlEvhtmcLcLGenEventgRsPgR = { "vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvhtmcLcLGenEventcOallocatorlEvhtmcLcLGenEventgRsPgRcLcLiterator = { "vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::iterator" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLGenEventcOallocatorlEvhtmcLcLGenEventgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvhtmcLcLElectroncOallocatorlEvhtmcLcLElectrongRsPgR = { "vector<vhtm::Electron,allocator<vhtm::Electron> >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvhtmcLcLElectroncOallocatorlEvhtmcLcLElectrongRsPgRcLcLiterator = { "vector<vhtm::Electron,allocator<vhtm::Electron> >::iterator" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLElectroncOallocatorlEvhtmcLcLElectrongRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vhtm::Electron,allocator<vhtm::Electron> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvhtmcLcLGenParticlecOallocatorlEvhtmcLcLGenParticlegRsPgR = { "vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvhtmcLcLGenParticlecOallocatorlEvhtmcLcLGenParticlegRsPgRcLcLiterator = { "vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::iterator" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLGenParticlecOallocatorlEvhtmcLcLGenParticlegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvhtmcLcLGenJetcOallocatorlEvhtmcLcLGenJetgRsPgR = { "vector<vhtm::GenJet,allocator<vhtm::GenJet> >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvhtmcLcLGenJetcOallocatorlEvhtmcLcLGenJetgRsPgRcLcLiterator = { "vector<vhtm::GenJet,allocator<vhtm::GenJet> >::iterator" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLGenJetcOallocatorlEvhtmcLcLGenJetgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vhtm::GenJet,allocator<vhtm::GenJet> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvhtmcLcLGenMETcOallocatorlEvhtmcLcLGenMETgRsPgR = { "vector<vhtm::GenMET,allocator<vhtm::GenMET> >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvhtmcLcLGenMETcOallocatorlEvhtmcLcLGenMETgRsPgRcLcLiterator = { "vector<vhtm::GenMET,allocator<vhtm::GenMET> >::iterator" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLGenMETcOallocatorlEvhtmcLcLGenMETgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vhtm::GenMET,allocator<vhtm::GenMET> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvhtmcLcLMETcOallocatorlEvhtmcLcLMETgRsPgR = { "vector<vhtm::MET,allocator<vhtm::MET> >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvhtmcLcLMETcOallocatorlEvhtmcLcLMETgRsPgRcLcLiterator = { "vector<vhtm::MET,allocator<vhtm::MET> >::iterator" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLMETcOallocatorlEvhtmcLcLMETgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vhtm::MET,allocator<vhtm::MET> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvhtmcLcLTaucOallocatorlEvhtmcLcLTaugRsPgR = { "vector<vhtm::Tau,allocator<vhtm::Tau> >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvhtmcLcLTaucOallocatorlEvhtmcLcLTaugRsPgRcLcLiterator = { "vector<vhtm::Tau,allocator<vhtm::Tau> >::iterator" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLTaucOallocatorlEvhtmcLcLTaugRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vhtm::Tau,allocator<vhtm::Tau> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvhtmcLcLMuoncOallocatorlEvhtmcLcLMuongRsPgR = { "vector<vhtm::Muon,allocator<vhtm::Muon> >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvhtmcLcLMuoncOallocatorlEvhtmcLcLMuongRsPgRcLcLiterator = { "vector<vhtm::Muon,allocator<vhtm::Muon> >::iterator" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLMuoncOallocatorlEvhtmcLcLMuongRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vhtm::Muon,allocator<vhtm::Muon> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvhtmcLcLJetcOallocatorlEvhtmcLcLJetgRsPgR = { "vector<vhtm::Jet,allocator<vhtm::Jet> >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvhtmcLcLJetcOallocatorlEvhtmcLcLJetgRsPgRcLcLiterator = { "vector<vhtm::Jet,allocator<vhtm::Jet> >::iterator" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLJetcOallocatorlEvhtmcLcLJetgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vhtm::Jet,allocator<vhtm::Jet> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvhtmcLcLVertexcOallocatorlEvhtmcLcLVertexgRsPgR = { "vector<vhtm::Vertex,allocator<vhtm::Vertex> >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvhtmcLcLVertexcOallocatorlEvhtmcLcLVertexgRsPgRcLcLiterator = { "vector<vhtm::Vertex,allocator<vhtm::Vertex> >::iterator" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLVertexcOallocatorlEvhtmcLcLVertexgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vhtm::Vertex,allocator<vhtm::Vertex> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvhtmcLcLPhotoncOallocatorlEvhtmcLcLPhotongRsPgR = { "vector<vhtm::Photon,allocator<vhtm::Photon> >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvhtmcLcLPhotoncOallocatorlEvhtmcLcLPhotongRsPgRcLcLiterator = { "vector<vhtm::Photon,allocator<vhtm::Photon> >::iterator" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLPhotoncOallocatorlEvhtmcLcLPhotongRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vhtm::Photon,allocator<vhtm::Photon> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvhtmcLcLTriggerObjectcOallocatorlEvhtmcLcLTriggerObjectgRsPgR = { "vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEvhtmcLcLTriggerObjectcOallocatorlEvhtmcLcLTriggerObjectgRsPgRcLcLiterator = { "vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::iterator" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLTriggerObjectcOallocatorlEvhtmcLcLTriggerObjectgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__DictLN_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator = { "vector<string,allocator<string> >::iterator" , 99 , -1 };
G__linked_taginfo G__DictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableDict() {
  G__DictLN_TClass.tagnum = -1 ;
  G__DictLN_TBuffer.tagnum = -1 ;
  G__DictLN_TMemberInspector.tagnum = -1 ;
  G__DictLN_TObject.tagnum = -1 ;
  G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_string.tagnum = -1 ;
  G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_lesslEstringgR.tagnum = -1 ;
  G__DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_lesslEdoublegR.tagnum = -1 ;
  G__DictLN_vhtm.tagnum = -1 ;
  G__DictLN_vhtmcLcLCandidate.tagnum = -1 ;
  G__DictLN_vhtmcLcLEvent.tagnum = -1 ;
  G__DictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vhtmcLcLGenEvent.tagnum = -1 ;
  G__DictLN_vhtmcLcLElectron.tagnum = -1 ;
  G__DictLN_vhtmcLcLGenParticle.tagnum = -1 ;
  G__DictLN_vhtmcLcLGenJet.tagnum = -1 ;
  G__DictLN_vhtmcLcLMET.tagnum = -1 ;
  G__DictLN_vhtmcLcLTau.tagnum = -1 ;
  G__DictLN_vectorlEvhtmcLcLCandidatecOallocatorlEvhtmcLcLCandidategRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEvhtmcLcLCandidatecOallocatorlEvhtmcLcLCandidategRsPgRcLcLiterator.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLCandidatecOallocatorlEvhtmcLcLCandidategRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vhtmcLcLMuon.tagnum = -1 ;
  G__DictLN_allocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_maplEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_pairlEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgR.tagnum = -1 ;
  G__DictLN_maplEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__DictLN_maplEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRcLcLreverse_iterator.tagnum = -1 ;
  G__DictLN_pairlEmaplEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRcLcLiteratorcOboolgR.tagnum = -1 ;
  G__DictLN_vhtmcLcLJet.tagnum = -1 ;
  G__DictLN_vhtmcLcLVertex.tagnum = -1 ;
  G__DictLN_vhtmcLcLGenMET.tagnum = -1 ;
  G__DictLN_vhtmcLcLTriggerObject.tagnum = -1 ;
  G__DictLN_allocatorlEpairlEconstsPstringcOunsignedsPintgRsPgR.tagnum = -1 ;
  G__DictLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgR.tagnum = -1 ;
  G__DictLN_pairlEstringcOunsignedsPintgR.tagnum = -1 ;
  G__DictLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__DictLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgRcLcLreverse_iterator.tagnum = -1 ;
  G__DictLN_pairlEmaplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgRcLcLiteratorcOboolgR.tagnum = -1 ;
  G__DictLN_vhtmcLcLPhoton.tagnum = -1 ;
  G__DictLN_vectorlEvhtmcLcLEventcOallocatorlEvhtmcLcLEventgRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEvhtmcLcLEventcOallocatorlEvhtmcLcLEventgRsPgRcLcLiterator.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLEventcOallocatorlEvhtmcLcLEventgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlEvhtmcLcLGenEventcOallocatorlEvhtmcLcLGenEventgRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEvhtmcLcLGenEventcOallocatorlEvhtmcLcLGenEventgRsPgRcLcLiterator.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLGenEventcOallocatorlEvhtmcLcLGenEventgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlEvhtmcLcLElectroncOallocatorlEvhtmcLcLElectrongRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEvhtmcLcLElectroncOallocatorlEvhtmcLcLElectrongRsPgRcLcLiterator.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLElectroncOallocatorlEvhtmcLcLElectrongRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlEvhtmcLcLGenParticlecOallocatorlEvhtmcLcLGenParticlegRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEvhtmcLcLGenParticlecOallocatorlEvhtmcLcLGenParticlegRsPgRcLcLiterator.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLGenParticlecOallocatorlEvhtmcLcLGenParticlegRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlEvhtmcLcLGenJetcOallocatorlEvhtmcLcLGenJetgRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEvhtmcLcLGenJetcOallocatorlEvhtmcLcLGenJetgRsPgRcLcLiterator.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLGenJetcOallocatorlEvhtmcLcLGenJetgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlEvhtmcLcLGenMETcOallocatorlEvhtmcLcLGenMETgRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEvhtmcLcLGenMETcOallocatorlEvhtmcLcLGenMETgRsPgRcLcLiterator.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLGenMETcOallocatorlEvhtmcLcLGenMETgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlEvhtmcLcLMETcOallocatorlEvhtmcLcLMETgRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEvhtmcLcLMETcOallocatorlEvhtmcLcLMETgRsPgRcLcLiterator.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLMETcOallocatorlEvhtmcLcLMETgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlEvhtmcLcLTaucOallocatorlEvhtmcLcLTaugRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEvhtmcLcLTaucOallocatorlEvhtmcLcLTaugRsPgRcLcLiterator.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLTaucOallocatorlEvhtmcLcLTaugRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlEvhtmcLcLMuoncOallocatorlEvhtmcLcLMuongRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEvhtmcLcLMuoncOallocatorlEvhtmcLcLMuongRsPgRcLcLiterator.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLMuoncOallocatorlEvhtmcLcLMuongRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlEvhtmcLcLJetcOallocatorlEvhtmcLcLJetgRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEvhtmcLcLJetcOallocatorlEvhtmcLcLJetgRsPgRcLcLiterator.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLJetcOallocatorlEvhtmcLcLJetgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlEvhtmcLcLVertexcOallocatorlEvhtmcLcLVertexgRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEvhtmcLcLVertexcOallocatorlEvhtmcLcLVertexgRsPgRcLcLiterator.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLVertexcOallocatorlEvhtmcLcLVertexgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlEvhtmcLcLPhotoncOallocatorlEvhtmcLcLPhotongRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEvhtmcLcLPhotoncOallocatorlEvhtmcLcLPhotongRsPgRcLcLiterator.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLPhotoncOallocatorlEvhtmcLcLPhotongRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlEvhtmcLcLTriggerObjectcOallocatorlEvhtmcLcLTriggerObjectgRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEvhtmcLcLTriggerObjectcOallocatorlEvhtmcLcLTriggerObjectgRsPgRcLcLiterator.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLTriggerObjectcOallocatorlEvhtmcLcLTriggerObjectgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__DictLN_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator.tagnum = -1 ;
  G__DictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__DictLN_TClass);
   G__get_linked_tagnum_fwd(&G__DictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__DictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__DictLN_TObject);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,-1,298752,(char*)NULL,NULL,NULL);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEdoublecOallocatorlEdoublegRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEdoublecOallocatorlEdoublegRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_string);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictLN_lesslEstringgR);
   G__get_linked_tagnum_fwd(&G__DictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_lesslEdoublegR);
   G__get_linked_tagnum_fwd(&G__DictLN_vhtm);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_vhtmcLcLCandidate),sizeof(vhtm::Candidate),-1,324864,(char*)NULL,G__setup_memvarvhtmcLcLCandidate,G__setup_memfuncvhtmcLcLCandidate);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_vhtmcLcLEvent),sizeof(vhtm::Event),-1,292096,(char*)NULL,G__setup_memvarvhtmcLcLEvent,G__setup_memfuncvhtmcLcLEvent);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_vhtmcLcLGenEvent),sizeof(vhtm::GenEvent),-1,292096,(char*)NULL,G__setup_memvarvhtmcLcLGenEvent,G__setup_memfuncvhtmcLcLGenEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_vhtmcLcLElectron),sizeof(vhtm::Electron),-1,292096,(char*)NULL,G__setup_memvarvhtmcLcLElectron,G__setup_memfuncvhtmcLcLElectron);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_vhtmcLcLGenParticle),sizeof(vhtm::GenParticle),-1,292096,(char*)NULL,G__setup_memvarvhtmcLcLGenParticle,G__setup_memfuncvhtmcLcLGenParticle);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_vhtmcLcLGenJet),sizeof(vhtm::GenJet),-1,292096,(char*)NULL,G__setup_memvarvhtmcLcLGenJet,G__setup_memfuncvhtmcLcLGenJet);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_vhtmcLcLMET),sizeof(vhtm::MET),-1,292096,(char*)NULL,G__setup_memvarvhtmcLcLMET,G__setup_memfuncvhtmcLcLMET);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_vhtmcLcLTau),sizeof(vhtm::Tau),-1,292096,(char*)NULL,G__setup_memvarvhtmcLcLTau,G__setup_memfuncvhtmcLcLTau);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvhtmcLcLCandidatecOallocatorlEvhtmcLcLCandidategRsPgR),sizeof(vector<vhtm::Candidate,allocator<vhtm::Candidate> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEvhtmcLcLCandidatecOallocatorlEvhtmcLcLCandidategRsPgR,G__setup_memfuncvectorlEvhtmcLcLCandidatecOallocatorlEvhtmcLcLCandidategRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvhtmcLcLCandidatecOallocatorlEvhtmcLcLCandidategRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLCandidatecOallocatorlEvhtmcLcLCandidategRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_vhtmcLcLMuon),sizeof(vhtm::Muon),-1,292096,(char*)NULL,G__setup_memvarvhtmcLcLMuon,G__setup_memfuncvhtmcLcLMuon);
   G__get_linked_tagnum_fwd(&G__DictLN_allocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_maplEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR),sizeof(map<double,vector<double,allocator<double> >,less<double>,allocator<pair<const double,vector<double,allocator<double> > > > >),-1,298752,(char*)NULL,G__setup_memvarmaplEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR,G__setup_memfuncmaplEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_pairlEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_maplEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DictLN_maplEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRcLcLreverse_iterator);
   G__get_linked_tagnum_fwd(&G__DictLN_pairlEmaplEdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRcLcLiteratorcOboolgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_vhtmcLcLJet),sizeof(vhtm::Jet),-1,292096,(char*)NULL,G__setup_memvarvhtmcLcLJet,G__setup_memfuncvhtmcLcLJet);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_vhtmcLcLVertex),sizeof(vhtm::Vertex),-1,292096,(char*)NULL,G__setup_memvarvhtmcLcLVertex,G__setup_memfuncvhtmcLcLVertex);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_vhtmcLcLGenMET),sizeof(vhtm::GenMET),-1,292096,(char*)NULL,G__setup_memvarvhtmcLcLGenMET,G__setup_memfuncvhtmcLcLGenMET);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_vhtmcLcLTriggerObject),sizeof(vhtm::TriggerObject),-1,292096,(char*)NULL,G__setup_memvarvhtmcLcLTriggerObject,G__setup_memfuncvhtmcLcLTriggerObject);
   G__get_linked_tagnum_fwd(&G__DictLN_allocatorlEpairlEconstsPstringcOunsignedsPintgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgR),sizeof(map<string,unsigned int,less<string>,allocator<pair<const string,unsigned int> > >),-1,298752,(char*)NULL,G__setup_memvarmaplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgR,G__setup_memfuncmaplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_pairlEstringcOunsignedsPintgR),sizeof(pair<string,unsigned int>),-1,297216,(char*)NULL,G__setup_memvarpairlEstringcOunsignedsPintgR,G__setup_memfuncpairlEstringcOunsignedsPintgR);
   G__get_linked_tagnum_fwd(&G__DictLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DictLN_maplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgRcLcLreverse_iterator);
   G__get_linked_tagnum_fwd(&G__DictLN_pairlEmaplEstringcOunsignedsPintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOunsignedsPintgRsPgRsPgRcLcLiteratorcOboolgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_vhtmcLcLPhoton),sizeof(vhtm::Photon),-1,292096,(char*)NULL,G__setup_memvarvhtmcLcLPhoton,G__setup_memfuncvhtmcLcLPhoton);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvhtmcLcLEventcOallocatorlEvhtmcLcLEventgRsPgR),sizeof(vector<vhtm::Event,allocator<vhtm::Event> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEvhtmcLcLEventcOallocatorlEvhtmcLcLEventgRsPgR,G__setup_memfuncvectorlEvhtmcLcLEventcOallocatorlEvhtmcLcLEventgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvhtmcLcLEventcOallocatorlEvhtmcLcLEventgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLEventcOallocatorlEvhtmcLcLEventgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvhtmcLcLGenEventcOallocatorlEvhtmcLcLGenEventgRsPgR),sizeof(vector<vhtm::GenEvent,allocator<vhtm::GenEvent> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEvhtmcLcLGenEventcOallocatorlEvhtmcLcLGenEventgRsPgR,G__setup_memfuncvectorlEvhtmcLcLGenEventcOallocatorlEvhtmcLcLGenEventgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvhtmcLcLGenEventcOallocatorlEvhtmcLcLGenEventgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLGenEventcOallocatorlEvhtmcLcLGenEventgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvhtmcLcLElectroncOallocatorlEvhtmcLcLElectrongRsPgR),sizeof(vector<vhtm::Electron,allocator<vhtm::Electron> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEvhtmcLcLElectroncOallocatorlEvhtmcLcLElectrongRsPgR,G__setup_memfuncvectorlEvhtmcLcLElectroncOallocatorlEvhtmcLcLElectrongRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvhtmcLcLElectroncOallocatorlEvhtmcLcLElectrongRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLElectroncOallocatorlEvhtmcLcLElectrongRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvhtmcLcLGenParticlecOallocatorlEvhtmcLcLGenParticlegRsPgR),sizeof(vector<vhtm::GenParticle,allocator<vhtm::GenParticle> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEvhtmcLcLGenParticlecOallocatorlEvhtmcLcLGenParticlegRsPgR,G__setup_memfuncvectorlEvhtmcLcLGenParticlecOallocatorlEvhtmcLcLGenParticlegRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvhtmcLcLGenParticlecOallocatorlEvhtmcLcLGenParticlegRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLGenParticlecOallocatorlEvhtmcLcLGenParticlegRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvhtmcLcLGenJetcOallocatorlEvhtmcLcLGenJetgRsPgR),sizeof(vector<vhtm::GenJet,allocator<vhtm::GenJet> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEvhtmcLcLGenJetcOallocatorlEvhtmcLcLGenJetgRsPgR,G__setup_memfuncvectorlEvhtmcLcLGenJetcOallocatorlEvhtmcLcLGenJetgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvhtmcLcLGenJetcOallocatorlEvhtmcLcLGenJetgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLGenJetcOallocatorlEvhtmcLcLGenJetgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvhtmcLcLGenMETcOallocatorlEvhtmcLcLGenMETgRsPgR),sizeof(vector<vhtm::GenMET,allocator<vhtm::GenMET> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEvhtmcLcLGenMETcOallocatorlEvhtmcLcLGenMETgRsPgR,G__setup_memfuncvectorlEvhtmcLcLGenMETcOallocatorlEvhtmcLcLGenMETgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvhtmcLcLGenMETcOallocatorlEvhtmcLcLGenMETgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLGenMETcOallocatorlEvhtmcLcLGenMETgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvhtmcLcLMETcOallocatorlEvhtmcLcLMETgRsPgR),sizeof(vector<vhtm::MET,allocator<vhtm::MET> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEvhtmcLcLMETcOallocatorlEvhtmcLcLMETgRsPgR,G__setup_memfuncvectorlEvhtmcLcLMETcOallocatorlEvhtmcLcLMETgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvhtmcLcLMETcOallocatorlEvhtmcLcLMETgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLMETcOallocatorlEvhtmcLcLMETgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvhtmcLcLTaucOallocatorlEvhtmcLcLTaugRsPgR),sizeof(vector<vhtm::Tau,allocator<vhtm::Tau> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEvhtmcLcLTaucOallocatorlEvhtmcLcLTaugRsPgR,G__setup_memfuncvectorlEvhtmcLcLTaucOallocatorlEvhtmcLcLTaugRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvhtmcLcLTaucOallocatorlEvhtmcLcLTaugRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLTaucOallocatorlEvhtmcLcLTaugRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvhtmcLcLMuoncOallocatorlEvhtmcLcLMuongRsPgR),sizeof(vector<vhtm::Muon,allocator<vhtm::Muon> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEvhtmcLcLMuoncOallocatorlEvhtmcLcLMuongRsPgR,G__setup_memfuncvectorlEvhtmcLcLMuoncOallocatorlEvhtmcLcLMuongRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvhtmcLcLMuoncOallocatorlEvhtmcLcLMuongRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLMuoncOallocatorlEvhtmcLcLMuongRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvhtmcLcLJetcOallocatorlEvhtmcLcLJetgRsPgR),sizeof(vector<vhtm::Jet,allocator<vhtm::Jet> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEvhtmcLcLJetcOallocatorlEvhtmcLcLJetgRsPgR,G__setup_memfuncvectorlEvhtmcLcLJetcOallocatorlEvhtmcLcLJetgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvhtmcLcLJetcOallocatorlEvhtmcLcLJetgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLJetcOallocatorlEvhtmcLcLJetgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvhtmcLcLVertexcOallocatorlEvhtmcLcLVertexgRsPgR),sizeof(vector<vhtm::Vertex,allocator<vhtm::Vertex> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEvhtmcLcLVertexcOallocatorlEvhtmcLcLVertexgRsPgR,G__setup_memfuncvectorlEvhtmcLcLVertexcOallocatorlEvhtmcLcLVertexgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvhtmcLcLVertexcOallocatorlEvhtmcLcLVertexgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLVertexcOallocatorlEvhtmcLcLVertexgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvhtmcLcLPhotoncOallocatorlEvhtmcLcLPhotongRsPgR),sizeof(vector<vhtm::Photon,allocator<vhtm::Photon> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEvhtmcLcLPhotoncOallocatorlEvhtmcLcLPhotongRsPgR,G__setup_memfuncvectorlEvhtmcLcLPhotoncOallocatorlEvhtmcLcLPhotongRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvhtmcLcLPhotoncOallocatorlEvhtmcLcLPhotongRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLPhotoncOallocatorlEvhtmcLcLPhotongRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvhtmcLcLTriggerObjectcOallocatorlEvhtmcLcLTriggerObjectgRsPgR),sizeof(vector<vhtm::TriggerObject,allocator<vhtm::TriggerObject> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEvhtmcLcLTriggerObjectcOallocatorlEvhtmcLcLTriggerObjectgRsPgR,G__setup_memfuncvectorlEvhtmcLcLTriggerObjectcOallocatorlEvhtmcLcLTriggerObjectgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEvhtmcLcLTriggerObjectcOallocatorlEvhtmcLcLTriggerObjectgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEvhtmcLcLTriggerObjectcOallocatorlEvhtmcLcLTriggerObjectgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictLN_vectorlEstringcOallocatorlEstringgRsPgR),sizeof(vector<string,allocator<string> >),-1,298752,(char*)NULL,G__setup_memvarvectorlEstringcOallocatorlEstringgRsPgR,G__setup_memfuncvectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictLN_vectorlEstringcOallocatorlEstringgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupDict()");
  G__set_cpp_environmentDict();
  G__cpp_setup_tagtableDict();

  G__cpp_setup_inheritanceDict();

  G__cpp_setup_typetableDict();

  G__cpp_setup_memvarDict();

  G__cpp_setup_memfuncDict();
  G__cpp_setup_globalDict();
  G__cpp_setup_funcDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncDict();
  return;
}
class G__cpp_setup_initDict {
  public:
    G__cpp_setup_initDict() { G__add_setup_func("Dict",(G__incsetup)(&G__cpp_setupDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initDict() { G__remove_setup_func("Dict"); }
};
G__cpp_setup_initDict G__cpp_setup_initializerDict;

